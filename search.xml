<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Welcome to my Blog</title>
    <url>/2022/10/01/lm379-s-blog/</url>
    <content><![CDATA[<h2 id="提示"><a href="#提示" class="headerlink" title="提示"></a>提示</h2><p>不建议来自<strong>中国大陆</strong>的用户使用<strong>国外公共DNS</strong>访问本站由于本站采用境内腾讯云CDN+境外vercel的策略，使用部分国外公共DNS会导致IP解析到境外增加延迟，因此建议国内用户使用境内DNS</p>
<blockquote>
<p>这两个站点采用的方案为境内腾讯云CDN+境外Cloudflare加速<br>若使用1.1.1.1等DNS会直接解析到CF的CDN节点<br><a href="https://pan.lm379.cn/">https://pan.lm379.cn</a><br><a href="https://cloud.lm379.cn/">https://cloud.lm379.cn</a></p>
</blockquote>
<h2 id="以下为腾讯公共DNS"><a href="#以下为腾讯公共DNS" class="headerlink" title="以下为腾讯公共DNS"></a>以下为腾讯公共DNS</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">IPv4: 119.29.29.29</span><br><span class="line">IPv6: 2402:4e00::</span><br><span class="line">DoH: https://doh.pub/dns-query</span><br><span class="line">DoH(国密): https://sm2.doh.pub/dns-query</span><br><span class="line">DoT: dot.pub</span><br></pre></td></tr></table></figure>

<h2 id="以下为使用不同DNS访问本站的延迟对比"><a href="#以下为使用不同DNS访问本站的延迟对比" class="headerlink" title="以下为使用不同DNS访问本站的延迟对比"></a>以下为使用不同DNS访问本站的延迟对比</h2><h3 id="运营商DNS"><a href="#运营商DNS" class="headerlink" title="运营商DNS"></a>运营商DNS</h3><p><img src="https://r2.lm379.cn/2024/05/d1cbe4437809d72b30f1ccd3f78194b5.png"></p>
<h3 id="腾讯公共DNS-119-29-29-29"><a href="#腾讯公共DNS-119-29-29-29" class="headerlink" title="腾讯公共DNS 119.29.29.29"></a>腾讯公共DNS 119.29.29.29</h3><p><img src="https://r2.lm379.cn/2024/05/e2196771600e9d58b8106bde8b3477b4.png"></p>
<h3 id="阿里公共DNS-223-5-5-5"><a href="#阿里公共DNS-223-5-5-5" class="headerlink" title="阿里公共DNS 223.5.5.5"></a>阿里公共DNS 223.5.5.5</h3><p><img src="https://r2.lm379.cn/2024/05/d95a3f50e7d378d10762af91c88614c5.png"></p>
<h3 id="谷歌公共DNS-8-8-8-8"><a href="#谷歌公共DNS-8-8-8-8" class="headerlink" title="谷歌公共DNS 8.8.8.8"></a>谷歌公共DNS 8.8.8.8</h3><p><img src="https://r2.lm379.cn/2024/05/f3a8f3b405b728c1a6524f6a2491efa2.png"></p>
<h3 id="Cloudflare公共DNS-1-1-1-1"><a href="#Cloudflare公共DNS-1-1-1-1" class="headerlink" title="Cloudflare公共DNS 1.1.1.1"></a>Cloudflare公共DNS 1.1.1.1</h3><p><img src="https://r2.lm379.cn/2024/05/344b4f3d126cd03f2ea38195a6481f61.png"></p>
<h3 id="Yandex公共DNS-77-88-8-88"><a href="#Yandex公共DNS-77-88-8-88" class="headerlink" title="Yandex公共DNS 77.88.8.88"></a>Yandex公共DNS 77.88.8.88</h3><p><img src="https://r2.lm379.cn/2024/05/8fcf97d5be43c23652d08122a99139f2.png"></p>
]]></content>
  </entry>
  <entry>
    <title>整理下一些公共服务镜像</title>
    <url>/2024/06/14/%E9%83%A8%E5%88%86%E5%85%AC%E5%85%B1%E6%9C%8D%E5%8A%A1%E9%95%9C%E5%83%8F/</url>
    <content><![CDATA[<h2 id="自建镜像"><a href="#自建镜像" class="headerlink" title="自建镜像"></a>自建镜像</h2><blockquote>
<p>最近新买了个域名，也就把大部分基于Cloudflare和Vercel自建的镜像都迁移到了这个域名下<br>以后各种乱七八糟的API和杂七杂八的网站都会慢慢迁移到这个域名下，主域名lm379.cn只放一些需要备案的东西和主要的网站。</p>
</blockquote>
<ul>
<li><p>短网址：<a href="https://w12.top/">https://w12.top</a>  </p>
</li>
<li><p>github加速：<a href="https://gh.w12.top/">https://gh.w12.top</a>  </p>
</li>
<li><p>docker镜像源：<a href="https://docker.w12.top/">https://docker.w12.top</a></p>
</li>
<li><p>网站反代：<a href="https://proxy.w12.top/">https://proxy.w12.top</a></p>
<blockquote>
<p>注意：部分网站会触发跨域错误</p>
</blockquote>
</li>
<li><p>PotPlayer B站插件弹幕服务：<a href="https://danmu.w12.top/">https://danmu.w12.top</a></p>
</li>
<li><p>IP查询API：</p>
<ul>
<li>IPV4&#x2F;IPV6：<a href="https://ip.w12.top/">https://ip.w12.top</a></li>
<li>IPV4 Only：<a href="https://v4.w12.top/">https://v4.w12.top</a></li>
<li>IPV6 Only：<a href="https://v6.w12.top/">https://v6.w12.top</a></li>
<li>geo格式：<a href="https://ip.w12.top/geo">https://ip.w12.top/geo</a></li>
</ul>
</li>
</ul>
<h2 id="公共镜像"><a href="#公共镜像" class="headerlink" title="公共镜像"></a>公共镜像</h2><h3 id="npm"><a href="#npm" class="headerlink" title="npm"></a>npm</h3><ul>
<li>阿里云：<a href="https://registry.npmmirror.com/">https://registry.npmmirror.com</a></li>
<li>腾讯云：<a href="https://mirrors.cloud.tencent.com/npm">https://mirrors.cloud.tencent.com/npm</a></li>
<li>腾讯云内网：<a href="https://mirrors.tencentyun.com/npm">https://mirrors.tencentyun.com/npm</a></li>
<li>华为云：<a href="https://mirrors.huaweicloud.com/repository/npm/">https://mirrors.huaweicloud.com/repository/npm/</a></li>
<li>饿了么：<a href="https://npm.elemecdn.com/">https://npm.elemecdn.com/</a></li>
<li>Zkeq：<a href="https://npm.onmicrosoft.cn/">https://npm.onmicrosoft.cn</a></li>
</ul>
<p>使用方法：<br>以阿里云镜像为例  </p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">npm config <span class="built_in">set</span> registry https://registry.npmmirror.com</span><br></pre></td></tr></table></figure>

<p>恢复默认：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">npm config <span class="built_in">set</span> registry https://registry.npmjs.org/</span><br></pre></td></tr></table></figure>

<h3 id="pypi"><a href="#pypi" class="headerlink" title="pypi"></a>pypi</h3><ul>
<li>阿里云：<a href="https://mirrors.aliyun.com/pypi/simple/">https://mirrors.aliyun.com/pypi/simple/</a></li>
<li>阿里云内网：<a href="https://mirrors.cloud.aliyuncs.com/pypi/simple/">https://mirrors.cloud.aliyuncs.com/pypi/simple/</a></li>
<li>腾讯云：<a href="https://mirrors.cloud.tencent.com/pypi/simple/">https://mirrors.cloud.tencent.com/pypi/simple/</a></li>
<li>腾讯云内网：<a href="https://mirrors.tencentyun.com/pypi/simple/">https://mirrors.tencentyun.com/pypi/simple/</a></li>
<li>清华大学：<a href="https://pypi.tuna.tsinghua.edu.cn/simple/">https://pypi.tuna.tsinghua.edu.cn/simple/</a></li>
</ul>
<p>使用方法：<br>以清华源为例</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">pip config <span class="built_in">set</span> global.index-url https://pypi.tuna.tsinghua.edu.cn/simple</span><br><span class="line">pip config <span class="built_in">set</span> install.trusted-host pypi.tuna.tsinghua.edu.cn</span><br></pre></td></tr></table></figure>

<h3 id="docker"><a href="#docker" class="headerlink" title="docker"></a>docker</h3><ul>
<li>腾讯云内网：<a href="https://mirror.ccs.tencentyun.com/">https://mirror.ccs.tencentyun.com</a></li>
<li>本站提供的镜像：<a href="https://docker.w12.top/">https://docker.w12.top</a></li>
</ul>
<p>使用方法：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">nano /etc/docker/daemon.json</span><br></pre></td></tr></table></figure>
<p>修改为：</p>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">   <span class="attr">&quot;registry-mirrors&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">   <span class="string">&quot;https://docker.w12.top&quot;</span></span><br><span class="line">  <span class="punctuation">]</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure>

<h3 id="jsdelivr"><a href="#jsdelivr" class="headerlink" title="jsdelivr"></a>jsdelivr</h3><ul>
<li>官方源(cloudflare)：<a href="https://cdn.jsdelivr.net/">https://cdn.jsdelivr.net</a></li>
<li>官方源(fastly)：<a href="https://fastly.jsdelivr.net/">https://fastly.jsdelivr.net</a></li>
<li>Zkeq：<a href="https://jsd.onmicrosoft.cn/">https://jsd.onmicrosoft.cn</a></li>
<li>jsd mirror：<a href="https://jsd.cdn.zzko.cn/">https://jsd.cdn.zzko.cn</a> |  <a href="https://cdn.jsdmirror.com/">https://cdn.jsdmirror.com</a></li>
</ul>
<h3 id="cdnjs"><a href="#cdnjs" class="headerlink" title="cdnjs"></a>cdnjs</h3><ul>
<li>官方源(cloudflare)：<a href="https://cdnjs.cloudflare.com/ajax/libs">https://cdnjs.cloudflare.com</a></li>
<li>南方科技大学：<a href="https://mirrors.sustech.edu.cn/cdnjs">https://mirrors.sustech.edu.cn/cdnjs</a></li>
<li>字节跳动：<a href="https://cdn.bytedance.com/">https://cdn.bytedance.com</a></li>
</ul>
<h2 id="其他镜像源"><a href="#其他镜像源" class="headerlink" title="其他镜像源"></a>其他镜像源</h2><ul>
<li>阿里云：<a href="https://mirrors.aliyun.com/">https://mirrors.aliyun.com/</a></li>
<li>阿里云内网：<a href="https://mirrors.cloud.aliyuncs.com/">https://mirrors.cloud.aliyuncs.com/</a></li>
<li>腾讯云：<a href="https://mirrors.cloud.tencent.com/">https://mirrors.cloud.tencent.com/</a></li>
<li>腾讯云内网：<a href="https://mirrors.tencentyun.com/">https://mirrors.tencentyun.com/</a></li>
<li>华为云：<a href="https://mirrors.huaweicloud.com/">https://mirrors.huaweicloud.com/</a></li>
<li>中国科学技术大学：<a href="https://mirrors.ustc.edu.cn/">https://mirrors.ustc.edu.cn/</a></li>
<li>北京交通大学：<a href="https://mirror.bjtu.edu.cn/">https://mirror.bjtu.edu.cn/</a></li>
<li>北京大学：<a href="https://mirrors.pku.edu.cn/">https://mirrors.pku.edu.cn/</a></li>
<li>清华大学：<a href="https://mirrors.tuna.tsinghua.edu.cn/">https://mirrors.tuna.tsinghua.edu.cn/</a></li>
<li>南方科技大学：<a href="https://mirrors.sustech.edu.cn/">https://mirrors.sustech.edu.cn/</a></li>
<li>上海交通大学：<a href="https://mirror.sjtu.edu.cn/">https://mirror.sjtu.edu.cn/</a></li>
</ul>
]]></content>
      <categories>
        <category>其他</category>
      </categories>
      <tags>
        <tag>docker</tag>
        <tag>镜像</tag>
        <tag>npm</tag>
        <tag>jsdelivr</tag>
        <tag>pypi</tag>
      </tags>
  </entry>
  <entry>
    <title>狐妖小红娘动漫全集</title>
    <url>/2024/06/02/%E7%8B%90%E5%A6%96%E5%B0%8F%E7%BA%A2%E5%A8%98%E5%8A%A8%E6%BC%AB%E5%85%A8%E9%9B%86/</url>
    <content><![CDATA[<hr>
<p><strong>喜报：狐妖小红娘镜花缘篇将于2024年暑期上线！！！</strong></p>
<blockquote>
<p>消息来源：狐妖小红娘官方微博 <a href="https://weibo.com/5616549369/OkKVtBlJ4">微博正文</a></p>
</blockquote>
<hr>
<h2 id="腾讯视频（全集）"><a href="#腾讯视频（全集）" class="headerlink" title="腾讯视频（全集）"></a>腾讯视频（全集）</h2><p><a href="https://v.qq.com/x/cover/0sdnyl7h86atoyt/f0157y2e83y.html">https://v.qq.com/x/cover/0sdnyl7h86atoyt/f0157y2e83y.html</a></p>
<h2 id="Bilibili（下沙到南国）"><a href="#Bilibili（下沙到南国）" class="headerlink" title="Bilibili（下沙到南国）"></a>Bilibili（下沙到南国）</h2><p><a href="https://www.bilibili.com/bangumi/play/ep63725">https://www.bilibili.com/bangumi/play/ep63725</a></p>
<h2 id="网盘分发"><a href="#网盘分发" class="headerlink" title="网盘分发"></a>网盘分发</h2><p><a href="https://pan.lm379.cn/Video/%E7%8B%90%E5%A6%96%E5%B0%8F%E7%BA%A2%E5%A8%98/">https://pan.lm379.cn/Video/狐妖小红娘/</a></p>
<p>想要转存？给我发邮件即可</p>
]]></content>
      <tags>
        <tag>动漫</tag>
        <tag>狐妖小红娘</tag>
      </tags>
  </entry>
  <entry>
    <title>一些免费IP查询API</title>
    <url>/2024/05/26/%E4%B8%80%E4%BA%9B%E5%85%8D%E8%B4%B9IP%E6%9F%A5%E8%AF%A2API/</url>
    <content><![CDATA[<blockquote>
<p>下文中所有本机IP均为代理IP地址或阿里云DNS地址，并非本人真实IP<br>没有特殊说明，返回格式均为json<br>未完待续</p>
</blockquote>
<h2 id="1-https-webapi-pc-meitu-com-common-ip-location"><a href="#1-https-webapi-pc-meitu-com-common-ip-location" class="headerlink" title="1. https://webapi-pc.meitu.com/common/ip_location"></a>1. <a href="https://webapi-pc.meitu.com/common/ip_location">https://webapi-pc.meitu.com/common/ip_location</a></h2><p>可选参数：ip</p>
<p>特点：</p>
<ul>
<li>支持查询指定IP地址</li>
<li>支持查询本机IP地址</li>
<li>支持ipv4和ipv6</li>
<li>查询中国大陆ip返回中文，海外ip英文</li>
<li>数据较为详细</li>
</ul>
<h3 id="示例"><a href="#示例" class="headerlink" title="示例"></a>示例</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">## 查询本机ip</span><br><span class="line">https://webapi-pc.meitu.com/common/ip_location</span><br><span class="line">## 查询指定ip</span><br><span class="line">https://webapi-pc.meitu.com/common/ip_location?ip=223.5.5.5</span><br></pre></td></tr></table></figure>

<h3 id="返回结果示例"><a href="#返回结果示例" class="headerlink" title="返回结果示例"></a>返回结果示例</h3><h4 id="境内ip"><a href="#境内ip" class="headerlink" title="境内ip"></a>境内ip</h4><figure class="highlight json"><table><tr><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;reqid&quot;</span><span class="punctuation">:</span> <span class="string">&quot;b40dad76-0770-4a9c-8f95-d6973b30f15e&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;code&quot;</span><span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;data&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;223.5.5.5&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;area_code&quot;</span><span class="punctuation">:</span> <span class="string">&quot;86&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;city&quot;</span><span class="punctuation">:</span> <span class="string">&quot;*&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;city_id&quot;</span><span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;continent&quot;</span><span class="punctuation">:</span> <span class="string">&quot;亚洲&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;continent_code&quot;</span><span class="punctuation">:</span> <span class="string">&quot;AP&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;country_id&quot;</span><span class="punctuation">:</span> <span class="number">100000</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;isp&quot;</span><span class="punctuation">:</span> <span class="string">&quot;阿里云&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;latitude&quot;</span><span class="punctuation">:</span> <span class="number">39.902798</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;longitude&quot;</span><span class="punctuation">:</span> <span class="number">116.401159</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;nation&quot;</span><span class="punctuation">:</span> <span class="string">&quot;中国&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;nation_code&quot;</span><span class="punctuation">:</span> <span class="string">&quot;CN&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;province&quot;</span><span class="punctuation">:</span> <span class="string">&quot;*&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;province_id&quot;</span><span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;subdivision_1_iso_code&quot;</span><span class="punctuation">:</span> <span class="string">&quot;*&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;subdivision_1_name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;*&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;subdivision_2_iso_code&quot;</span><span class="punctuation">:</span> <span class="string">&quot;*&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;subdivision_2_name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;*&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;time_zone&quot;</span><span class="punctuation">:</span> <span class="string">&quot;UTC+8&quot;</span></span><br><span class="line">        <span class="punctuation">&#125;</span></span><br><span class="line">    <span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure>

<h4 id="境外ip"><a href="#境外ip" class="headerlink" title="境外ip"></a>境外ip</h4><figure class="highlight json"><table><tr><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;reqid&quot;</span><span class="punctuation">:</span> <span class="string">&quot;345ae1cf-7eef-4bd5-8de9-c760b43af655&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;code&quot;</span><span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;data&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;205.178.182.66&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;area_code&quot;</span><span class="punctuation">:</span> <span class="string">&quot;*&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;city&quot;</span><span class="punctuation">:</span> <span class="string">&quot;New York City&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;city_id&quot;</span><span class="punctuation">:</span> <span class="number">18404833</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;continent&quot;</span><span class="punctuation">:</span> <span class="string">&quot;*&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;continent_code&quot;</span><span class="punctuation">:</span> <span class="string">&quot;NA&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;country_id&quot;</span><span class="punctuation">:</span> <span class="number">18400000</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;isp&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Tempest Hosting, LLC&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;latitude&quot;</span><span class="punctuation">:</span> <span class="number">40.71455</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;longitude&quot;</span><span class="punctuation">:</span> <span class="number">-74.007141</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;nation&quot;</span><span class="punctuation">:</span> <span class="string">&quot;United States&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;nation_code&quot;</span><span class="punctuation">:</span> <span class="string">&quot;US&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;province&quot;</span><span class="punctuation">:</span> <span class="string">&quot;New York&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;province_id&quot;</span><span class="punctuation">:</span> <span class="number">18404800</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;subdivision_1_iso_code&quot;</span><span class="punctuation">:</span> <span class="string">&quot;*&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;subdivision_1_name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;New York&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;subdivision_2_iso_code&quot;</span><span class="punctuation">:</span> <span class="string">&quot;*&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;subdivision_2_name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;New York City&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;time_zone&quot;</span><span class="punctuation">:</span> <span class="string">&quot;UTC-5&quot;</span></span><br><span class="line">        <span class="punctuation">&#125;</span></span><br><span class="line">    <span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure>

<h2 id="2-https-api-mir6-com-api-ip-json"><a href="#2-https-api-mir6-com-api-ip-json" class="headerlink" title="2. https://api.mir6.com/api/ip_json"></a>2. <a href="">https://api.mir6.com/api/ip_json</a></h2><p>可选参数：ip</p>
<p>特点：</p>
<ul>
<li>支持查询指定IP地址</li>
<li>支持查询本机IP地址</li>
<li>支持ipv4和ipv6(ipv6支持精确到区级)</li>
<li>境内IP数据都较为详细</li>
<li>支持多种返回格式</li>
</ul>
<p>缺点：</p>
<ul>
<li>自动查询ip时存在识别不准的情况</li>
<li>查询境外ip时返回数据不完整</li>
</ul>
<h3 id="示例-1"><a href="#示例-1" class="headerlink" title="示例"></a>示例</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">## 查询本机ip</span><br><span class="line">https://api.mir6.com/api/ip_json</span><br><span class="line">## 查询指定ip</span><br><span class="line">https://api.mir6.com/api/ip_json?ip=223.5.5.5</span><br><span class="line">## 查询本机ip(ini格式)</span><br><span class="line">https://api.mir6.com/api/ip?type=ini</span><br></pre></td></tr></table></figure>

<h3 id="返回结果示例-json格式"><a href="#返回结果示例-json格式" class="headerlink" title="返回结果示例(json格式)"></a>返回结果示例(json格式)</h3><h4 id="境外ip-1"><a href="#境外ip-1" class="headerlink" title="境外ip"></a>境外ip</h4><figure class="highlight json"><table><tr><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;code&quot;</span><span class="punctuation">:</span> <span class="number">200</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;msg&quot;</span><span class="punctuation">:</span> <span class="string">&quot;success&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;data&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;ip&quot;</span><span class="punctuation">:</span> <span class="string">&quot;205.178.182.66&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;dec&quot;</span><span class="punctuation">:</span> <span class="string">&quot;3451041346&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;country&quot;</span><span class="punctuation">:</span> <span class="string">&quot;美国&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;countryCode&quot;</span><span class="punctuation">:</span> <span class="string">&quot;US&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;province&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;city&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;districts&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;idc&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;isp&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;net&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;zipcode&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;areacode&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;protocol&quot;</span><span class="punctuation">:</span> <span class="string">&quot;IPv4&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;location&quot;</span><span class="punctuation">:</span> <span class="string">&quot;美国[US]&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;myip&quot;</span><span class="punctuation">:</span> <span class="string">&quot;205.178.182.66&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;time&quot;</span><span class="punctuation">:</span> <span class="string">&quot;2024-05-27 00:53:50&quot;</span></span><br><span class="line">    <span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure>

<h4 id="境内ip-1"><a href="#境内ip-1" class="headerlink" title="境内ip"></a>境内ip</h4><figure class="highlight json"><table><tr><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;code&quot;</span><span class="punctuation">:</span> <span class="number">200</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;msg&quot;</span><span class="punctuation">:</span> <span class="string">&quot;success&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;data&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;ip&quot;</span><span class="punctuation">:</span> <span class="string">&quot;223.5.5.5&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;dec&quot;</span><span class="punctuation">:</span> <span class="string">&quot;3741648133&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;country&quot;</span><span class="punctuation">:</span> <span class="string">&quot;中国&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;countryCode&quot;</span><span class="punctuation">:</span> <span class="string">&quot;CN&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;province&quot;</span><span class="punctuation">:</span> <span class="string">&quot;浙江省&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;city&quot;</span><span class="punctuation">:</span> <span class="string">&quot;杭州市&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;districts&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;idc&quot;</span><span class="punctuation">:</span> <span class="string">&quot;阿里云DNS&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;isp&quot;</span><span class="punctuation">:</span> <span class="string">&quot;阿里云&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;net&quot;</span><span class="punctuation">:</span> <span class="string">&quot;数据中心&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;zipcode&quot;</span><span class="punctuation">:</span> <span class="string">&quot;310000&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;areacode&quot;</span><span class="punctuation">:</span> <span class="string">&quot;0571&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;protocol&quot;</span><span class="punctuation">:</span> <span class="string">&quot;IPv4&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;location&quot;</span><span class="punctuation">:</span> <span class="string">&quot;中国[CN] 浙江省 杭州市&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;myip&quot;</span><span class="punctuation">:</span> <span class="string">&quot;205.178.182.66&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;time&quot;</span><span class="punctuation">:</span> <span class="string">&quot;2024-05-27 00:55:55&quot;</span></span><br><span class="line">    <span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure>

<h2 id="3-https-api-ip-sb-zh-cn-geoip"><a href="#3-https-api-ip-sb-zh-cn-geoip" class="headerlink" title="3. https://api.ip.sb/zh-cn/geoip"></a>3. <a href="https://api.ip.sb/zh-cn/geoip">https://api.ip.sb/zh-cn/geoip</a></h2><p>可选参数：ip</p>
<p>特点：</p>
<ul>
<li>支持查询指定IP地址</li>
<li>支持查询本机IP地址</li>
<li>支持ipv4和ipv6自识别</li>
<li>ipv4和ipv6都有独立接口</li>
</ul>
<p>缺点：</p>
<ul>
<li>ipv6数据不完整</li>
<li>返回数据仅英语</li>
<li>大陆访问速度相对慢</li>
</ul>
<h3 id="示例-2"><a href="#示例-2" class="headerlink" title="示例"></a>示例</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">## 查询本机ip</span><br><span class="line">https://api.ip.sb/geoip</span><br><span class="line">## 查询指定ip</span><br><span class="line">https://api.ip.sb/geoip/223.5.5.5</span><br><span class="line">## 指定ipv4接口</span><br><span class="line">https://api-ipv4.ip.sb/geoip</span><br><span class="line">## 指定ipv6接口</span><br><span class="line">https://api-ipv6.ip.sb/geoip</span><br></pre></td></tr></table></figure>

<h3 id="返回结果示例-json格式-1"><a href="#返回结果示例-json格式-1" class="headerlink" title="返回结果示例(json格式)"></a>返回结果示例(json格式)</h3><h4 id="境外ip-2"><a href="#境外ip-2" class="headerlink" title="境外ip"></a>境外ip</h4><figure class="highlight json"><table><tr><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;organization&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Path Network, Inc&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;longitude&quot;</span><span class="punctuation">:</span> <span class="number">-118.2707</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;city&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Los Angeles&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;timezone&quot;</span><span class="punctuation">:</span> <span class="string">&quot;America/Los_Angeles&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;isp&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Path Network, Inc&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;offset&quot;</span><span class="punctuation">:</span> <span class="number">-28800</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;region&quot;</span><span class="punctuation">:</span> <span class="string">&quot;California&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;asn&quot;</span><span class="punctuation">:</span> <span class="number">36231</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;asn_organization&quot;</span><span class="punctuation">:</span> <span class="string">&quot;TEMPEST-HOSTING&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;country&quot;</span><span class="punctuation">:</span> <span class="string">&quot;United States&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;ip&quot;</span><span class="punctuation">:</span> <span class="string">&quot;205.178.182.66&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;latitude&quot;</span><span class="punctuation">:</span> <span class="number">34.0515</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;postal_code&quot;</span><span class="punctuation">:</span> <span class="string">&quot;90017&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;continent_code&quot;</span><span class="punctuation">:</span> <span class="string">&quot;NA&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;country_code&quot;</span><span class="punctuation">:</span> <span class="string">&quot;US&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;region_code&quot;</span><span class="punctuation">:</span> <span class="string">&quot;CA&quot;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure>

<h4 id="境内ip-2"><a href="#境内ip-2" class="headerlink" title="境内ip"></a>境内ip</h4><figure class="highlight json"><table><tr><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;organization&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Hangzhou Alibaba Advertising Co.&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;longitude&quot;</span><span class="punctuation">:</span> <span class="number">120.1612</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;city&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Hangzhou&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;timezone&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Asia/Shanghai&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;isp&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Hangzhou Alibaba Advertising Co.&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;offset&quot;</span><span class="punctuation">:</span> <span class="number">28800</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;region&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Zhejiang&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;asn&quot;</span><span class="punctuation">:</span> <span class="number">37963</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;asn_organization&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Hangzhou Alibaba Advertising Co.,Ltd.&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;country&quot;</span><span class="punctuation">:</span> <span class="string">&quot;China&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;ip&quot;</span><span class="punctuation">:</span> <span class="string">&quot;223.5.5.5&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;latitude&quot;</span><span class="punctuation">:</span> <span class="number">30.2994</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;continent_code&quot;</span><span class="punctuation">:</span> <span class="string">&quot;AS&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;country_code&quot;</span><span class="punctuation">:</span> <span class="string">&quot;CN&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;region_code&quot;</span><span class="punctuation">:</span> <span class="string">&quot;ZJ&quot;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure>


<p>参考：<a href="https://github.com/ihmily/ip-info-api">https://github.com/ihmily/ip-info-api</a></p>
]]></content>
      <tags>
        <tag>API</tag>
        <tag>hexo</tag>
      </tags>
  </entry>
  <entry>
    <title>Hexo 腾讯云CDN自动刷新插件</title>
    <url>/2024/05/24/Hexo-%E8%85%BE%E8%AE%AF%E4%BA%91CDN%E8%87%AA%E5%8A%A8%E5%88%B7%E6%96%B0%E6%8F%92%E4%BB%B6/</url>
    <content><![CDATA[<blockquote>
<p>Github地址：<a href="https://github.com/lm379/hexo-cdn-Purge">lm379&#x2F;hexo-cdn-Purge: 用于提交时自动刷新腾讯云CDN的Hexo插件 (github.com)</a><br>Gitee地址：<a href="https://gitee.com/lm379/hexo-cdn-Purge">hexo-cdn-Purge: 用于提交时自动刷新腾讯云CDN的Hexo插件 (gitee.com)</a></p>
</blockquote>
<p>基于最新的腾讯云CDN API 3.0开发，解决API 2.0接口下线出现的问题</p>
<p>支持两种刷新方式：变更资源和全部资源</p>
<p>若你的CDN源站为Vercel,Netlify,Github Pages等，建议将timer字段设置为60000（1分钟）以上，以免刷新失败</p>
<h3 id="使用方法"><a href="#使用方法" class="headerlink" title="使用方法"></a>使用方法</h3><p>进入腾讯云后台创建API密钥（建议使用子用户密钥）</p>
<p><a href="https://console.cloud.tencent.com/cam/capi">https://console.cloud.tencent.com/cam/capi</a></p>
<p>回到hexo博客根目录，打开Git Bash执行</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">npm install hexo-cdn-purge --save</span><br></pre></td></tr></table></figure>

<p>然后在站点的_config.yml中添加配置</p>
<blockquote>
<p>注意不是主题的_config.yml</p>
</blockquote>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">tencent_cdn:</span><br><span class="line"> secretId: your secretId # 你在https://console.cloud.tencent.com/cam/capi 获取到的SecretId</span><br><span class="line"> secretKey: your secretKey # 你在https://console.cloud.tencent.com/cam/capi 获取到的SecretKey</span><br><span class="line"> FlushType: flush # 刷新方式,flush为只刷新变更资源,delete为刷新网站下的全部缓存</span><br><span class="line"> timer: 100 # 延时器,单位为毫秒,延时多长时间再执行刷新命令,不需要的填写0</span><br><span class="line"> PurgePath: https://www.example.com # 需要刷新的链接，不支持多个，必须有http或者https协议头</span><br></pre></td></tr></table></figure>

<p>deploy字段最后面添加，如下图</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">type: tencent_cdn</span><br></pre></td></tr></table></figure>

<p><img src="https://r2.lm379.cn/2024/05/b9771fe36f2a28b777bc29c6190b795b.png"></p>
<p>后续在执行 <code>hexo d</code>的时候就会同时对CDN进行刷新</p>
<h3 id="效果图"><a href="#效果图" class="headerlink" title="效果图"></a>效果图</h3><p><img src="https://r2.lm379.cn/2024/05/32238c3011b7f1bb4092a4e42e621e0a.png"></p>
<h3 id="常见错误代码"><a href="#常见错误代码" class="headerlink" title="常见错误代码"></a>常见错误代码</h3><p>来源：<a href="https://cloud.tencent.com/document/api/228/37871">腾讯云官方文档</a></p>
<table>
<thead>
<tr>
<th>错误码</th>
<th>描述</th>
</tr>
</thead>
<tbody><tr>
<td>AuthFailure.InvalidAuthorization</td>
<td>鉴权错误，请确认后重试。</td>
</tr>
<tr>
<td>InternalError.CamSystemError</td>
<td>内部鉴权系统错误。</td>
</tr>
<tr>
<td>InternalError.CdnConfigError</td>
<td>域名配置更新失败。</td>
</tr>
<tr>
<td>InternalError.CdnDbError</td>
<td>内部数据错误，请联系腾讯云工程师进一步排查。</td>
</tr>
<tr>
<td>InternalError.CdnQueryParamError</td>
<td>内部查询错误，请重试或联系客服人员解决。</td>
</tr>
<tr>
<td>InternalError.CdnQuerySystemError</td>
<td>内部查询错误，请重试或联系客服人员解决。</td>
</tr>
<tr>
<td>InternalError.CdnSystemError</td>
<td>系统错误，请联系腾讯云工程师进一步排查。</td>
</tr>
<tr>
<td>InternalError.Error</td>
<td>内部服务错误，请联系腾讯云工程师进一步排查。</td>
</tr>
<tr>
<td>InternalError.ProxyServer</td>
<td>内部服务错误，请联系腾讯云工程师进一步排查。</td>
</tr>
<tr>
<td>InvalidParameter.CdnHostInvalidStatus</td>
<td>域名状态不合法。</td>
</tr>
<tr>
<td>InvalidParameter.CdnInterfaceError</td>
<td>内部接口错误，请联系腾讯云工程师进一步排查。</td>
</tr>
<tr>
<td>InvalidParameter.CdnParamError</td>
<td>参数错误，请参考文档中示例参数填充。</td>
</tr>
<tr>
<td>InvalidParameter.CdnPurgeWildcardNotAllowed</td>
<td>刷新不支持泛域名。</td>
</tr>
<tr>
<td>InvalidParameter.CdnStatInvalidDate</td>
<td>日期不合法，请参考文档中日期示例。</td>
</tr>
<tr>
<td>InvalidParameter.CdnUrlExceedLength</td>
<td>URL 超过限制长度。</td>
</tr>
<tr>
<td>LimitExceeded.CdnPurgeExceedBatchLimit</td>
<td>刷新的Url数量超过每批提交的限制。</td>
</tr>
<tr>
<td>LimitExceeded.CdnPurgeExceedDayLimit</td>
<td>刷新的Url数量超过每日限额。</td>
</tr>
<tr>
<td>LimitExceeded.CdnPurgePathExceedBatchLimit</td>
<td>刷新的目录数量超过限制。</td>
</tr>
<tr>
<td>LimitExceeded.CdnPurgePathExceedDayLimit</td>
<td>刷新的目录数量超过每日限制。</td>
</tr>
<tr>
<td>LimitExceeded.CdnPurgeUrlExceedBatchLimit</td>
<td>刷新的Url数量超过限制。</td>
</tr>
<tr>
<td>LimitExceeded.CdnPurgeUrlExceedDayLimit</td>
<td>刷新的Url数量超过每日限额。</td>
</tr>
<tr>
<td>ResourceNotFound.CdnHostNotExists</td>
<td>未查询到该域名，请确认域名是否正确。</td>
</tr>
<tr>
<td>ResourceNotFound.CdnUserNotExists</td>
<td>未开通CDN服务，请开通后使用此接口。</td>
</tr>
<tr>
<td>UnauthorizedOperation.CdnCamUnauthorized</td>
<td>子账号未配置cam策略。</td>
</tr>
<tr>
<td>UnauthorizedOperation.CdnHostUnauthorized</td>
<td>CDN子账号加速域名未授权。</td>
</tr>
<tr>
<td>UnauthorizedOperation.CdnUserAuthFail</td>
<td>CDN用户认证失败。</td>
</tr>
<tr>
<td>UnauthorizedOperation.CdnUserAuthWait</td>
<td>CDN用户待认证。</td>
</tr>
<tr>
<td>UnauthorizedOperation.CdnUserIsSuspended</td>
<td>加速服务已停服，请重启加速服务后重试。</td>
</tr>
<tr>
<td>UnauthorizedOperation.OperationTooOften</td>
<td>操作超出调用频次限制。</td>
</tr>
</tbody></table>
<p>欢迎提交issue</p>
]]></content>
      <categories>
        <category>博客搭建</category>
      </categories>
      <tags>
        <tag>Hexo</tag>
      </tags>
  </entry>
  <entry>
    <title>给Hexo站点增加Cloudflare Web Analytics(使用Next主题)</title>
    <url>/2024/05/21/%E7%BB%99Hexo%E7%AB%99%E7%82%B9%E5%A2%9E%E5%8A%A0Cloudflare-Web-Analytics/</url>
    <content><![CDATA[<p>Cloudflare Web Analytics是一个免费且易于使用的网站分析工具，可以提供详细的访问统计数据，帮助你了解网站的访问情况。</p>
<h2 id="注册Cloudflare账号"><a href="#注册Cloudflare账号" class="headerlink" title="注册Cloudflare账号"></a>注册Cloudflare账号</h2><p>首先，你需要注册一个Cloudflare账号。你可以访问Cloudflare的官方网站（<a href="https://www.cloudflare.com/">https://www.cloudflare.com/</a>）进行注册。</p>
<h2 id="添加站点"><a href="#添加站点" class="headerlink" title="添加站点"></a>添加站点</h2><p>登录后点击左侧的 <code>分析与日志</code>-<code>Web Analytics</code>-<code>添加站点</code>，输入你的网址，然后选择<strong>js片段安装</strong></p>
<p>你会得到一个下面这样的js片段</p>
<p><img src="https://r2.lm379.cn/2024/05/70d2bb38879808b7e24eecf91901038a.png"></p>
<p>复制其中token字段后面的值(也就是图中红色的部分)</p>
<h2 id="修改配置"><a href="#修改配置" class="headerlink" title="修改配置"></a>修改配置</h2><p>修改hexo目录下的 <code>_config.next.yml</code>文件，按 <code>Ctrl+F</code>搜索 <code>Cloudflare Web Analytics</code>，将token的值复制进去后保存 <strong>(只需要上面保存的token值)</strong></p>
<p><img src="https://r2.lm379.cn/2024/05/df086c0e590cc97dcfa01df62a987402.png"></p>
<p>然后重新部署站点即可</p>
<p>等一会儿就可以再cloudflare后台看到数据分析了</p>
<p><img src="https://r2.lm379.cn/2024/05/3f8282cbd6ecb8e1636cd1d4d612852a.png"></p>
]]></content>
      <categories>
        <category>博客搭建</category>
      </categories>
      <tags>
        <tag>hexo</tag>
      </tags>
  </entry>
  <entry>
    <title>基于Github快速搭建一个Hexo博客</title>
    <url>/2024/05/20/%E5%9F%BA%E4%BA%8EGithub%E5%BF%AB%E9%80%9F%E6%90%AD%E5%BB%BA%E4%B8%80%E4%B8%AAHexo%E5%8D%9A%E5%AE%A2/</url>
    <content><![CDATA[<hr>
<p><del>未完待续</del><br><strong>下面的整个过程需要你的网络能正常访问Github</strong></p>
<hr>
<h2 id="1-配置环境"><a href="#1-配置环境" class="headerlink" title="1. 配置环境"></a>1. 配置环境</h2><h3 id="1-1-安装Git和Node-js"><a href="#1-1-安装Git和Node-js" class="headerlink" title="1.1 安装Git和Node.js"></a>1.1 安装Git和Node.js</h3><p><a href="https://git-scm.com/download/win">Git - Downloading Package (git-scm.com)</a></p>
<p><a href="https://nodejs.org/en">Node.js — Run JavaScript Everywhere (nodejs.org)</a></p>
<p>安装完后任意位置右键选择 <code>Git Bash Here</code>进入命令行，依次输入</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">node -v</span><br><span class="line">npm -v</span><br></pre></td></tr></table></figure>

<p>出现版本号即安装成功</p>
<p><img src="https://r2.lm379.cn/2024/05/cd68a8ea384740a40165b60e85009141.png"></p>
<h3 id="1-2-连接Github"><a href="#1-2-连接Github" class="headerlink" title="1.2 连接Github"></a>1.2 连接Github</h3><p>先自己去<a href="https://github.com/">GitHub</a>注册一个账号</p>
<p>然后在上面Git命令行中依次输入下面两行命令(<strong>不要无脑复制粘贴，记得把Github用户名和邮箱替换成自己的</strong>)</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">git config --global user.name &quot;GitHub用户名&quot;</span><br><span class="line">git config --global user.email &quot;GitHub邮箱&quot;</span><br></pre></td></tr></table></figure>

<p><strong>(可选)创建SSH密钥并添加到github</strong></p>
<blockquote>
<p>下面的这一步个人实测是可以省略的，部署到github使用https协议即可</p>
</blockquote>
<p>Git Bash输入 <code>ssh-keygen -t ed25519 -C &quot;your_email@example.com&quot;</code>，然后一路回车，直到命令行出现SSH密钥生成成功为止</p>
<p>然后进入 <code>C:\Users\你的windows用户名\.ssh</code>目录下找到 <code>id_ed25519.pub</code>，用记事本打开，复制所有内容</p>
<p>回到Github，登录你的账号后点击自己的头像，点击Settings，再点击SSH and GPG keys，new ssh key</p>
<p>title随便写，key填写刚刚复制的</p>
<p><img src="https://r2.lm379.cn/2024/05/72b5fcd06409308aa6b495ef66f4b49d.png" alt="img"></p>
<p>回到Bash，输入 <code>ssh -T git@github.com</code>，如果出现 <code>You&#39;ve successfully authenticated, but GitHub does not provide shell access.</code> 即表示连接成功</p>
<p>如果出现像下面一样的连接被拒绝，也不用慌，后续使用https协议部署即可</p>
<p><img src="https://r2.lm379.cn/2024/05/afaa08e48fe0962b75daed1db2b5c982.png"></p>
<h3 id="1-3-创建Github仓库"><a href="#1-3-创建Github仓库" class="headerlink" title="1.3 创建Github仓库"></a>1.3 创建Github仓库</h3><p>进入Github创建一个仓库，仓库名必须为 <code>你的github用户名.github.io</code>，比如我的仓库名为 <code>lm379.github.io</code></p>
<h3 id="1-4-安装Hexo"><a href="#1-4-安装Hexo" class="headerlink" title="1.4 安装Hexo"></a>1.4 安装Hexo</h3><h2 id="2-安装Hexo"><a href="#2-安装Hexo" class="headerlink" title="2. 安装Hexo"></a>2. 安装Hexo</h2><p>先创建一个目录用于存放hexo的代码，比如我创建在 <code>D:\hexo</code></p>
<p>进入该目录，在任意位置右键选择 <code>Git Bash Here</code>进入命令行</p>
<p><strong>国内用户建议先执行下面这行命令更改npm镜像源，否则后续安装会非常慢</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">npm config <span class="built_in">set</span> registry https://registry.npmmirror.com</span><br></pre></td></tr></table></figure>

<p>然后输入</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">npm install -g hexo-cli</span><br></pre></td></tr></table></figure>

<p>等待安装完成后输入</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">hexo -v</span><br></pre></td></tr></table></figure>

<p>出现版本号即安装成功</p>
<h2 id="3-初始化hexo"><a href="#3-初始化hexo" class="headerlink" title="3. 初始化hexo"></a>3. 初始化hexo</h2><p>命令行输入</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">hexo init</span><br></pre></td></tr></table></figure>

<p>会自动开始拉取文件，等待拉取完成即可</p>
<blockquote>
<p>若使用了代理工具，请自行在git中配置HTTP代理或者Socks5代理<br>下面的1080端口是代理工具HTTP代理端口，请替换成自己的</p>
</blockquote>
<p><strong>全局代理</strong></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">git config --global http.proxy socks5://127.0.0.1:1080</span><br><span class="line">git config --global https.proxy socks5://127.0.0.1:1080</span><br></pre></td></tr></table></figure>

<p><strong>仅Github走代理</strong></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">git config --global http.https://github.com.proxy socks5://127.0.0.1:1080</span><br><span class="line">git config --global https.https://github.com.proxy socks5://127.0.0.1:1080</span><br></pre></td></tr></table></figure>

<h2 id="4-配置hexo"><a href="#4-配置hexo" class="headerlink" title="4. 配置hexo"></a>4. 配置hexo</h2><h3 id="4-1-生成博客并本地预览"><a href="#4-1-生成博客并本地预览" class="headerlink" title="4.1 生成博客并本地预览"></a>4.1 生成博客并本地预览</h3><p>此时可以输入</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">hexo g &amp;&amp; hexo s</span><br></pre></td></tr></table></figure>

<p>然后打开 <code>http://localhost:4000</code> 即可看到hexo的默认页面</p>
<h3 id="4-2-部署到Github"><a href="#4-2-部署到Github" class="headerlink" title="4.2 部署到Github"></a>4.2 部署到Github</h3><p>输入</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure>

<p>打开 <code>D:\hexo\_config.yml</code>，找到 <code>deploy</code> 字段，将repo修改为</p>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">deploy:</span></span><br><span class="line">  <span class="attr">type:</span> <span class="string">git</span></span><br><span class="line">  <span class="attr">repo:</span> <span class="string">git@github.com:用户名/用户名.github.io.git</span></span><br><span class="line">  <span class="attr">branch:</span> <span class="string">master</span></span><br></pre></td></tr></table></figure>

<p>若后续部署报错类似下图，可修改为下面的<br><img src="https://r2.lm379.cn/2024/05/79dfc6f305e0a95f7175d1468996b12e.png"></p>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">deploy:</span></span><br><span class="line">  <span class="attr">type:</span> <span class="string">git</span></span><br><span class="line">  <span class="attr">repo:</span> <span class="string">https://github.com/用户名/用户名.github.io.git</span></span><br><span class="line">  <span class="attr">branch:</span> <span class="string">master</span></span><br></pre></td></tr></table></figure>

<p>然后输入</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">hexo d</span><br></pre></td></tr></table></figure>

<p>等待上传完毕后访问 <code>你的用户名.github.io</code>即可看到博客了</p>
]]></content>
      <categories>
        <category>博客搭建</category>
      </categories>
      <tags>
        <tag>hexo</tag>
      </tags>
  </entry>
  <entry>
    <title>数字逻辑实验 设计一个可灵活预置时间的倒计时电路</title>
    <url>/2024/05/11/%E6%95%B0%E5%AD%97%E9%80%BB%E8%BE%91%E5%AE%9E%E9%AA%8C-%E8%AE%BE%E8%AE%A1%E4%B8%80%E4%B8%AA%E5%8F%AF%E7%81%B5%E6%B4%BB%E9%A2%84%E7%BD%AE%E6%97%B6%E9%97%B4%E7%9A%84%E5%80%92%E8%AE%A1%E6%97%B6%E7%94%B5%E8%B7%AF/</url>
    <content><![CDATA[<h1 id="实验项目1-设计一个可灵活预置时间的倒计时电路"><a href="#实验项目1-设计一个可灵活预置时间的倒计时电路" class="headerlink" title="实验项目1 设计一个可灵活预置时间的倒计时电路"></a>实验项目1 设计一个可灵活预置时间的倒计时电路</h1><h2 id="实验描述"><a href="#实验描述" class="headerlink" title="实验描述"></a>实验描述</h2><h3 id="1-实验目的"><a href="#1-实验目的" class="headerlink" title="1. 实验目的"></a>1. 实验目的</h3><p>   (1) 掌握数字逻辑电路的设计与测试方法，熟悉常用数字集成电路的使用；<br>   (2) 训练综合运用数字电路基本知识设计、调试电路的能力；<br>   (3) 进行电路的安装、调试，直到电路能达到规定的设计目标；<br>   (4) 熟悉电路中所用到的各集成块的引脚及其功能，熟悉集成电路的引脚安排；<br>   (5) 掌握集成同步可逆计数器的使用方法和特殊要求;<br>   (6) 掌握集成同步可逆计数器的级联方法，掌握任意N进制减法计数器的设计方法；<br>   (7) 掌握多位LED七段数码管的显示方法和集成七段数码管译码器的使用方法；<br>   (8) 熟练使用Proteus应用软件进行任意N进制减法计数器电路的绘制、仿真和调试的方法。</p>
<h3 id="2-实验预习要求"><a href="#2-实验预习要求" class="headerlink" title="2. 实验预习要求"></a>2. 实验预习要求</h3><p>   (1) 预习有关门电路的相关知识；<br>   (2) 预习有关集成同步可逆计数器74LS192的相关知识；<br>   (3) 预习有关多位LED七段数码管和集成七段数码管译码器74LS47的相关知识；<br>   (4) 预习使用Proteus应用软件进行电路的绘制、仿真和调试等相关内容。</p>
<h3 id="3-实验设备及器件"><a href="#3-实验设备及器件" class="headerlink" title="3. 实验设备及器件"></a>3. 实验设备及器件</h3><p>   (1) 数字电路实验箱1台;<br>   (2) 门电路(自选);<br>   (3) 集成同步可逆计数器74LS192(建议);<br>   (4) 集成LED七段数码管译码器74LS47;<br>   (5) LED七段数码管。</p>
<h3 id="4-实验任务"><a href="#4-实验任务" class="headerlink" title="4. 实验任务"></a>4. 实验任务</h3><ol>
<li>设计并完成可预置的定时显示报警系统<br>定时电路是脉冲数字电路的简单应用，主要由计数器和振荡器组成。它所完成的中途计时功能，实现了在许多的特定场合进行时间即时追踪的功能，在实际生活中也具有广泛的应用价值，如用于体育比赛、定时报警器、游戏中的倒计时器、交通信号灯等。</li>
<li>设计任务与要求<br>(1) 用中、小规模集成电路设计并完成一个可灵活预置时间的计时电路，设置的时间为0~99s中的任意值。它具有显示秒倒计时功能，能准确地预置和清零。<br>(2) 计时电路的外部操作开关有复位清零开关、启动(继续)&#x2F;暂停计时开关、预置定时时间开关。这些开关能分别控制计时电路的直接清零、启动(继续)&#x2F;暂停计时、预置定时时间。<br>(3) 要求计时电路递减计时，即每隔1秒，计时器减1。<br>(4) 当计时器递减时间到零(即定时时间到)时，数码显示器显示“00”，同时发出光电报警信号。<br>注：可利用实验箱上提供的脉冲，但脉冲的加入应实现可控。<br>参考方案如图9.1.1所示<br><img src="https://r2.lm379.cn/2024/05/8b0fb059a1b4ab4b74d9ca923dce750b.jpg"></li>
</ol>
<h3 id="5-实验内容与步骤"><a href="#5-实验内容与步骤" class="headerlink" title="5. 实验内容与步骤"></a>5. 实验内容与步骤</h3><p>   (1) 设计整体电路，用Proteus 画出电路原理图，并在Proteus上做仿真实验。<br>   (2) 分块调试电路，并记录参数。</p>
<blockquote>
<ul>
<li>先只做一位数倒计时的控制。</li>
<li>停零(用门电路控制自动控制脉冲CP)，报警亮灯。</li>
<li>暂停（手工操作，用门电路控制脉冲CP）。</li>
<li>清零和预置（手工操作）。</li>
</ul>
</blockquote>
<p>  (3) 总装调试电路，测试电路的功能。</p>
<h2 id="实验电路图及介绍"><a href="#实验电路图及介绍" class="headerlink" title="实验电路图及介绍"></a>实验电路图及介绍</h2><h3 id="使用到的元器件"><a href="#使用到的元器件" class="headerlink" title="使用到的元器件"></a>使用到的元器件</h3><ol>
<li>74LS04 一片</li>
<li>74LS08 一片</li>
<li>74LS32 一片</li>
<li>74LS74 一片</li>
<li>74LS192 两片</li>
<li>7段数码显示管</li>
</ol>
<h4 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a>注意事项</h4><ol>
<li>上述逻辑门除74LS192不可替换，其余可根据实际情况替换，如可用74LS00+74LS04替换74LS08</li>
<li>74LS74双D触发器用于将异步置数转换为同步，关于异步与同步触发的区别，请自行百度</li>
</ol>
<h3 id="模拟仿真软件"><a href="#模拟仿真软件" class="headerlink" title="模拟仿真软件"></a>模拟仿真软件</h3><p>Proteus：<a href="https://pan.lm379.cn/d/app/Proteus%208.6.zip">下载链接</a></p>
<p>ps: 软件仿真环境和实际实验箱上操作的难免有出入</p>
<h3 id="电路图"><a href="#电路图" class="headerlink" title="电路图"></a>电路图</h3><blockquote>
<p>如需要电路图的工程文件，请先点击文末的赞赏（1块钱也行），<strong>将付款截图用邮件发送给我，同时备注：倒计时电路工程文件</strong><br>我的邮箱：<a href="mailto:&#108;&#109;&#x33;&#55;&#x39;&#x40;&#x66;&#111;&#x78;&#x6d;&#97;&#105;&#x6c;&#46;&#99;&#x6f;&#109;">&#108;&#109;&#x33;&#55;&#x39;&#x40;&#x66;&#111;&#x78;&#x6d;&#97;&#105;&#x6c;&#46;&#99;&#x6f;&#109;</a></p>
</blockquote>
<p>下面电路图除7段数码显示管均将相关元器件和引脚标明可直接对照直接进行连线</p>
<p>主要部分有相关文字注释，下文有具体说明书</p>
<p>(重要) 请将时钟脉冲设置为<strong>1Hz</strong></p>
<p><img src="https://r2.lm379.cn/2024/05/0562c1b251dc4c49c0bea8209f593e26.png"></p>
<h4 id="说明书"><a href="#说明书" class="headerlink" title="说明书"></a>说明书</h4><blockquote>
<p>除了下面说明的部分，请不要乱修改本电路中其他的值，否则电路不成立</p>
</blockquote>
<h5 id="1-启动暂停开关"><a href="#1-启动暂停开关" class="headerlink" title="1. 启动暂停开关"></a>1. 启动暂停开关</h5><p>用于控制电路是否开始倒计时</p>
<table>
<thead>
<tr>
<th>值</th>
<th>功能</th>
</tr>
</thead>
<tbody><tr>
<td>0</td>
<td>暂停倒计时</td>
</tr>
<tr>
<td>1</td>
<td>开始(继续)倒计时</td>
</tr>
</tbody></table>
<h5 id="2-停零控制端"><a href="#2-停零控制端" class="headerlink" title="2. 停零控制端"></a>2. 停零控制端</h5><table>
<thead>
<tr>
<th>值</th>
<th>功能</th>
</tr>
</thead>
<tbody><tr>
<td>0</td>
<td>倒计时到0时会停住</td>
</tr>
<tr>
<td>1</td>
<td>倒计时到0时自动重新倒计时</td>
</tr>
</tbody></table>
<p>注意：停零控制端为0时，<strong>倒计时结束后需要开始倒计时请变一下停零控制端的值</strong></p>
<h5 id="3-清零"><a href="#3-清零" class="headerlink" title="3. 清零"></a>3. 清零</h5><table>
<thead>
<tr>
<th>值</th>
<th>功能</th>
</tr>
</thead>
<tbody><tr>
<td>0</td>
<td>不变</td>
</tr>
<tr>
<td>1</td>
<td>直接清零</td>
</tr>
</tbody></table>
<h5 id="4-数值输入端"><a href="#4-数值输入端" class="headerlink" title="4. 数值输入端"></a>4. 数值输入端</h5><h6 id="注意事项-1"><a href="#注意事项-1" class="headerlink" title="注意事项"></a>注意事项</h6><p><strong>数据输入端为下图中红框圈起来的部分</strong></p>
<p>另外在电路图中，左边为<strong>低位片</strong>，右边才是<strong>高位片</strong></p>
<p>74LS192为10进制计数器，因此在输入数据时一定要小心</p>
<p>如下图中，低位片预置数据为0101对应十进制5，高位片0001对应十进制1，因此输入的数据为<strong>15</strong>，而不是直接将00010101转换为2进制对应的21</p>
<p><img src="https://r2.lm379.cn/2024/05/b46d32294af74d3740a65f5ab6121434.png"></p>
]]></content>
      <tags>
        <tag>数字逻辑实验</tag>
      </tags>
  </entry>
  <entry>
    <title>头歌C语言系列</title>
    <url>/2024/04/16/%E5%A4%B4%E6%AD%8CC%E8%AF%AD%E8%A8%80%E5%AE%9E%E9%AA%8C/%E5%A4%B4%E6%AD%8CC%E8%AF%AD%E8%A8%80%E7%B3%BB%E5%88%97/</url>
    <content><![CDATA[<p><a href="../../../../../2024/04/16/%E5%A4%B4%E6%AD%8CC%E8%AF%AD%E8%A8%80%E5%AE%9E%E9%AA%8C/%E5%A4%B4%E6%AD%8CC%E8%AF%AD%E8%A8%80%E5%AE%9E%E9%AA%8C-%E7%BB%83%E4%B9%A01%EF%BC%9A%E8%B5%8B%E5%80%BC%E4%B8%8E%E8%A1%A8%E8%BE%BE%E5%BC%8F/">练习1：赋值与表达式</a><br><a href="../../../../../2024/04/16/%E5%A4%B4%E6%AD%8CC%E8%AF%AD%E8%A8%80%E5%AE%9E%E9%AA%8C/%E5%A4%B4%E6%AD%8CC%E8%AF%AD%E8%A8%80%E5%AE%9E%E9%AA%8C-%E7%BB%83%E4%B9%A02%EF%BC%9A%E9%A1%BA%E5%BA%8F%E7%BB%93%E6%9E%84/">练习2：顺序结构</a><br><a href="../../../../../2024/04/16/%E5%A4%B4%E6%AD%8CC%E8%AF%AD%E8%A8%80%E5%AE%9E%E9%AA%8C/%E5%A4%B4%E6%AD%8CC%E8%AF%AD%E8%A8%80%E5%AE%9E%E9%AA%8C-%E7%BB%83%E4%B9%A03%EF%BC%9A%E5%9F%BA%E6%9C%AC%E9%80%89%E6%8B%A9%E7%BB%93%E6%9E%84/">练习3：基本选择结构</a><br><a href="../../../../../2024/04/16/%E5%A4%B4%E6%AD%8CC%E8%AF%AD%E8%A8%80%E5%AE%9E%E9%AA%8C/%E5%A4%B4%E6%AD%8CC%E8%AF%AD%E8%A8%80%E5%AE%9E%E9%AA%8C-%E7%BB%83%E4%B9%A05%EF%BC%9A%E5%BE%AA%E7%8E%AF%E7%BB%93%E6%9E%84-I/">练习5：循环结构-I</a><br><a href="../../../../../2024/04/16/%E5%A4%B4%E6%AD%8CC%E8%AF%AD%E8%A8%80%E5%AE%9E%E9%AA%8C/%E5%A4%B4%E6%AD%8CC%E8%AF%AD%E8%A8%80%E5%AE%9E%E9%AA%8C-%E7%BB%83%E4%B9%A06%EF%BC%9A%E5%BE%AA%E7%8E%AF%E7%BB%93%E6%9E%84II/">练习6：循环结构II</a><br><a href="../../../../../2024/05/01/%E5%A4%B4%E6%AD%8CC%E8%AF%AD%E8%A8%80%E5%AE%9E%E9%AA%8C/%E5%A4%B4%E6%AD%8CC%E8%AF%AD%E8%A8%80%E5%AE%9E%E9%AA%8C-%E7%BB%83%E4%B9%A07%EF%BC%9A%E5%A4%9A%E8%A1%8C%E5%A4%9A%E5%88%97%E7%9A%84%E5%9B%BE%E5%BD%A2%E8%BE%93%E5%87%BA/">练习7：多行多列的图形输出</a><br><a href="../../../../../2024/05/01/%E5%A4%B4%E6%AD%8CC%E8%AF%AD%E8%A8%80%E5%AE%9E%E9%AA%8C/%E5%A4%B4%E6%AD%8CC%E8%AF%AD%E8%A8%80%E5%AE%9E%E9%AA%8C-%E7%BB%83%E4%B9%A08%EF%BC%9A%E8%87%AA%E5%AE%9A%E4%B9%89%E5%87%BD%E6%95%B0/">练习8：自定义函数</a><br><a href="../../../../../2024/05/01/%E5%A4%B4%E6%AD%8CC%E8%AF%AD%E8%A8%80%E5%AE%9E%E9%AA%8C/%E5%A4%B4%E6%AD%8CC%E8%AF%AD%E8%A8%80%E5%AE%9E%E9%AA%8C-%E7%BB%83%E4%B9%A09%EF%BC%9A%E4%BD%BF%E7%94%A8%E6%95%B0%E7%BB%84/">练习9：使用数组</a><br><a href="../../../../../2024/05/02/%E5%A4%B4%E6%AD%8CC%E8%AF%AD%E8%A8%80%E5%AE%9E%E9%AA%8C/%E5%A4%B4%E6%AD%8CC%E8%AF%AD%E8%A8%80%E5%AE%9E%E9%AA%8C-%E7%BB%83%E4%B9%A010%EF%BC%9A%E6%95%B0%E7%BB%84%E4%B8%8E%E5%AD%97%E7%AC%A6%E4%B8%B2/">练习10：数组与字符串</a></p>
<p><a href="../../../../../2024/04/16/%E5%A4%B4%E6%AD%8CC%E8%AF%AD%E8%A8%80%E5%AE%9E%E9%AA%8C/%E5%A4%B4%E6%AD%8CC%E8%AF%AD%E8%A8%80%E5%AE%9E%E9%AA%8C-%E8%BE%85%E5%8A%A9%E7%BB%83%E4%B9%A0%EF%BC%9A%E7%AE%80%E5%8D%95%E8%AE%A1%E7%AE%97%E9%A2%98/">辅助练习：简单计算题</a><br><a href="../../../../../2024/04/16/%E5%A4%B4%E6%AD%8CC%E8%AF%AD%E8%A8%80%E5%AE%9E%E9%AA%8C/%E5%A4%B4%E6%AD%8CC%E8%AF%AD%E8%A8%80%E5%AE%9E%E9%AA%8C-%E8%BE%85%E5%8A%A9%E7%BB%83%E4%B9%A0%EF%BC%9A%E8%BE%93%E5%85%A5%E8%BE%93%E5%87%BA%E6%A0%BC%E5%BC%8F%E6%8E%A7%E5%88%B6/">辅助练习：输入输出格式控制</a><br><a href="../../../../../2024/04/16/%E5%A4%B4%E6%AD%8CC%E8%AF%AD%E8%A8%80%E5%AE%9E%E9%AA%8C/%E5%A4%B4%E6%AD%8CC%E8%AF%AD%E8%A8%80%E5%AE%9E%E9%AA%8C-%E8%BE%85%E5%8A%A9%E7%BB%83%E4%B9%A03%EF%BC%9A%E5%9F%BA%E6%9C%AC%E9%80%89%E6%8B%A9%E7%BB%93%E6%9E%84/">辅助练习3：基本选择结构</a><br><a href="../../../../../2024/04/16/%E5%A4%B4%E6%AD%8CC%E8%AF%AD%E8%A8%80%E5%AE%9E%E9%AA%8C/%E5%A4%B4%E6%AD%8CC%E8%AF%AD%E8%A8%80%E5%AE%9E%E9%AA%8C-%E8%BE%85%E5%8A%A9%E7%BB%83%E4%B9%A04%EF%BC%9A%E9%80%89%E6%8B%A9%E7%BB%93%E6%9E%84II/">辅助练习4：选择结构II</a><br><a href="../../../../../2024/04/16/%E5%A4%B4%E6%AD%8CC%E8%AF%AD%E8%A8%80%E5%AE%9E%E9%AA%8C/%E5%A4%B4%E6%AD%8CC%E8%AF%AD%E8%A8%80%E5%AE%9E%E9%AA%8C-%E8%BE%85%E5%8A%A9%E7%BB%83%E4%B9%A05%EF%BC%9A%E5%BE%AA%E7%8E%AF%E7%BB%93%E6%9E%84-I/">辅助练习5：循环结构-I</a><br><a href="../../../../../2024/05/02/%E5%A4%B4%E6%AD%8CC%E8%AF%AD%E8%A8%80%E5%AE%9E%E9%AA%8C/%E5%A4%B4%E6%AD%8CC%E8%AF%AD%E8%A8%80%E5%AE%9E%E9%AA%8C-%E8%BE%85%E5%8A%A9%E7%BB%83%E4%B9%A08%EF%BC%9A%E8%87%AA%E5%AE%9A%E4%B9%89%E5%87%BD%E6%95%B0/">辅助练习8：自定义函数</a><br><a href="../../../../../2024/05/01/%E5%A4%B4%E6%AD%8CC%E8%AF%AD%E8%A8%80%E5%AE%9E%E9%AA%8C/%E5%A4%B4%E6%AD%8CC%E8%AF%AD%E8%A8%80%E5%AE%9E%E9%AA%8C-%E8%BE%85%E5%8A%A9%E7%BB%83%E4%B9%A09%EF%BC%9A%E4%BD%BF%E7%94%A8%E6%95%B0%E7%BB%84/">辅助练习9：使用数组</a><br><a href="../../../../../2024/05/02/%E5%A4%B4%E6%AD%8CC%E8%AF%AD%E8%A8%80%E5%AE%9E%E9%AA%8C/%E5%A4%B4%E6%AD%8CC%E8%AF%AD%E8%A8%80%E5%AE%9E%E9%AA%8C-%E8%BE%85%E5%8A%A9%E7%BB%83%E4%B9%A010%EF%BC%9A%E4%BD%BF%E7%94%A8%E5%AD%97%E7%AC%A6%E4%B8%B2/">辅助练习10：使用字符串</a></p>
<p><a href="../../../../../2024/05/02/%E5%A4%B4%E6%AD%8CC%E8%AF%AD%E8%A8%80%E5%AE%9E%E9%AA%8C/2023%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1%E5%AE%9E%E9%AA%8C%E6%9C%9F%E6%9C%AB%E8%80%83%E8%AF%95/">2023程序设计实验期末考试</a></p>
]]></content>
      <tags>
        <tag>Educoder</tag>
      </tags>
  </entry>
  <entry>
    <title>使用腾讯云CDN加速Cloudflare R2</title>
    <url>/2024/04/12/%E4%BD%BF%E7%94%A8%E8%85%BE%E8%AE%AF%E4%BA%91CDN%E5%8A%A0%E9%80%9FCloudflare-R2/</url>
    <content><![CDATA[<h1 id="使用腾讯云CDN加速Cloudflare-R2"><a href="#使用腾讯云CDN加速Cloudflare-R2" class="headerlink" title="使用腾讯云CDN加速Cloudflare R2"></a>使用腾讯云CDN加速Cloudflare R2</h1><h2 id="什么是Cloudflare-R2"><a href="#什么是Cloudflare-R2" class="headerlink" title="什么是Cloudflare R2"></a>什么是Cloudflare R2</h2><p>Cloudflare R2，即Cloudflare推出的对象存储，兼容AWS S3协议，提供免费10G存储空间以及每月 <code>100万次写</code>，<code>1000万次读</code>操作，<code>无流量费用</code>，这点对个人用户来说基本是 <code>免费</code><br><img src="https://r2.lm379.cn/2024%2F03%2F11a8baf42d6804470d7766d0e3b681a5.png" alt="Clouflare R2官方介绍"><br>但是不出意外的，Cloudflare R2免费版没有提供 <code>中国大陆</code>的节点，虽然其 <code>亚太</code>地区节点访问速度还可以，但是架不住延迟还是挺高的，所以笔者想到了用境内CDN加速，并且试了下只需要更改自定义域名即可，其他什么操作都不用，还是很方便的</p>
<h2 id="创建R2-API令牌"><a href="#创建R2-API令牌" class="headerlink" title="创建R2 API令牌"></a>创建R2 API令牌</h2><p>打开<a href="https://dash.cloudflare.com/">Cloudflare控制台</a>，点击左侧的R2，首次打开需要验证开通，用外币信用卡或者 <code>Paypal绑定银联卡</code>即可，中国大陆的用户建议直接后者</p>
<blockquote>
<p><del>都2024年了，不会还有人不知道Paypal国区早就开放了吧</del><br>下面的内容需要你至少有 <code>一个存储桶</code>，没有存储桶的自己去创建，按下图来就行，区域最好选 <code>亚太地区</code><br><img src="https://r2.lm379.cn/2024/04/b08396ba1c00b276314fbca50fc8a22d.png"></p>
</blockquote>
<p>接着点击右侧管理 <code>API令牌</code>，点击 <code>管理R2 API令牌</code>去创建一个API令牌<br><img src="https://r2.lm379.cn/2024/04/258a25bcbfa324e35920ba477a6cb2a2.png"><br>名称随意，权限建议 <code>对象读和写</code>，可以指定存储桶，根据实际情况来<br><img src="https://r2.lm379.cn/2024/04/b0dd69ca8dc8fec01e496f3ffdaf759e.png"><br>创建好令牌会显示具体的密钥ID和访问密钥，以及调用API的网址，将这个密钥保存好，即下图的三个<br><img src="https://r2.lm379.cn/2024/04/5dd50dbea8fb92e3cb50feb9ee2e9dae.png"><br><code>&lt;a id=&quot;s3api&quot;&gt;&lt;/a&gt;</code><br>回到创建的 <code>存储桶</code>，点击设置<br><img src="https://r2.lm379.cn/2024/04/11b880d1e3769b2fb3621a7fbf299308.png"><br><code>&lt;a id=&quot;domain&quot;&gt;&lt;/a&gt;</code>往下翻找到 <code>自定义域名</code>，为存储桶添加一个自定义域名(后面要用到)</p>
<blockquote>
<p>这个域名需要托管在cloudflare，如果CF上没有域名或者不想改域名的DNS记录的，可以尝试启用 <code>r2.dev子域</code><br><img src="https://r2.lm379.cn/2024/04/46d08664bd44ce3dcb5e048b7cb2ce5a.png"></p>
</blockquote>
<h2 id="启用腾讯云CDN加速"><a href="#启用腾讯云CDN加速" class="headerlink" title="启用腾讯云CDN加速"></a>启用腾讯云CDN加速</h2><p>打开<a href="https://console.cloud.tencent.com/cdn">腾讯云CDN控制台</a>，添加一个域名，加速中国大陆区域需要域名已经 <code>备案</code>，没有备案的选 <code>中国境外</code>即可实测腾讯云CDN境外节点在国内访问速度会比cloudflare快一些加速域名填自己的，托管dnspod的域名无需完成域名归属权验证，需要完成的根据提示来即可加速类型 <code>网页小文件</code>，源站类型 <code>第三方对象存储</code>，来源 <code>其他厂商对象存储</code>，协议 <code>HTTPS</code>，源站地址为上面绑定的<a href="#domain">自定义域名</a><img src="https://r2.lm379.cn/2024/04/575bce19d4e2f310e60e1427f78c0c38.png"><br>勾选 <code>私有存储桶访问</code>，点击填写<code>bucketname</code>对应之前创建的存储桶名称，<code>region</code>直接填写 <code>auto</code>即可，<code>访问ID</code>和 <code>密钥</code>一一对应填写即可，保存并确认添加<img src="https://r2.lm379.cn/2024/04/3ad368de42bb6102f40dfaf1a7c8847f.png"><br>缓存配置无脑下一步就行，<code>HTTPS</code>建议开启，下面的证书自己去腾讯云或者其他平台申请一本SSL证书就行，推荐腾讯云，免费一年</p>
<blockquote>
<p>ps: 虽然腾讯云CDN的HTTPS是付费的，但是实际上每个月是有免费300万次的额度的，对于个人用户300万次完全足够，详情可以参考<a href="https://cloud.tencent.com/document/product/228/75563">腾讯云的官方文档</a><br><img src="https://r2.lm379.cn/2024/04/27b39b10cdadd23ff0c1e09b92dc3564.png"></p>
</blockquote>
<p>等待CDN的状态变为启用，就可以尝试将节点换成腾讯云CDN的链接了<br><img src="https://r2.lm379.cn/2024/04/469c1b5d0bb8a1ee20fa0e79fe9faa1e.png"></p>
<h2 id="R2添加示例：PicGo"><a href="#R2添加示例：PicGo" class="headerlink" title="R2添加示例：PicGo"></a>R2添加示例：PicGo</h2><p>进去后找到Amazon S3，点击添加<br>注意下<a href="#s3api">自定义节点</a>是创建API后显示出来的那个域名(一般是以 <code>r2.cloudflarestorage.com</code>结尾)<br>或者在存储桶的 <code>设置页</code>也能看见，其他看图即可<br><img src="https://r2.lm379.cn/2024/04/9fd379fe1c425a359622e3a489977f7e.png"><br>如果需要换回cloudflare的cdn只需要修改自定义域名即可</p>
]]></content>
      <categories>
        <category>博客搭建</category>
      </categories>
      <tags>
        <tag>hexo</tag>
        <tag>图床</tag>
      </tags>
  </entry>
  <entry>
    <title>天翼云盘自动签到</title>
    <url>/2024/02/22/%E5%A4%A9%E7%BF%BC%E4%BA%91%E7%9B%98%E8%87%AA%E5%8A%A8%E7%AD%BE%E5%88%B0/</url>
    <content><![CDATA[<h1 id="天翼云盘自动签到"><a href="#天翼云盘自动签到" class="headerlink" title="天翼云盘自动签到"></a>天翼云盘自动签到</h1><p>本教程需要使用到python，版本要求python3.7以上，平台不限，win和Linux都行(支持云函数)。<br>本文以debian为例，python3请自行安装</p>
<h2 id="拉取源码"><a href="#拉取源码" class="headerlink" title="拉取源码"></a>拉取源码</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">git clone --recursive https://github.com/arcturus-script/ecloud.git</span><br></pre></td></tr></table></figure>

<p>如github访问失败，请输入</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">git clone --recursive https://gh.lm379.cf/github.com/arcturus-script/ecloud.git</span><br></pre></td></tr></table></figure>

<h2 id="安装依赖"><a href="#安装依赖" class="headerlink" title="安装依赖"></a>安装依赖</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">cd ecloud</span><br><span class="line">pip3 install -r requirements.txt -t .</span><br></pre></td></tr></table></figure>

<p>若为腾讯云函数</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">pip3 install -r ./src/requirements.txt -t ./src</span><br></pre></td></tr></table></figure>

<h2 id="更改配置"><a href="#更改配置" class="headerlink" title="更改配置"></a>更改配置</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">nano config.py</span><br></pre></td></tr></table></figure>

<p>修改account和password为你天翼云盘的账号密码，需要推送消息还需要填写push字段</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">config = &#123;</span><br><span class="line">    <span class="string">&quot;multi&quot;</span>: [</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="string">&quot;account&quot;</span>: <span class="string">&quot;xxx&quot;</span>,</span><br><span class="line">            <span class="string">&quot;password&quot;</span>: <span class="string">&quot;xxx&quot;</span>,</span><br><span class="line">            <span class="comment"># &quot;push&quot;: &#123;</span></span><br><span class="line">            <span class="comment">#     &quot;type&quot;: &quot;pushplus&quot;,</span></span><br><span class="line">            <span class="comment">#     &quot;key&quot;: &quot;xxx&quot;,</span></span><br><span class="line">            <span class="comment"># &#125;,</span></span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="comment"># &#123;</span></span><br><span class="line">        <span class="comment">#     &quot;account&quot;: &quot;xxx&quot;,</span></span><br><span class="line">        <span class="comment">#     &quot;password&quot;: &quot;xxx&quot;,</span></span><br><span class="line">        <span class="comment">#     # &quot;push&quot;: [</span></span><br><span class="line">        <span class="comment">#     #     # 以数组的形式填写, 则会向多个服务推送消息</span></span><br><span class="line">        <span class="comment">#     #     &#123;</span></span><br><span class="line">        <span class="comment">#     #         &quot;type&quot;: &quot;pushplus&quot;,</span></span><br><span class="line">        <span class="comment">#     #         &quot;key&quot;: &quot;xxx&quot;,</span></span><br><span class="line">        <span class="comment">#     #     &#125;,</span></span><br><span class="line">        <span class="comment">#     #     &#123;</span></span><br><span class="line">        <span class="comment">#     #         &quot;type&quot;: &quot;workWechat&quot;,</span></span><br><span class="line">        <span class="comment">#     #         &quot;key&quot;: &#123;</span></span><br><span class="line">        <span class="comment">#     #             &quot;agentid&quot;: 1000002,</span></span><br><span class="line">        <span class="comment">#     #             &quot;corpSecret&quot;: &quot;xxx&quot;,</span></span><br><span class="line">        <span class="comment">#     #             &quot;corpid&quot;: &quot;xxx&quot;,</span></span><br><span class="line">        <span class="comment">#     #         &#125;,</span></span><br><span class="line">        <span class="comment">#     #     &#125;,</span></span><br><span class="line">        <span class="comment">#     # ],</span></span><br><span class="line">        <span class="comment"># &#125;,</span></span><br><span class="line">    ],</span><br><span class="line">    <span class="string">&quot;push&quot;</span>: &#123;</span><br><span class="line">        <span class="comment"># 合并发送消息, 只合并未单独配置 push 的账号</span></span><br><span class="line">        <span class="string">&quot;type&quot;</span>: <span class="string">&quot;pushplus&quot;</span>,</span><br><span class="line">        <span class="string">&quot;key&quot;</span>: <span class="string">&quot;xxx&quot;</span>,</span><br><span class="line">    &#125;,</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>然后ctrl+o保存，ctrl+x退出</p>
<h2 id="运行"><a href="#运行" class="headerlink" title="运行"></a>运行</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">python3 index.py</span><br></pre></td></tr></table></figure>

<h2 id="设置定时任务"><a href="#设置定时任务" class="headerlink" title="设置定时任务"></a>设置定时任务</h2><p>假设文件夹放在用户目录下</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">echo &quot;python3 ~/ecloud/index.py&quot; &gt; task.sh</span><br><span class="line">chmod +x task.sh</span><br><span class="line">crontab -e</span><br></pre></td></tr></table></figure>

<p>在文件中添加</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">30 5 * * *sh task.sh &gt; task.log</span><br></pre></td></tr></table></figure>

<p>表示每天5点半自动签到</p>
<h2 id="效果"><a href="#效果" class="headerlink" title="效果"></a>效果</h2><!-- ![8ec8131de4732cbc971e941eb11f7a95_720.jpg](https://image.baidu.com/search/down?url=https://tva1.sinaimg.cn/large/007Dxz4Tly1hn2lvas24aj30o01hcgo2.jpg) -->

<p><img src="https://r2.lm379.cn/2024/04/42b01243e6f8fca8c692ffd633aab2bd.jpg"></p>
]]></content>
      <tags>
        <tag>自动签到</tag>
      </tags>
  </entry>
  <entry>
    <title>小米系列设备从零开始的root教程</title>
    <url>/2024/02/21/%E5%B0%8F%E7%B1%B3%E7%B3%BB%E5%88%97%E8%AE%BE%E5%A4%87%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%E7%9A%84root%E6%95%99%E7%A8%8B/</url>
    <content><![CDATA[<h1 id="小米系列设备从零开始的root教程"><a href="#小米系列设备从零开始的root教程" class="headerlink" title="小米系列设备从零开始的root教程"></a>小米系列设备从零开始的root教程</h1><h2 id="解锁BL"><a href="#解锁BL" class="headerlink" title="解锁BL"></a>解锁BL</h2><p>BL，全程bootloader，google在安卓6.0后引入BL锁，为了增强设备的安全性，在BL锁定时无法通过fastboot刷写系统，而刷入magisk是需要在boot分区（小米14等出厂A14的设备为init_boot）下进行操作的，因此我们需要解锁BL。</p>
<blockquote>
<p>而小米在HyperOS发布后引入了全新的BL解锁机制，MIUI14及以下的设备和搭载HyperOS的设备（包括OTA升级到HyperOS）解锁Bootloader的方式不同</p>
</blockquote>
<p><strong>注意，解锁BL会 <code>清除手机所有数据</code>，请在解锁之前做好 <code>数据备份</code>工作</strong></p>
<h3 id="MIUI系统解锁BL的方法"><a href="#MIUI系统解锁BL的方法" class="headerlink" title="MIUI系统解锁BL的方法"></a>MIUI系统解锁BL的方法</h3><p><code>&lt;a id=&quot;bind&quot;&gt;&lt;/a&gt;</code></p>
<ol>
<li><p>进入开发者模式绑定设备</p>
<blockquote>
<p>以MIUI14为例依次点击 <code>设置</code>-<code>我的设备</code>-<code>全部参数与信息</code>，连续点击 <code>MIUI版本</code>直到提示 <code>您正处于开发者模式</code><br><img src="https://r2.lm379.cn/2024/04/c51f48be09237609758aeb06675008ea.jpg" alt="开启开发者选项"><br>然后回到设置首页，找到 <code>更多设置</code>，点击进入 <code>开发者选项</code><br>点击 <code>设备解锁状态</code>，确保已经插入sim卡，登录小米账号和关闭wifi后，点击绑定账号和设备，提示绑定成功后关闭页面，等待至少7天后即可连接电脑解锁<br><img src="https://r2.lm379.cn/2024/04/4a9f30ea715aef980e843377aacdde45.jpg"></p>
</blockquote>
</li>
<li><p>解锁BL电脑打开 <a href="https://www.miui.com/unlock/download.html">MIUI解锁工具下载</a> 点击立即下载，下载完后右键解压到任意目录（路径不要有中文），双击打开解压后的文件夹，双击打开其中的 <code>miflash_unlock.exe</code>，并登录小米账号<img src="https://r2.lm379.cn/2024/04/a01561c4f7526f25179a67ebb195a466.jpg" alt="解锁工具"><code>&lt;a id=&quot;fastboot&quot;&gt;&lt;/a&gt;</code><br>将手机关机，按住 <code>音量键-</code>和 <code>电源键</code>至手机出现米兔或者 <code>fastboot</code>字样以进入fastboot模式用数据线将手机连接到电脑(建议使用<strong>原装数据线</strong>)，点击 <code>解锁</code>，等待解锁完成</p>
<blockquote>
<p>若手机已经进入了fastboot模式，但是电脑还是无法识别到手机，可尝试更换USB接口(<strong>建议优先使用USB2.0接口</strong>)，或点击解锁工具右上角的 <code>设置</code>-<code>驱动检测</code>后重试<br><img src="https://r2.lm379.cn/2024/04/ec5817946a3e5628d20ab1e73998dcc4.jpg" alt="image.png"><br>正常情况下解锁BL至少需要等待168小时<br><img src="https://r2.lm379.cn/2024/04/69c23daa8f239dce3d4dc7751f6b33d7.jpg" alt="解锁失败"></p>
</blockquote>
<p>时间等待足够后，点击解锁即可解锁成功，此时手机会清除所有数据并重启<br><img src="https://r2.lm379.cn/2024/04/019435d607b0b43ac3a6af493deed0d2.jpg" alt="解锁成功"></p>
</li>
</ol>
<h3 id="HyperOS解锁BL"><a href="#HyperOS解锁BL" class="headerlink" title="HyperOS解锁BL"></a>HyperOS解锁BL</h3><p>小米HyperOS解锁BL的门槛进行了提升，需要 <code>小米社区5级账号</code>，并且 <code>每周二周四上午10点到下午16点通过答题后</code>报名解锁BL，报名通过后和MIUI一样<a href="#bind">绑定设备</a>，并等待72小时后即可解锁BL</p>
<blockquote>
<p>如你的设备已经可以更新HyperOS但是还没有更新，同时有解锁BL的打算，建议你在更新之前进行<a href="#bind">绑定</a>，这样在更新后你同样可以和MIUI一样解锁BL，不需要前往小米社区答题</p>
</blockquote>
<blockquote>
<p>或者你的设备在MIUI的时候已经解锁BL，你希望更新HyperOS的同时保留BL，可以通过<a href="#hide">隐藏BL</a>或者三方rec直接刷入官方rom来保留BL</p>
</blockquote>
<h3 id="特殊-联发科平台解锁BL"><a href="#特殊-联发科平台解锁BL" class="headerlink" title="[特殊]联发科平台解锁BL"></a>[特殊]联发科平台解锁BL</h3><p>联发科在 <code>天玑920</code>以前发布的芯片存在漏洞，可以通过该漏洞实现秒解BL，理论上只要包含该漏洞的手机均可通过这个漏洞解锁BL，不论手机品牌，教程可参考<a href="https://zhuanlan.zhihu.com/p/493173122">这里</a></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">小米系列手机可通过该漏洞解BL的设备包括但不仅限于</span><br><span class="line"></span><br><span class="line">小米:小米play</span><br><span class="line"></span><br><span class="line">红米:红米Pro高配版</span><br><span class="line"></span><br><span class="line">Note系列:红米Note4/4X联发科版 红米Note8Pro 红米Note9 5G 红米Note10/10Pro 红米Note11 4G/5G 红米Note11E 红米Note11SE 红米Note11R</span><br><span class="line"></span><br><span class="line">红米数字系列:红米6/6A 红米9A 红米10A 红米10X 4G/5G 红米10X Pro  </span><br><span class="line"></span><br><span class="line">红米K系列:红米K30至尊纪念版 红米K40游戏增强版  </span><br></pre></td></tr></table></figure>

<blockquote>
<p>已知不包括天玑9000系列，天玑8000系列，绝大部分天玑7000系列<br>另外部分手机系统更新后会修复该漏洞，或者部分出厂新的设备也不支持<br>如同为联发科G85，10X 4G能解开，12C不能，此时只能官方168小时或者小米社区答题</p>
</blockquote>
<h2 id="刷入Magisk"><a href="#刷入Magisk" class="headerlink" title="刷入Magisk"></a>刷入Magisk</h2><p>目前magisk存在多个版本，有 <code>官方原版</code>，<code>官方beta版</code>，<code>官方canary版</code>，<code>alpha版</code>，<code>delta版（现改名Kitsune Mask）</code>我个人比较推荐使用delta版(即 <code>Kitsune Mask</code>)，因其强大的隐藏root功能，可以应付绝大部分软件检测root的情况</p>
<blockquote>
<p>同时本文不教通过三方Rec刷入magisk的方法<br><strong>因为部分联发科设备刷入三方rec后可能会导致系统出现问题，并且并非所有设备都有大佬做rec</strong></p>
</blockquote>
<h3 id="下载magisk"><a href="#下载magisk" class="headerlink" title="下载magisk"></a>下载magisk</h3><p>Kitsune Mask的原始下载地址为<a href="https://github.com/HuskyDG/magisk-files/releases">这里</a>，考虑到github的特殊性，笔者在资源站中提供了下载，读者可前往<a href="https://pan.lm379.cn/magisk/delta/stable">这里</a>下载 <code>app-release.apk</code>并安装到手机</p>
<h3 id="提取boot"><a href="#提取boot" class="headerlink" title="提取boot"></a>提取boot</h3><p>注意: 小米14系列以及红米K70系列等出厂安卓14的手机需要提取 <code>init_boot.img</code><br>如果你懒得提取，建议移步酷安你的设备的话题下，搜索对应系统的 <code>boot</code>，一般都会有人分享boot文件<br><del>如本人就在酷安发过Redmi Note 12 Turbo多个系统的boot文件</del></p>
<h4 id="从刷机包中提取"><a href="#从刷机包中提取" class="headerlink" title="从刷机包中提取"></a>从刷机包中提取</h4><p>小米系列卡刷包格式为 <code>.zip</code>,线刷包格式为 <code>.tar</code>，如果你是红米Note 12 Turbo用户，可直接前往<a href="https://cloud.lm379.cn/%E5%88%B7%E6%9C%BA/Redmi%20Note%2012%20Turbo">我的资源站</a>享受不限速下载，其他机型用户自行前往<a href="https://hyperos.fans/">这里</a></p>
<ol>
<li>从卡刷包中提取boot<br>下载当前系统的卡刷包，解压出 <code>payload.bin</code>，使用 <code>payload解包</code>工具提取出 <code>boot.img</code>或者是 <code>init_boot.img</code><blockquote>
<p>payload解包工具下载链接在<a href="https://cloud.lm379.cn/d/%E5%88%B7%E6%9C%BA/LG%20G7/payload%E8%A7%A3%E5%8C%85.7z">这里</a></p>
</blockquote>
</li>
<li>从线刷包中提取boot<br>注意线刷包格式为 <code>.tar</code>，需要先从里面解压出 <code>.zip</code>，再从 <code>.zip</code>中解压出 <code>boot.img</code>或者是 <code>init_boot.img</code></li>
</ol>
<h4 id="利用dsu提取分区"><a href="#利用dsu提取分区" class="headerlink" title="利用dsu提取分区"></a>利用dsu提取分区</h4><p>注意: 以下内容需要有一定刷机基础<br>前提，需要设备为 <code>Vab分区</code>，<code>安卓10及以上</code>，且已经 <code>解锁Bootloader</code>，可通过dsu侧载userdebug系统镜像<br>具体可参考<a href="https://space.bilibili.com/251013709">@晨钟酱</a>大佬视频视频的 <code>1:55</code></p>


<iframe src="https://player.bilibili.com/player.html?aid=657812893&bvid=BV1xa4y1c7t1&cid=1177523832&p=1" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true"> </iframe>


<h3 id="修补boot"><a href="#修补boot" class="headerlink" title="修补boot"></a>修补boot</h3><p>将上面提取出的 <code>boot.img</code>或者是 <code>init_boot.img</code>复制到手机任何你能找到的位置</p>
<blockquote>
<p>注意不要用QQ&#x2F;微信（建议方法：手机数据线连接电脑传输或用FTP传）</p>
</blockquote>
<p>打开之前安装的面具app，点击 <code>安装</code>-<code>选择并修补一个文件</code>，选择之前提取出的 <code>boot.img</code>或是 <code>init_boot.img</code>，等待修补完成<br><img src="https://r2.lm379.cn/2024/04/9ad245bed0b3972be08d4943accc16d6.jpg" alt="2161417ce967b67e2a6ef4a9a664f02d_720.jpg"></p>
<p>再进入Download目录，找到文件名类似 <code>magisk_patched-xxxx.img</code>的文件，将其传到电脑上</p>
<blockquote>
<p>如果你嫌文件传来传去的麻烦，也可以用<a href="http://www.coolapk.com/u/3463951">@某贼</a>大佬开发的面具工具箱，省去了boot文件传到手机的步骤，点<a href="https://cloud.lm379.cn/d/app/%E9%9D%A2%E5%85%B7%E5%B7%A5%E5%85%B7%E7%AE%B1.7z">这里下载</a></p>
</blockquote>
<h3 id="刷入boot"><a href="#刷入boot" class="headerlink" title="刷入boot"></a>刷入boot</h3><p>为了方便，我这里直接使用搞机助手，点<a href="https://lsdy.top/gjzsdownload">这里下载</a><br>安装后打开搞机助手，将<a href="#fastboot">手机重启到fastboot</a>，等搞机助手识别到设备后，依次点击左侧的 <code>引导模式</code>-<code>刷入boot</code>，选择上一步修补好的 <code>magisk_patched-xxxx.img</code>文件，刷入即可<br><img src="https://r2.lm379.cn/2024/04/af6dfa2f9c34a5db30685cca71128f38.jpg" alt="image.png"><br>若没有报错，长按电源键重启即可(或者搞机助手内点击重启)<br>不出意外的话，magisk已经可以正常使用了（如下图magisk会显示版本号）<br><img src="https://r2.lm379.cn/2024/04/fc41647867aeb05635240e9a993822b2.jpg" alt="8bb7afe1b2eb98392d955965e4f38a28.jpg"></p>
<p><code>&lt;a id=&quot;hide&quot;&gt;&lt;/a&gt;</code></p>
<h3 id="隐藏BL"><a href="#隐藏BL" class="headerlink" title="隐藏BL"></a>隐藏BL</h3><p>刷入<a href="https://cloud.lm379.cn/d/%E5%88%B7%E6%9C%BA/Redmi%20Note%2012%20Turbo/magisk%E6%A8%A1%E5%9D%97/hide_locked_18002.zip">这个模块</a>即可骗过系统以获得HyperOS的推送(只需要MIUI升级HyperOS的时候使用)</p>
<h2 id="隐藏root"><a href="#隐藏root" class="headerlink" title="隐藏root"></a>隐藏root</h2><p><code>Kitsune Mask</code>即上文提到的delta面具，只需要开启下图中两个开关，并给需要root的应用配置白名单(<code>SuList</code>)即可应付大部分应用了<br><img src="https://r2.lm379.cn/2024/04/896746d183e12d387ccd8386da51c4c3.jpg" alt="7699f9de44f06808ff883c14d78a71ce.jpg"></p>
]]></content>
      <categories>
        <category>教程</category>
      </categories>
      <tags>
        <tag>Redmi Note12 Turbo</tag>
        <tag>root</tag>
        <tag>小米</tag>
      </tags>
  </entry>
  <entry>
    <title>玩客云安装docker-compose</title>
    <url>/2024/02/05/%E7%8E%A9%E5%AE%A2%E4%BA%91%E5%AE%89%E8%A3%85docker-compose/</url>
    <content><![CDATA[<h1 id="玩客云安装docker-compose"><a href="#玩客云安装docker-compose" class="headerlink" title="玩客云安装docker-compose"></a>玩客云安装docker-compose</h1><blockquote>
<p>玩客云安装docker比较简单，直接根据网上的教程来就行，但是docker-compose安装起来比较麻烦<br>玩客云的SOC是arm32架构，但是官方并没有发布关于docker-compose的arm32版本，所以需要自己编译或者使用大佬编译好的镜像</p>
</blockquote>
<h2 id="方法一：直接安装大佬编译好的arm32版docker-compose"><a href="#方法一：直接安装大佬编译好的arm32版docker-compose" class="headerlink" title="方法一：直接安装大佬编译好的arm32版docker-compose"></a>方法一：直接安装大佬编译好的arm32版docker-compose</h2><ul>
<li>请先自行安装好docker，安装好后执行</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">curl -fsSL https://raw.githubusercontent.com/aleksanderlech/armv7-docker-compose/master/run.sh -o /usr/local/bin/docker-compose</span><br><span class="line"><span class="built_in">chmod</span> +x /usr/local/bin/docker-compose</span><br><span class="line">docker-compose version</span><br></pre></td></tr></table></figure>

<h2 id="方法二：使用python"><a href="#方法二：使用python" class="headerlink" title="方法二：使用python"></a>方法二：使用python</h2><h3 id="1-检查系统环境"><a href="#1-检查系统环境" class="headerlink" title="1. 检查系统环境"></a>1. 检查系统环境</h3><blockquote>
<p>编译需要用到python3（版本大于3.6），本文使用的系统为armbian，部分大佬编译的系统固件中默认包含了python，所以建议先检查系统中是否已经默认安装了</p>
</blockquote>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">python3 -V </span><br><span class="line">pip -V</span><br></pre></td></tr></table></figure>

<blockquote>
<p>若没有安装，请执行</p>
</blockquote>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">apt update &amp;&amp; apt install python3 python3-pip</span><br><span class="line">root@onecloud:~<span class="comment"># python3 -V</span></span><br><span class="line">Python 3.9.2</span><br><span class="line">root@onecloud:~<span class="comment"># pip -V</span></span><br><span class="line">pip 20.3.4 from /usr/lib/python3/dist-packages/pip (python 3.9)</span><br></pre></td></tr></table></figure>

<p>若apt update失败或很慢，请先更换apt源</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">nano /etc/apt/sources.list</span><br></pre></td></tr></table></figure>

<p>将原有文件内容全部删掉或者注释，并替换为以下内容</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">## 中科大源</span></span><br><span class="line">deb http://mirrors.ustc.edu.cn/debian bullseye main contrib non-free</span><br><span class="line"><span class="comment">#deb-src http://mirrors.ustc.edu.cn/debian bullseye main contrib non-free</span></span><br><span class="line"></span><br><span class="line">deb http://mirrors.ustc.edu.cn/debian bullseye-updates main contrib non-free</span><br><span class="line"><span class="comment">#deb-src http://mirrors.ustc.edu.cn/debian bullseye-updates main contrib non-free</span></span><br><span class="line"></span><br><span class="line">deb http://mirrors.ustc.edu.cn/debian bullseye-backports main contrib non-free</span><br><span class="line"><span class="comment">#deb-src http://mirrors.ustc.edu.cn/debian bullseye-backports main contrib non-free</span></span><br><span class="line"></span><br><span class="line">deb http://mirrors.ustc.edu.cn/debian-security/ bullseye-security main contrib non-free</span><br><span class="line"><span class="comment">#deb-src http://mirrors.ustc.edu.cn/debian-security/ bullseye-security main contrib non-free</span></span><br></pre></td></tr></table></figure>

<p>然后ctrl+o并回车保存，ctrl+x退出</p>
<blockquote>
<p>pip换源</p>
</blockquote>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">pip config <span class="built_in">set</span> global.index-url https://pypi.tuna.tsinghua.edu.cn/simple  // 更换为清华源</span><br><span class="line">pip config <span class="built_in">set</span> global.trusted-host pypi.tuna.tsinghua.edu.cn</span><br></pre></td></tr></table></figure>

<h3 id="2-安装部分依赖，否则pip安装docker-compose报错"><a href="#2-安装部分依赖，否则pip安装docker-compose报错" class="headerlink" title="2. 安装部分依赖，否则pip安装docker-compose报错"></a>2. 安装部分依赖，否则pip安装docker-compose报错</h3><p>编译安装rustup</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">curl --proto <span class="string">&#x27;=https&#x27;</span> --tlsv1.2 -sSf https://sh.rustup.rs | sh</span><br></pre></td></tr></table></figure>

<p>安装cargo</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">apt install cargo</span><br></pre></td></tr></table></figure>

<p>安装libffi</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">apt install libffi-dev</span><br></pre></td></tr></table></figure>

<h3 id="3-pip安装docker-compose（时间很长）"><a href="#3-pip安装docker-compose（时间很长）" class="headerlink" title="3. pip安装docker-compose（时间很长）"></a>3. pip安装docker-compose（时间很长）</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">pip install docker-compose</span><br></pre></td></tr></table></figure>

<p>检查docker-compose版本</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@onecloud:~<span class="comment"># docker-compose --version</span></span><br><span class="line">docker-compose version 1.29.2, build 5bece73</span><br></pre></td></tr></table></figure>

<p>至此，安装结束</p>
]]></content>
      <tags>
        <tag>玩客云</tag>
      </tags>
  </entry>
  <entry>
    <title>2023程序设计实验期末考试</title>
    <url>/2024/05/02/%E5%A4%B4%E6%AD%8CC%E8%AF%AD%E8%A8%80%E5%AE%9E%E9%AA%8C/2023%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1%E5%AE%9E%E9%AA%8C%E6%9C%9F%E6%9C%AB%E8%80%83%E8%AF%95/</url>
    <content><![CDATA[<h1 id="编程题部分"><a href="#编程题部分" class="headerlink" title="编程题部分"></a>编程题部分</h1><h2 id="1-谁拿了最多的奖学金"><a href="#1-谁拿了最多的奖学金" class="headerlink" title="1. 谁拿了最多的奖学金"></a>1. 谁拿了最多的奖学金</h2><p>问题描述<br>某校的惯例是在每学期的期末考试之后发放奖学金。发放的奖学金共有五种，获取的条件各自不同：</p>
<p>院士奖学金，每人8000元，期末平均成绩高于80分（&gt;80），并且在本学期内发表1篇或1篇以上论文的学生均可获得；<br>五四奖学金，每人4000元，期末平均成绩高于85分（&gt;85），并且班级评议成绩高于80分（&gt;80）的学生均可获得；<br>成绩优秀奖，每人2000元，期末平均成绩高于90分（&gt;90）的学生均可获得；<br>西部奖学金，每人1000元，期末平均成绩高于85分（&gt;85）的西部省份学生均可获得；<br>班级贡献奖，每人850元，班级评议成绩高于80分（&gt;80）的学生干部均可获得。<br>只要符合条件就可以得奖，每项奖学金的获奖人数没有限制，每名学生也可以同时获得多项奖学金。例如姚林的期末平均成绩是87分，班级评议成绩82分，同时他还是一位学生干部，那么他可以同时获得五四奖学金和班级贡献奖，奖金总数是4850元。 现在给出若干学生的相关数据，请计算哪些同学获得的奖金总数最高（假设总有同学能满足获得奖学金的条件）。<br>输入<br>输入的第一行是一个整数N（1≤N≤100），表示学生的总数。<br>接下来的N行每行是一位学生的数据，从左向右依次是姓名，期末平均成绩，班级评议成绩，是否是学生干部，是否是西部省份学生，以及发表的论文数。姓名是由大小写英文字母组成的长度不超过20的字符串（不含空格）；期末平均成绩和班级评议成绩都是0到100之间的整数（包括0和100）；是否是学生干部和是否是西部省份学生分别用一个字符表示，Y表示是，N表示不是；发表的论文数是0到10的整数（包括0和10）。每两个相邻数据项之间用一个空格分隔。</p>
<p>输出<br>输出包括三行，第一行是获得最多奖金的学生的姓名，第二行是这名学生获得的奖金总数。如果有两位或两位以上的学生获得的奖金最多，输出他们之中在输入中出现最早的学生的姓名。第三行是这N个学生获得的奖学金的总数。</p>
<p>输入示例<br>4<br>YaoLin 87 82 Y N 0<br>ChenRuiyi 88 78 N Y 1<br>LiXin 92 88 N N 0<br>ZhangQin 83 87 Y N 1</p>
<p>输出示例<br>ChenRuiyi<br>9000<br>28700</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> <span class="title">data</span>&#123;</span></span><br><span class="line">    <span class="type">char</span> name[<span class="number">21</span>];</span><br><span class="line">    <span class="type">int</span> avg;</span><br><span class="line">    <span class="type">int</span> clscore;</span><br><span class="line">    <span class="type">char</span> isleder;</span><br><span class="line">    <span class="type">char</span> iswest;</span><br><span class="line">    <span class="type">int</span> num;</span><br><span class="line">&#125;DATA;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span>&#123;</span><br><span class="line">    <span class="type">int</span> N,i;</span><br><span class="line">    <span class="type">int</span> count,max,all;</span><br><span class="line">    DATA *stu;</span><br><span class="line">    <span class="type">int</span> *money;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;N);</span><br><span class="line">    stu=(DATA*)<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(DATA)*N);</span><br><span class="line">    money=(<span class="type">int</span>*)<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(<span class="type">int</span>)*N);</span><br><span class="line">  </span><br><span class="line">    <span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;N;i++)&#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%s %d %d %c %c %d&quot;</span>,stu[i].name,&amp;stu[i].avg,&amp;stu[i].clscore,&amp;stu[i].isleder,&amp;stu[i].iswest,&amp;stu[i].num);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;N;i++)&#123;</span><br><span class="line">        money[i]=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">if</span>(stu[i].avg&gt;<span class="number">80</span> &amp;&amp; stu[i].num&gt;=<span class="number">1</span>)&#123;</span><br><span class="line">            money[i]+=<span class="number">8000</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(stu[i].avg&gt;<span class="number">85</span> &amp;&amp; stu[i].clscore&gt;<span class="number">80</span>)&#123;</span><br><span class="line">            money[i]+=<span class="number">4000</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(stu[i].avg&gt;<span class="number">90</span>)&#123;</span><br><span class="line">            money[i]+=<span class="number">2000</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(stu[i].avg&gt;<span class="number">85</span> &amp;&amp; stu[i].iswest==<span class="string">&#x27;Y&#x27;</span>)&#123;</span><br><span class="line">            money[i]+=<span class="number">1000</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(stu[i].clscore&gt;<span class="number">80</span> &amp;&amp; stu[i].isleder==<span class="string">&#x27;Y&#x27;</span>)&#123;</span><br><span class="line">            money[i]+=<span class="number">850</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    max=money[<span class="number">0</span>];</span><br><span class="line">    all=money[<span class="number">0</span>];</span><br><span class="line">    count=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(i=<span class="number">1</span>;i&lt;N;i++)&#123;</span><br><span class="line">        all+=money[i];</span><br><span class="line">        <span class="keyword">if</span>(money[i]&gt;max)&#123;</span><br><span class="line">            max=money[i];</span><br><span class="line">            count=i;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%s\n%d\n%d&quot;</span>,stu[count].name,money[count],all);</span><br><span class="line">    <span class="built_in">free</span>(money);</span><br><span class="line">    <span class="built_in">free</span>(stu);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="2-陶陶摘苹果"><a href="#2-陶陶摘苹果" class="headerlink" title="2. 陶陶摘苹果"></a>2. 陶陶摘苹果</h2><p>问题描述<br>陶陶家的院子里有一棵苹果树，每到秋天树上就会结出10个苹果。苹果成熟的时候，陶陶就会跑去摘苹果。陶陶有个30厘米高的板凳，当她不能直接用手摘到苹果的时候，就会踩到板凳上再试试。现在已知10个苹果到地面的高度，以及陶陶把手伸直的时候能够达到的最大高度，请帮陶陶算一下她能够摘到的苹果的数目。假设她碰到苹果，苹果就会掉下来。</p>
<p>输入<br>输入包括两行数据。第一行包含10个100到200之间（包括100和200）的整数（以厘米为单位）分别表示10个苹果到地面的高度，两个相邻的整数之间用一个空格隔开。第二行只包括一个100到120之间（包含100和120）的整数（以厘米为单位），表示陶陶把手伸直的时候能够达到的最大高度。</p>
<p>输出<br>输出文件包括一行，这一行只包含一个整数，表示陶陶能够摘到的苹果的数目。</p>
<p>输入示例<br>100 200 150 140 129 134 167 198 200 111<br>110</p>
<p>输出示例<br>5</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span>&#123;</span><br><span class="line">    <span class="type">int</span> n=<span class="number">0</span>,i;</span><br><span class="line">    <span class="type">int</span> a,all;</span><br><span class="line">    <span class="type">int</span> length[<span class="number">10</span>];</span><br><span class="line">    <span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;<span class="number">10</span>;i++)&#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;length[i]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;a);</span><br><span class="line">    all=a+<span class="number">30</span>;</span><br><span class="line">    <span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;<span class="number">10</span>;i++)&#123;</span><br><span class="line">        <span class="keyword">if</span>(length[i]&lt;=all)</span><br><span class="line">            n++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>,n);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <tags>
        <tag>Educoder</tag>
      </tags>
  </entry>
  <entry>
    <title>头歌C语言实验 辅助练习8：自定义函数</title>
    <url>/2024/05/02/%E5%A4%B4%E6%AD%8CC%E8%AF%AD%E8%A8%80%E5%AE%9E%E9%AA%8C/%E5%A4%B4%E6%AD%8CC%E8%AF%AD%E8%A8%80%E5%AE%9E%E9%AA%8C-%E8%BE%85%E5%8A%A9%E7%BB%83%E4%B9%A08%EF%BC%9A%E8%87%AA%E5%AE%9A%E4%B9%89%E5%87%BD%E6%95%B0/</url>
    <content><![CDATA[<h2 id="第1关：素数判定-II"><a href="#第1关：素数判定-II" class="headerlink" title="第1关：素数判定 II"></a>第1关：素数判定 II</h2><p>问题描述<br>素数（Prime Number），又称为质数，它是不能被1和它本身以外的其它整数整除的正整数，按照这个定义，负数、0和1都不是素数。<br>请设计并编写一个函数，用于判定一个自然数是否是素数。<br>主函数中请用户输入一个正整数n，调用自定义函数进行判定，如果n是素数则输出Yes，否则输出No。</p>
<p>输入<br>一个正整数n。</p>
<p>输出<br>若n为素数输出Yes，否则输出No。</p>
<p>输入示例<br>37</p>
<p>输出示例<br>Yes</p>
<p>提示<br>设计函数时重点关注函数自身的功能，而不要考虑整个程序的功能。</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">isPrime</span><span class="params">(<span class="type">int</span> n)</span>&#123;</span><br><span class="line">    <span class="type">int</span> i;</span><br><span class="line">    <span class="type">int</span> flag=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">if</span>(n==<span class="number">0</span>||n==<span class="number">1</span>||n&lt;<span class="number">0</span>)&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;<span class="keyword">else</span> <span class="keyword">if</span>(n==<span class="number">2</span>)</span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">for</span>(i=<span class="number">2</span>;i&lt;n;i++)&#123;</span><br><span class="line">            <span class="keyword">if</span>(n%i==<span class="number">0</span>)&#123;</span><br><span class="line">                flag=<span class="number">0</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> flag;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span>&#123;</span><br><span class="line">    <span class="type">int</span> n;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;n);</span><br><span class="line">    <span class="keyword">if</span>(isPrime(n))</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;Yes&quot;</span>);</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;No&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="第2关：静态变量求和"><a href="#第2关：静态变量求和" class="headerlink" title="第2关：静态变量求和"></a>第2关：静态变量求和</h2><p>问题描述<br>函数中的静态局部变量，在程序的整个执行过程中，其声明语句只会执行一次。</p>
<p>请利用这个特点，参考教材上例7.1，编写一段程序，针对用户输入的正整数n，利用静态局部变量对1~n之间的所有能被3整除的整数求和并输出结果。</p>
<p>输入<br>一个正整数n。</p>
<p>输出<br>1~n之间的所有能被3整除的整数之和。</p>
<p>输入示例<br>54</p>
<p>输出示例<br>sum&#x3D;513</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">Func</span><span class="params">(<span class="type">int</span> i)</span>;</span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span>&#123;</span><br><span class="line">    <span class="type">int</span> n,i;</span><br><span class="line">    <span class="type">int</span> sum=<span class="number">0</span>;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;n);</span><br><span class="line">    <span class="keyword">for</span>(i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">        sum=Func(i);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;sum=%d&quot;</span>,sum);</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">int</span> <span class="title function_">Func</span><span class="params">(<span class="type">int</span> i)</span>&#123;</span><br><span class="line">    <span class="type">static</span> <span class="type">int</span> sum=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">if</span>(i%<span class="number">3</span>==<span class="number">0</span>)</span><br><span class="line">        sum+=i;</span><br><span class="line">    <span class="keyword">return</span> sum;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="第3关：几位数-II"><a href="#第3关：几位数-II" class="headerlink" title="第3关：几位数 II"></a>第3关：几位数 II</h2><p>问题描述<br>对于用户输入的一个非负整数n，请使用递归的方法编程判断n是一个几位整数。<br>注意：0是1位数。</p>
<p>相关知识<br>函数的递归调用<br>在调用一个函数的过程中又出现直接或间接地调用该函数本身，称为函数的递归调用。</p>
<p>例如：</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">int</span> <span class="title function_">fun</span><span class="params">(<span class="type">int</span> x)</span>&#123;</span><br><span class="line">    <span class="type">int</span> y,z;</span><br><span class="line">    z = fun(y); <span class="comment">//在执行fun函数的过程中又要调用fun函数</span></span><br><span class="line">    <span class="keyword">return</span> (<span class="number">2</span>*z)；</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>在调用 f 函数的过程中，又要调用 f 函数，这就是直接调用。如果在调用 f1 函数的过程中又要调用 f2 函数，而在调用 f2 函数过程中又要调用 f1 函数，这就是间接调用本函数。</p>
<p>上面的例子中，递归调用是无终止的自身调用。显然，程序中不应出现这种无终止的递归调用，而只应出现有限次数的、有终止的递归调用，这可以用 if 语句来控制，只有在某一条件成立时才继续执行递归调用，否则就不再继续。</p>
<p>输入<br>一个任意的非负整数n，测试数据输入的n不会超过unsigned int所能表示的最大值（4294967295）。</p>
<p>输出<br>参照示例按照“非负整数y是一个x位整数。”的格式输出判断结果，其中y和x要用实际数值代替。</p>
<p>输入示例<br>8482</p>
<p>输出示例<br>非负整数8482是一个4位整数。</p>
<p>提示<br>对于任意整数，如果用它整除10可以去掉其个位数字。</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">Func</span><span class="params">(<span class="type">int</span> n,<span class="type">int</span> sum)</span>;</span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span>&#123;</span><br><span class="line">    <span class="type">int</span> n;</span><br><span class="line">    <span class="type">int</span> sum=<span class="number">1</span>;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;n);</span><br><span class="line">    <span class="keyword">if</span>(n&gt;=<span class="number">10</span>)&#123;</span><br><span class="line">        sum=Func(n,sum);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;非负整数%d是一个%d位整数。&quot;</span>,n,sum);</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">int</span> <span class="title function_">Func</span><span class="params">(<span class="type">int</span> n,<span class="type">int</span> sum)</span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(n/<span class="number">10</span>&gt;=<span class="number">10</span>)&#123;</span><br><span class="line">        sum++;</span><br><span class="line">        Func(n/<span class="number">10</span>,sum);</span><br><span class="line">    &#125;<span class="keyword">else</span></span><br><span class="line">        <span class="keyword">return</span> sum+<span class="number">1</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="第4关：整数分割输出"><a href="#第4关：整数分割输出" class="headerlink" title="第4关：整数分割输出"></a>第4关：整数分割输出</h2><p>问题描述<br>本关任务：用递归法将一个整数 n （任意位数的整数）分割成各位数字并输出，各个数字字符之间用空格隔开。</p>
<p>例如，输入483，应输出字符串4 8 3。</p>
<p>相关知识<br>函数的递归调用<br>在调用一个函数的过程中又出现直接或间接地调用该函数本身，称为函数的递归调用。</p>
<p>例如：</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">int</span> <span class="title function_">fun</span><span class="params">(<span class="type">int</span> x)</span>&#123;</span><br><span class="line">    <span class="type">int</span> y,z;</span><br><span class="line">    z = fun(y); <span class="comment">//在执行fun函数的过程中又要调用fun函数</span></span><br><span class="line">    <span class="keyword">return</span> (<span class="number">2</span>*z)；</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>在调用 f 函数的过程中，又要调用 f 函数，这就是直接调用。如果在调用 f1 函数的过程中又要调用 f2 函数，而在调用 f2 函数过程中又要调用 f1 函数，这就是间接调用本函数。</p>
<p>上面的例子中，递归调用是无终止的自身调用。显然，程序中不应出现这种无终止的递归调用，而只应出现有限次数的、有终止的递归调用，这可以用 if 语句来控制，只有在某一条件成立时才继续执行递归调用，否则就不再继续。</p>
<p>输入<br>一个整数n。</p>
<p>输出<br>从高位到低位的各位上的数字字符，每两个数字字符之间用一个空格分开。</p>
<p>输入示例<br>1385</p>
<p>输出示例<br>1 3 8 5</p>
<p>提示<br>用户输入n可能是一个负数，此时可以把n转换为对应的正数继续处理，同时需要输出负号（-）。</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;math.h&gt;</span></span></span><br><span class="line"><span class="type">void</span> <span class="title function_">Func</span><span class="params">(<span class="type">int</span> n,<span class="type">int</span> m)</span>;</span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span>&#123;</span><br><span class="line">    <span class="type">int</span> n,t,m=<span class="number">0</span>;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;n);</span><br><span class="line">    <span class="keyword">if</span>(n&lt;<span class="number">0</span>)&#123;</span><br><span class="line">        n=<span class="built_in">abs</span>(n);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;- &quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(n&lt;<span class="number">10</span>)</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>,n);</span><br><span class="line">    <span class="keyword">else</span>&#123;</span><br><span class="line">        t=n;</span><br><span class="line">        <span class="keyword">while</span>(t/<span class="number">10</span>!=<span class="number">0</span>)&#123;</span><br><span class="line">            t/=<span class="number">10</span>;</span><br><span class="line">            m++;</span><br><span class="line">        &#125;</span><br><span class="line">        Func(n,m);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">void</span> <span class="title function_">Func</span><span class="params">(<span class="type">int</span> n,<span class="type">int</span> m)</span>&#123;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>,n/(<span class="type">int</span>)<span class="built_in">pow</span>(<span class="number">10</span>,m));</span><br><span class="line">    <span class="keyword">if</span>(m&gt;<span class="number">0</span>)&#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot; &quot;</span>);</span><br><span class="line">        Func(n%(<span class="type">int</span>)<span class="built_in">pow</span>(<span class="number">10</span>,m),m<span class="number">-1</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <tags>
        <tag>Educoder</tag>
      </tags>
  </entry>
  <entry>
    <title>头歌C语言实验 练习10：数组与字符串</title>
    <url>/2024/05/02/%E5%A4%B4%E6%AD%8CC%E8%AF%AD%E8%A8%80%E5%AE%9E%E9%AA%8C/%E5%A4%B4%E6%AD%8CC%E8%AF%AD%E8%A8%80%E5%AE%9E%E9%AA%8C-%E7%BB%83%E4%B9%A010%EF%BC%9A%E6%95%B0%E7%BB%84%E4%B8%8E%E5%AD%97%E7%AC%A6%E4%B8%B2/</url>
    <content><![CDATA[<h2 id="第1关：成绩排序"><a href="#第1关：成绩排序" class="headerlink" title="第1关：成绩排序"></a>第1关：成绩排序</h2><p>问题描述<br>在一个班上最多有50名学生。<br>期末考试结束后，班主任张老师需要对班上学生的成绩按照从高到低的顺序排序，以便可以查看班上考得最好的前几名同学的成绩。<br>聪明的你，能利用所学的知识，编写一段程序，帮助辛苦的张老师完成这个任务吗？</p>
<p>输入<br>输入包括两行：<br>输入的第一行包括若干个浮点数的百分制成绩，最后以一个负数作为结束标记。<br>输入的第二行只有一个整数n，表示张老师需要查看成绩最高的前n个成绩。</p>
<p>提示：输入数据的第一行最多可能有51个浮点数。</p>
<p>输出<br>按照从高到低的顺序输出成绩最高的前m个成绩，每个成绩保留1位小数，并且单独占一行输出。</p>
<p>提示：输入的n可能大于实际成绩个数，此时应该按照实际成绩个数输出。</p>
<p>输入示例<br>93.65 87.46 56.3 97.37 93.5 89.6 78.3 89.63 95 48.42 96.54 -4<br>5</p>
<p>输出示例<br>97.4<br>96.5<br>95.0<br>93.7<br>93.5</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">void</span> <span class="title function_">sort</span><span class="params">(<span class="type">double</span> score[], <span class="type">int</span> n)</span>;</span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="type">int</span> n, i = <span class="number">0</span>, num = <span class="number">0</span>; </span><br><span class="line">    <span class="type">double</span> score[<span class="number">51</span>];</span><br><span class="line">    <span class="type">double</span> t;</span><br><span class="line">    <span class="keyword">while</span> (<span class="number">1</span>) &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%lf&quot;</span>, &amp;t);</span><br><span class="line">        <span class="keyword">if</span> (t &gt;= <span class="number">0</span>) &#123;</span><br><span class="line">            score[i] = t;</span><br><span class="line">            i++;</span><br><span class="line">            num++; </span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;n);</span><br><span class="line">    sort(score, num);</span><br><span class="line">    <span class="keyword">if</span> (n &gt; num) &#123;</span><br><span class="line">        n = num;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; n; i++) &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%.1lf\n&quot;</span>, score[i]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 冒泡排序</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">sort</span><span class="params">(<span class="type">double</span> score[], <span class="type">int</span> n)</span> &#123;</span><br><span class="line">    <span class="type">int</span> i,j;</span><br><span class="line">    <span class="type">double</span> t;</span><br><span class="line">    <span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;n;i++)&#123;</span><br><span class="line">        <span class="keyword">for</span>(j=<span class="number">0</span>;j&lt;n;j++)&#123;</span><br><span class="line">            <span class="keyword">if</span>(score[j]&lt;score[j+<span class="number">1</span>])&#123;</span><br><span class="line">                t=score[j];</span><br><span class="line">                score[j]=score[j+<span class="number">1</span>];</span><br><span class="line">                score[j+<span class="number">1</span>]=t;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="第2关：计算字符串长度"><a href="#第2关：计算字符串长度" class="headerlink" title="第2关：计算字符串长度"></a>第2关：计算字符串长度</h2><p>问题描述<br>字符串长度是指字符串中实际包含的字符个数。在C语言中，按照C语言中字符串的规范，字符串的长度可以定义为：“<code>&lt;font color=green&gt;</code>字符数组中第一个‘\0’字符之前的字符的个数 <code>&lt;/font&gt;</code>”。<br>请编写一个自定义函数，不调用系统库函数strlen()，计算字符串的长度。自定义函数可以声明为：<br>int getStrLen(char str[]);<br>主函数中由用户输入一个长度不超过100的字符串（可能包含空格），调用自定义函数得到字符串长度后输出。</p>
<p>输入<br>一行字符串，使用gets(str)方法读取此行字符串。</p>
<p>输出<br>一个非负整数，表示字符串的长度。</p>
<p>输入示例<br>I am a dreamer on air.</p>
<p>输出示例<br>22</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">/* 函数声明 */</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">getStrLen</span><span class="params">(<span class="type">char</span> str[])</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="comment">/* 在这里补充代码完成整个程序的功能 */</span></span><br><span class="line">    <span class="type">char</span> str[<span class="number">101</span>];</span><br><span class="line">    <span class="type">int</span> len;</span><br><span class="line">    gets(str);</span><br><span class="line">    len=getStrLen(str);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>,len);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/* 函数实现 */</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">getStrLen</span><span class="params">(<span class="type">char</span> str[])</span> &#123;</span><br><span class="line">    <span class="comment">/* 请在下面补充你的代码实现函数功能 */</span></span><br><span class="line">    <span class="type">int</span> i;</span><br><span class="line">    <span class="keyword">for</span>(i=<span class="number">0</span>;str[i]!=<span class="string">&#x27;\0&#x27;</span>;i++);</span><br><span class="line">    <span class="keyword">return</span> i;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="第3关：字符替换"><a href="#第3关：字符替换" class="headerlink" title="第3关：字符替换"></a>第3关：字符替换</h2><p>问题描述<br>把一个字符串中特定的字符用给定的字符替换，得到一个新的字符串。</p>
<p>输入<br>输入数据有多行，第一行是要处理的字符串的数目n。<br>其余各行中每行内容由一个空格分开的三个部分组成：<br>第一个部分是一个字符串，即需要替换字符的字符串，字符串中没有空格并且长度小于等于30个字符；<br>第二个部分是一个字符，即原字符串中需要被替换的字符；<br>第三个部分是一个字符，即用于替换的新字符。</p>
<p>输出<br>有多行，每行输出对应的替换后的字符串。</p>
<p>输入示例<br>1<br>hello-how-are-you o O</p>
<p>输出示例<br>hellO-hOw-are-yOu</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">void</span> <span class="title function_">replace</span><span class="params">(<span class="type">char</span> str[],<span class="type">char</span> a,<span class="type">char</span> b)</span>&#123;</span><br><span class="line">    <span class="type">int</span> i;</span><br><span class="line">    <span class="keyword">for</span>(i=<span class="number">0</span>;str[i]!=<span class="string">&#x27;\0&#x27;</span>;i++)&#123;</span><br><span class="line">        <span class="keyword">if</span>(str[i]==a)&#123;</span><br><span class="line">            str[i]=b;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span>&#123;</span><br><span class="line">    <span class="type">int</span> n,i,j;</span><br><span class="line">    <span class="type">char</span> str[<span class="number">31</span>];</span><br><span class="line">    <span class="type">char</span> a,b;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;n);</span><br><span class="line">    <span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;n;i++)&#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%s %c %c&quot;</span>,&amp;str,&amp;a,&amp;b);</span><br><span class="line">        replace(str,a,b);</span><br><span class="line">        <span class="keyword">for</span>(j=<span class="number">0</span>;str[j]!=<span class="string">&#x27;\0&#x27;</span>;j++)&#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;%c&quot;</span>,str[j]);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="第4关：统计字符数"><a href="#第4关：统计字符数" class="headerlink" title="第4关：统计字符数"></a>第4关：统计字符数</h2><p>问题描述<br>判断一个由a~z这26个小写字母组成的字符串中哪个字母出现的次数最多。</p>
<p>输入<br>第一行是测试数据的组数n，接下来的每组测试数据单独占1行，是一个由a~z这26个小写字母组成的字符串，每行数据不超过1000个字符且非空。<br>提示：每个字符串中不会包含空格。</p>
<p>输出<br>n行，每行输出对应一个输入，包括出现次数最多的字符和该字符出现的次数，中间是一个空格。如果有多个字符出现的次数相同且最多，那么输出ASCII码最小的那一个字符。</p>
<p>输入示例<br>2<br>abbccc<br>adfadffasdf</p>
<p>输出示例<br>c 3<br>f 4</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">void</span> <span class="title function_">Count</span><span class="params">(<span class="type">char</span> str[],<span class="type">int</span> count[])</span>&#123;</span><br><span class="line">    <span class="type">int</span> i;</span><br><span class="line">    <span class="keyword">for</span>(i=<span class="number">0</span>;str[i]!=<span class="string">&#x27;\0&#x27;</span>;i++)&#123;</span><br><span class="line">        count[str[i]-<span class="string">&#x27;a&#x27;</span>]++;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">int</span> <span class="title function_">Findmax</span><span class="params">(<span class="type">int</span> count[])</span>&#123;</span><br><span class="line">    <span class="type">int</span> max=<span class="number">0</span>;</span><br><span class="line">    <span class="type">int</span> i;</span><br><span class="line">    <span class="type">int</span> maxalpha=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;<span class="number">26</span>;i++)&#123;</span><br><span class="line">        <span class="keyword">if</span>(count[i]&gt;max)&#123;</span><br><span class="line">            max=count[i];</span><br><span class="line">            maxalpha=i;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> maxalpha;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">void</span> <span class="title function_">ArrtoZero</span><span class="params">(<span class="type">int</span> arr[],<span class="type">int</span> n)</span>&#123;</span><br><span class="line">    <span class="type">int</span> i;</span><br><span class="line">    <span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;n;i++)&#123;</span><br><span class="line">        arr[i]=<span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span>&#123;</span><br><span class="line">    <span class="type">int</span> i,n,max;</span><br><span class="line">    <span class="type">int</span> count[<span class="number">26</span>]=&#123;<span class="number">0</span>&#125;;</span><br><span class="line">    <span class="type">char</span> str[<span class="number">1001</span>];</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;n);</span><br><span class="line">    <span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;n;i++)&#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%s&quot;</span>,&amp;str);</span><br><span class="line">        Count(str,count);</span><br><span class="line">        max=Findmax(count);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%c %d\n&quot;</span>,<span class="string">&#x27;a&#x27;</span>+max,count[max]);</span><br><span class="line">        ArrtoZero(count,<span class="number">26</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="第5关：浮点数格式"><a href="#第5关：浮点数格式" class="headerlink" title="第5关：浮点数格式"></a>第5关：浮点数格式</h2><p>问题描述<br>输入n（0＜n≤50）个浮点数，要求把这n个浮点数重新排列（并非排序，而是对齐）后再输出。每个浮点数中都有小数点且总长度不超过50位。</p>
<p>输入<br>第1行是一个正整数n（n≤50），后面n行每行一个浮点数，每个浮点数中都保证小数点会出现。浮点数的长度不超过50位，注意这里的浮点数会超过系统标准浮点数的表示范围。</p>
<p>输出<br>n行，每行对应一个输入。要求每个浮点数的小数点在同一列上，同时要求首列上不会全部是空格。</p>
<p>输入示例<br>2<br>-0.34345<br>4545.232</p>
<p>输出示例<br>  -0.34345<br>4545.232</p>
<p>提示<br>输入的浮点数位数很长，远远超过了float甚至double类型所能表示的范围。并且这些浮点数不需要参与算数运算，因此可以把它们考虑为字符串进行处理。</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="type">void</span> <span class="title function_">FindPoint</span><span class="params">(<span class="type">char</span> str[][<span class="number">51</span>], <span class="type">int</span> *point, <span class="type">int</span> *beforepoint, <span class="type">int</span> n)</span>&#123;</span><br><span class="line">    <span class="type">int</span> i, j;</span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; n; i++)&#123;</span><br><span class="line">        <span class="keyword">for</span> (j = <span class="number">0</span>; str[i][j] != <span class="string">&#x27;\0&#x27;</span>; j++)&#123;</span><br><span class="line">            <span class="keyword">if</span> (str[i][j] == <span class="string">&#x27;.&#x27;</span>)&#123;</span><br><span class="line">                point[i] = j;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span>&#123;</span><br><span class="line">                beforepoint[i]++;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">int</span> <span class="title function_">Findmax</span><span class="params">(<span class="type">int</span> *point, <span class="type">int</span> n)</span>&#123;</span><br><span class="line">    <span class="type">int</span> max = point[<span class="number">0</span>];</span><br><span class="line">    <span class="type">int</span> i;</span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">1</span>; i &lt; n; i++)&#123;</span><br><span class="line">        <span class="keyword">if</span> (point[i] &gt; max)</span><br><span class="line">            max = point[i];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> max;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">void</span> <span class="title function_">Printstr</span><span class="params">(<span class="type">char</span> str[][<span class="number">51</span>], <span class="type">int</span> *beforepoint, <span class="type">int</span> n, <span class="type">int</span> max)</span>&#123;</span><br><span class="line">    <span class="type">int</span> i, j;</span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; n; i++)&#123;</span><br><span class="line">        <span class="keyword">for</span> (j = <span class="number">0</span>; j &lt; max - beforepoint[i]; j++)&#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot; &quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">puts</span>(str[i]);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span>&#123;</span><br><span class="line">    <span class="type">int</span> n, i, max;</span><br><span class="line">    <span class="type">int</span> *point;</span><br><span class="line">    <span class="type">int</span> beforepoint[<span class="number">50</span>]=&#123;<span class="number">0</span>&#125;;</span><br><span class="line">    <span class="type">char</span> str[<span class="number">50</span>][<span class="number">51</span>];</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;n);</span><br><span class="line">    point=(<span class="type">int</span>*)<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(<span class="type">int</span>)*n);</span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; n; i++)&#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%50s&quot;</span>, str[i]);</span><br><span class="line">    &#125;</span><br><span class="line">    FindPoint(str, point, beforepoint, n);</span><br><span class="line">    max = Findmax(point, n);</span><br><span class="line">    Printstr(str, beforepoint, n, max);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <tags>
        <tag>Educoder</tag>
      </tags>
  </entry>
  <entry>
    <title>头歌C语言实验 辅助练习10：使用字符串</title>
    <url>/2024/05/02/%E5%A4%B4%E6%AD%8CC%E8%AF%AD%E8%A8%80%E5%AE%9E%E9%AA%8C/%E5%A4%B4%E6%AD%8CC%E8%AF%AD%E8%A8%80%E5%AE%9E%E9%AA%8C-%E8%BE%85%E5%8A%A9%E7%BB%83%E4%B9%A010%EF%BC%9A%E4%BD%BF%E7%94%A8%E5%AD%97%E7%AC%A6%E4%B8%B2/</url>
    <content><![CDATA[<h2 id="第1关：加密字符串"><a href="#第1关：加密字符串" class="headerlink" title="第1关：加密字符串"></a>第1关：加密字符串</h2><p>问题描述<br>对于用户输入的一个字符串，按照以下的规则进行加密，并输出加密后的字符串。</p>
<p>对于小写字母a到x、大写字母A到X，用其后的第二个字母替换，例如a换成c；<br>对于小写字母y和z、大写字母Y和Z，相应地替换为小写字母a和b以及大写字母A和B；<br>其它字符不作任何变换。<br>输入<br>输入一行：待处理的字符串，字符串长度小于等于80。</p>
<p>输出<br>输入共包括两行：<br>第一行是原始字符串；<br>第二行是加密后的字符串。</p>
<p>输入示例<br>Hello, World!</p>
<p>输出示例<br>Hello, World!<br>Jgnnq, Yqtnf!</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span>&#123;</span><br><span class="line">    <span class="type">int</span> i;</span><br><span class="line">    <span class="type">char</span> str[<span class="number">81</span>]=&#123;<span class="number">0</span>&#125;;</span><br><span class="line">    gets(str);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%s\n&quot;</span>,str);</span><br><span class="line">    <span class="keyword">for</span>(i=<span class="number">0</span>;str[i]!=<span class="string">&#x27;\0&#x27;</span>;i++)&#123;</span><br><span class="line">        <span class="keyword">if</span>((str[i]&lt;=<span class="string">&#x27;x&#x27;</span>&amp;&amp;str[i]&gt;=<span class="string">&#x27;a&#x27;</span>)||(str[i]&gt;=<span class="string">&#x27;A&#x27;</span>&amp;&amp;str[i]&lt;=<span class="string">&#x27;X&#x27;</span>))</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;%c&quot;</span>,str[i]+<span class="number">2</span>);</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>((str[i]&gt;=<span class="string">&#x27;Y&#x27;</span>&amp;&amp;str[i]&lt;=<span class="string">&#x27;Z&#x27;</span>)||(str[i]&gt;=<span class="string">&#x27;y&#x27;</span>&amp;&amp;str[i]&lt;=<span class="string">&#x27;z&#x27;</span>))</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;%c&quot;</span>,str[i]-(<span class="string">&#x27;Y&#x27;</span>-<span class="string">&#x27;A&#x27;</span>));</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;%c&quot;</span>,str[i]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="第2关：首字母大写"><a href="#第2关：首字母大写" class="headerlink" title="第2关：首字母大写"></a>第2关：首字母大写</h2><p>问题描述<br>对一个字符串中的所有单词，如果单词的首字母不是大写字母，则把单词的首字母变成大写字母。<br>注意：每个单词之间可以用除了字母以外的其它任意字符分割开来。</p>
<p>输入<br>输入一行：待处理的字符串，字符串长度小于等于80。</p>
<p>输出<br>输出一行：经过转换后的字符串，字符串中的每个单词都是首字母大写的。</p>
<p>提示<br>注意单词之间的分隔符可以是除了字母以外的任意字符，包括空格、标点符号或者数字等。</p>
<p>输入示例<br>if so, you already have a google account. you can sign in on the right.</p>
<p>输出示例<br>If So, You Already Have A Google Account. You Can Sign In On The Right.</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;ctype.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span>&#123;</span><br><span class="line">    <span class="type">int</span> i;</span><br><span class="line">    <span class="type">char</span> str[<span class="number">81</span>];</span><br><span class="line">    gets(str);</span><br><span class="line">    <span class="keyword">for</span>(i=<span class="number">0</span>;str[i]!=<span class="string">&#x27;\0&#x27;</span>;i++)&#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="built_in">isalpha</span>(str[i]))&#123;</span><br><span class="line">            str[i]=<span class="built_in">toupper</span>(str[i]);</span><br><span class="line">            <span class="keyword">while</span>(<span class="built_in">isalpha</span>(str[i]))&#123;</span><br><span class="line">        	    i++;</span><br><span class="line">            &#125;</span><br><span class="line">		&#125;</span><br><span class="line">    &#125;  </span><br><span class="line">    <span class="keyword">for</span>(i=<span class="number">0</span>;str[i]!=<span class="string">&#x27;\0&#x27;</span>;i++)&#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%c&quot;</span>,str[i]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>问题描述<br>输入4行主要由大写字母构成的字符串，绘制出一个垂直直方图，给出每个大写字母出现的次数。</p>
<p>输入<br>输入包括4行主要由大写字母构成的字符串，每行上字符的数目不超过80个。</p>
<p>输出<br>输出包括若干行。其中最后一行给出26个大写英文字母，这些字母之间用空格隔开。前面的几行包括空格和星号，每个字母出现几次，就在这个字母的上方输出一个星号。<br>注意：输出的第一行不能是空行。</p>
<p>输入示例</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">THE QUICK BROWN FOX JUMPED OVER THE LAZY DOG.</span><br><span class="line">THIS IS AN EXAMPLE TO TEST FOR YOUR </span><br><span class="line">HISTOGRAM PROGRAM.</span><br><span class="line">HELLO!</span><br></pre></td></tr></table></figure>

<p>输出示例</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">                           *       </span><br><span class="line">                            *</span><br><span class="line">        *                   *</span><br><span class="line">        *                   *     *   *</span><br><span class="line">        *                   *     *   *</span><br><span class="line">*       *     *             *     *   *</span><br><span class="line">*       *     * *     * *   *     * * *</span><br><span class="line">*       *   * * *     * *   * *   * * * *</span><br><span class="line">*     * * * * * *     * * * * *   * * * *     * *</span><br><span class="line">* * * * * * * * * * * * * * * * * * * * * * * * * *</span><br><span class="line">A B C D E F G H I J K L M N O P Q R S T U V W X Y Z</span><br></pre></td></tr></table></figure>

<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span>&#123;</span><br><span class="line">    <span class="type">char</span> str[<span class="number">4</span>][<span class="number">81</span>];</span><br><span class="line">    <span class="type">char</span> alpha=<span class="string">&#x27;A&#x27;</span>;</span><br><span class="line">    <span class="type">int</span> count[<span class="number">26</span>]=&#123;<span class="number">0</span>&#125;;</span><br><span class="line">    <span class="type">int</span> i,j;</span><br><span class="line">    <span class="type">int</span> max=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;<span class="number">4</span>;i++)&#123;</span><br><span class="line">        gets(str[i]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;<span class="number">4</span>;i++)&#123;</span><br><span class="line">        <span class="keyword">for</span>(j=<span class="number">0</span>;str[i][j]!=<span class="string">&#x27;\0&#x27;</span>;j++)&#123;</span><br><span class="line">            <span class="keyword">if</span>(str[i][j]&gt;=<span class="string">&#x27;A&#x27;</span>&amp;&amp;str[i][j]&lt;=<span class="string">&#x27;Z&#x27;</span>)&#123;</span><br><span class="line">                count[str[i][j]-<span class="string">&#x27;A&#x27;</span>]++;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;<span class="number">26</span>;i++)&#123;</span><br><span class="line">        <span class="keyword">if</span>(count[i]&gt;max)&#123;</span><br><span class="line">            max=count[i];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(i=max;i&gt;<span class="number">0</span>;i--)&#123;</span><br><span class="line">        <span class="keyword">for</span>(j=<span class="number">0</span>;j&lt;<span class="number">26</span>;j++)&#123;</span><br><span class="line">            <span class="keyword">if</span>(count[j]&gt;=i)&#123;</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">&quot;* &quot;</span>);</span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">&quot;  &quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;<span class="number">26</span>;i++)&#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%c&quot;</span>,alpha+i);</span><br><span class="line">        <span class="keyword">if</span>(i!=<span class="number">25</span>)</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot; &quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <tags>
        <tag>Educoder</tag>
      </tags>
  </entry>
  <entry>
    <title>头歌C语言实验 辅助练习9：使用数组</title>
    <url>/2024/05/01/%E5%A4%B4%E6%AD%8CC%E8%AF%AD%E8%A8%80%E5%AE%9E%E9%AA%8C/%E5%A4%B4%E6%AD%8CC%E8%AF%AD%E8%A8%80%E5%AE%9E%E9%AA%8C-%E8%BE%85%E5%8A%A9%E7%BB%83%E4%B9%A09%EF%BC%9A%E4%BD%BF%E7%94%A8%E6%95%B0%E7%BB%84/</url>
    <content><![CDATA[<h2 id="第1关：选秀评分"><a href="#第1关：选秀评分" class="headerlink" title="第1关：选秀评分"></a>第1关：选秀评分</h2><p>问题描述<br>现举办一个选秀活动，有十位评委为选手打分，每位评委按照十分制独立给选手打分。选手的最后得分的计算规则是：去掉一个最高分，去掉一个最低分，然后计算剩下八个分数的平均分。请用数组编写一个程序，请用户输入十位评委给出的分数，计算并输出该选手的最终得分，输出结果保留2位小数。</p>
<p>输入<br>用空格分开的10个浮点数代表10个评委的打分。</p>
<p>输出<br>参照示例格式输出该选手的最终得分，所有浮点数保留两位小数。<br>输出内容中所有标点符号均为中文的标点符号。</p>
<p>输入示例<br>9.6 9.6 9.9 9.7 9.8 9.4 9.6 9.7 9.9 9.5</p>
<p>输出示例<br>去掉一个最高分9.90分，去掉一个最低分9.40分，该选手最终得分9.67分。</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span>&#123;</span><br><span class="line">    <span class="type">int</span> i;</span><br><span class="line">    <span class="type">double</span> score[<span class="number">10</span>];</span><br><span class="line">    <span class="type">double</span> max,min,sum,avg;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%lf&quot;</span>,&amp;score[<span class="number">0</span>]);</span><br><span class="line">    sum=max=min=score[<span class="number">0</span>];</span><br><span class="line">    <span class="keyword">for</span>(i=<span class="number">1</span>;i&lt;<span class="number">10</span>;i++)&#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%lf&quot;</span>,&amp;score[i]);</span><br><span class="line">        <span class="keyword">if</span>(score[i]&gt;max)</span><br><span class="line">            max=score[i];</span><br><span class="line">        <span class="keyword">if</span>(score[i]&lt;min)</span><br><span class="line">            min=score[i];</span><br><span class="line">        sum+=score[i];</span><br><span class="line">    &#125;</span><br><span class="line">    sum=sum-max-min;</span><br><span class="line">    avg=sum/<span class="number">8</span>;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;去掉一个最高分%.2lf分，去掉一个最低分%.2lf分，该选手最终得分%.2lf分。&quot;</span>,max,min,avg);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="第2关：杨辉三角形"><a href="#第2关：杨辉三角形" class="headerlink" title="第2关：杨辉三角形"></a>第2关：杨辉三角形</h2><p>问题描述<br>杨辉三角形的实质是二项式(a+b)的n次方展开后各项的系数排成的三角形，它的特点是在这个三角形中，每一行第一个数和最后一个数都是1，从第三行起，中间的每一个数是上一行里相邻两个数之和。例如，以下是杨辉三角形的前6行：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">1</span><br><span class="line">1 1</span><br><span class="line">1 2 1</span><br><span class="line">1 3 3 1</span><br><span class="line">1 4 6 4 1</span><br><span class="line">1 5 10 10 5 1</span><br></pre></td></tr></table></figure>

<p>根据用户输入正整数n（n≤20），请使用二维数组编程计算并输出杨辉三角形的前n行。</p>
<p>输入<br>一个正整数n（n≤20），表示杨辉三角形的行数。</p>
<p>输出<br>杨辉三角形的前n行，每行中两个整数之间用一个空格分开。<br>注意每行中的最后一个整数后面不要有多余的空格。</p>
<p>输入示例<br>6</p>
<p>输出示例</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">1</span><br><span class="line">1 1</span><br><span class="line">1 2 1</span><br><span class="line">1 3 3 1</span><br><span class="line">1 4 6 4 1</span><br><span class="line">1 5 10 10 5 1</span><br></pre></td></tr></table></figure>

<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span>&#123;</span><br><span class="line">    <span class="type">int</span> n,i,j;</span><br><span class="line">    <span class="type">int</span> **arr;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;n);</span><br><span class="line">    arr=(<span class="type">int</span>**)<span class="built_in">malloc</span>(n*<span class="keyword">sizeof</span>(<span class="type">int</span>*));</span><br><span class="line">    <span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;n;i++)&#123;</span><br><span class="line">        arr[i]=(<span class="type">int</span>*)<span class="built_in">malloc</span>(n*<span class="keyword">sizeof</span>(<span class="type">int</span>));</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;n;i++)&#123;</span><br><span class="line">        arr[i][<span class="number">0</span>]=<span class="number">1</span>;</span><br><span class="line">        arr[i][i]=<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">for</span>(j=<span class="number">1</span>;j&lt;i;j++)&#123;</span><br><span class="line">            arr[i][j]=arr[i<span class="number">-1</span>][j<span class="number">-1</span>]+arr[i<span class="number">-1</span>][j];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;n;i++)&#123;</span><br><span class="line">        <span class="keyword">for</span>(j=<span class="number">0</span>;j&lt;=i;j++)&#123;</span><br><span class="line">            <span class="built_in">printf</span> (<span class="string">&quot;%d&quot;</span>,arr[i][j]);</span><br><span class="line">            <span class="keyword">if</span>(j!=i)</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">&quot; &quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="第3关：掷骰子"><a href="#第3关：掷骰子" class="headerlink" title="第3关：掷骰子"></a>第3关：掷骰子</h2><p>问题描述<br>掷骰子是我们经常玩的一种简单的游戏，一个骰子有6个面，分别表示1,2,3,4,5,6。从概率学的角度看来，在不作弊的前提下，每次投掷骰子后出现的点数是完全随机的，各个面的出现概率应该是相等的。<br>请编写程序模拟骰子的6000次投掷过程，统计并输出骰子的6个面各自出现的次数和概率。</p>
<p>提示<br>使用一个数组来统计骰子6个面各自出现的次数；<br>投掷一次骰子出现哪个面是随机的，因此可以使用随机函数rand()产生随机数模拟骰子投掷后出现的点数；<br>使用运行程序时用户输入的非负整数n作为产生随机数序列的种子，具体使用方法可以参考教材上P117的示例程序。<br>输入<br>一个非负整数n，用来作为产生随机数序列的种子。</p>
<p>输出<br>输出包括6行，分别按顺序对应于骰子1、2、3、4、5、6六个面。<br>每行参照示例输出在6000次投掷过程中，对应点数的出现次数和概率（保留2位小数）。<br>输出内容中所有标点符号均为中文的标点符号。</p>
<p>特别提示<br>因为在不同机型上产生的随机数序列可能不尽相同，因此运行测试结果可能和以下示例结果有所区别，示例仅供参考，但骰子各个面的出现次数及出现概率应该基本相同。</p>
<p>输入示例<br>0</p>
<p>输出示例<br>1共出现了1080次，出现概率为0.18。<br>2共出现了958次，出现概率为0.16。<br>3共出现了965次，出现概率为0.16。<br>4共出现了1002次，出现概率为0.17。<br>5共出现了999次，出现概率为0.17。<br>6共出现了996次，出现概率为0.17。</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span>&#123;</span><br><span class="line">    <span class="type">int</span> n,i,magic;</span><br><span class="line">    <span class="type">int</span> num[<span class="number">6</span>]=&#123;<span class="number">0</span>&#125;;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;n);</span><br><span class="line">    srand(n);</span><br><span class="line">    <span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;<span class="number">6000</span>;i++)&#123;</span><br><span class="line">        magic=rand()%<span class="number">6</span>+<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">switch</span>(magic)&#123;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">                num[<span class="number">0</span>]++;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line">                num[<span class="number">1</span>]++;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">3</span>:</span><br><span class="line">                num[<span class="number">2</span>]++;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">4</span>:</span><br><span class="line">                num[<span class="number">3</span>]++;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">5</span>:</span><br><span class="line">                num[<span class="number">4</span>]++;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">6</span>:</span><br><span class="line">                num[<span class="number">5</span>]++;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">default</span>:</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;<span class="number">6</span>;i++)&#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%d共出现了%d次，出现概率为%.2lf。\n&quot;</span>,i+<span class="number">1</span>,num[i],(<span class="type">double</span>)num[i]/<span class="number">6000</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="第4关：肿瘤检测"><a href="#第4关：肿瘤检测" class="headerlink" title="第4关：肿瘤检测"></a>第4关：肿瘤检测</h2><p>问题描述<br>一张CT扫描的灰度图像可以用一个N×N（0＜N＜100）的矩阵描述，矩阵上的每个点对应一个灰度值（整数），其取值范围是0-255。<br>假设给定的图像中有且只有一个肿瘤。在图上监测肿瘤的方法如下：<br>如果某个点对应的灰度值小于等于50，则这个点在肿瘤上，否则不在肿瘤上。<br>把在肿瘤上的点的数目加起来，就得到了肿瘤在图上的面积。<br>任何在肿瘤上的点，如果它是图像的边界或者它的上下左右四个相邻点中至少有一个是非肿瘤上的点，则该点称为肿瘤的边界点。肿瘤的边界点的个数称为肿瘤的周长。<br>现在给定一张CT扫描的灰度图像，要求计算其中的肿瘤的面积和周长。</p>
<p>输入<br>输入第一行包含一个正整数N（0＜N＜100），表示图像的大小；接下来N行，每行包含图像的一行。图像的一行用N个整数表示（所有整数大于等于0，小于等于255），两个整数之间用一个空格隔开。</p>
<p>输出<br>输出只有一行，该行包含两个正整数，分别为给定图像中肿瘤的面积和周长，用一个空格分开。</p>
<p>输入示例</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">6</span><br><span class="line">99 99 99 99 99 99</span><br><span class="line">99 99 99 50 99 99</span><br><span class="line">99 99 49 49 50 51</span><br><span class="line">99 50 20 25 52 99</span><br><span class="line">40 50 99 99 99 99</span><br><span class="line">99 99 99 99 99 99</span><br></pre></td></tr></table></figure>

<p>输出示例<br>9 8</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span>&#123;</span><br><span class="line">    <span class="type">int</span> N,i,j,s=<span class="number">0</span>,c=<span class="number">0</span>;</span><br><span class="line">    <span class="type">int</span> **arr;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;N);</span><br><span class="line">    arr=(<span class="type">int</span>**)<span class="built_in">malloc</span>(N*<span class="keyword">sizeof</span>(<span class="type">int</span>*));</span><br><span class="line">    <span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;N;i++)&#123;</span><br><span class="line">        arr[i]=(<span class="type">int</span>*)<span class="built_in">malloc</span>(N*<span class="keyword">sizeof</span>(<span class="type">int</span>));</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;N;i++)&#123;</span><br><span class="line">        <span class="keyword">for</span>(j=<span class="number">0</span>;j&lt;N;j++)&#123;</span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;arr[i][j]);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;N;i++)&#123;</span><br><span class="line">        <span class="keyword">for</span>(j=<span class="number">0</span>;j&lt;N;j++)&#123;</span><br><span class="line">            <span class="keyword">if</span>(arr[i][j]&lt;=<span class="number">50</span>)&#123;</span><br><span class="line">                s++;</span><br><span class="line">                <span class="keyword">if</span>(i==<span class="number">0</span>||i==N<span class="number">-1</span>||j==<span class="number">0</span>||j==N<span class="number">-1</span>)</span><br><span class="line">                    c++;</span><br><span class="line">                <span class="keyword">else</span> <span class="keyword">if</span>(arr[i<span class="number">-1</span>][j]&gt;<span class="number">50</span>||arr[i+<span class="number">1</span>][j]&gt;<span class="number">50</span>||arr[i][j<span class="number">-1</span>]&gt;<span class="number">50</span>||arr[i][j+<span class="number">1</span>]&gt;<span class="number">50</span>)</span><br><span class="line">                    c++;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d %d&quot;</span>,s,c);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="第5关：两倍"><a href="#第5关：两倍" class="headerlink" title="第5关：两倍"></a>第5关：两倍</h2><p>问题描述<br>给定2到15个不同的正整数，你的任务是计算这些数里面有多少个数对满足：数对中一个数是另一个数的两倍。<br>比如给定1 4 3 2 9 7 18 22，得到的答案是3，因为2是1的两倍，4是2个两倍，18是9的两倍。</p>
<p>输入<br>输入包括多组测试数据。每组数据包括一行，给出2到15个两两不同且小于100的正整数。每一行最后一个数是0，表示这一行的结束，这个数不属于那2到15个给定的正整数。输入的最后一行只包括一个整数-1,这行表示输入数据的结束，不用进行处理。</p>
<p>输出<br>对每组输入数据单独输出一行，表示有多少个数对满足其中一个数是另一个数的两倍。</p>
<p>提示<br>根据输入数据的说明，把每行末尾的0算上，每行最多可能输入16个整数。</p>
<p>输入示例</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">1 4 3 2 9 7 18 22 0</span><br><span class="line">2 4 8 10 0</span><br><span class="line">7 5 11 13 1 3 0</span><br><span class="line">-1</span><br></pre></td></tr></table></figure>

<p>输出示例<br>3<br>2<br>0</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span>&#123;</span><br><span class="line">    <span class="type">int</span> i=<span class="number">0</span>,count=<span class="number">0</span>;</span><br><span class="line">    <span class="type">int</span> j,t,k;</span><br><span class="line">    <span class="type">int</span> num[<span class="number">16</span>];</span><br><span class="line">    <span class="keyword">while</span>(<span class="number">1</span>)&#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;t);</span><br><span class="line">        <span class="keyword">if</span>(t==<span class="number">-1</span>)</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">if</span>(t!=<span class="number">0</span>&amp;&amp;t!=<span class="number">-1</span>)&#123;</span><br><span class="line">            num[i++]=t;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(getchar()==<span class="string">&#x27;\n&#x27;</span>||t==<span class="number">0</span>)&#123;</span><br><span class="line">            <span class="keyword">for</span>(j=<span class="number">0</span>;j&lt;i;j++)&#123;</span><br><span class="line">                <span class="keyword">for</span>(k=j+<span class="number">1</span>;k&lt;i;k++)&#123;</span><br><span class="line">                    <span class="keyword">if</span>((num[k]/num[j]==<span class="number">2</span>&amp;&amp;num[k]%num[j]==<span class="number">0</span>)||(num[j]/num[k]==<span class="number">2</span>&amp;&amp;num[j]%num[k]==<span class="number">0</span>))</span><br><span class="line">                        count++;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>,count);</span><br><span class="line">            count=<span class="number">0</span>;</span><br><span class="line">            i=<span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="第6关：成绩排序"><a href="#第6关：成绩排序" class="headerlink" title="第6关：成绩排序"></a>第6关：成绩排序</h2><p>问题描述<br>张老师的班上共有n名学生（最多不超过60人）。期末考试结束后，经过辛苦的阅卷，全班同学的考试成绩都出来了。张老师想要对全班同学的成绩按照从高到低的顺序进行排序。但是张老师实在没有精神再连续工作下去了，聪明的你能够帮助张老师吗？</p>
<p>输入<br>输入包括两行：<br>第一行是一个正整数n，表示张老师班上的总人数。<br>第二行共包括n个浮点数，每个浮点数表示一位同学的期末考试成绩。</p>
<p>输出<br>输出共有n行，按照成绩从高到低的顺序每行输出一个成绩。<br>每行中先输出序号（从1开始，占2个字符宽度），然后是一个小数点（.）和一个空格，最后是期末考试成绩，保留2位小数。</p>
<p>输入示例<br>12<br>85.6 83.47 45.8 96.3 100 37.4 68.9 96.6 88 84.6 94.7 78.8</p>
<p>输出示例</p>
<ol>
<li>100.00</li>
<li>96.60</li>
<li>96.30</li>
<li>94.70</li>
<li>88.00</li>
<li>85.60</li>
<li>84.60</li>
<li>83.47</li>
<li>78.80</li>
<li>68.90</li>
<li>45.80</li>
<li>37.40</li>
</ol>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="type">void</span> <span class="title function_">Compare</span><span class="params">(<span class="type">double</span>* num,<span class="type">int</span> n)</span>&#123;</span><br><span class="line">    <span class="type">int</span> i,j;</span><br><span class="line">    <span class="type">double</span> t;</span><br><span class="line">    <span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;n;i++)&#123;</span><br><span class="line">        <span class="keyword">for</span>(j=<span class="number">0</span>;j&lt;n;j++)&#123;</span><br><span class="line">            <span class="keyword">if</span>(num[j]&lt;num[j+<span class="number">1</span>])&#123;</span><br><span class="line">                t=num[j];</span><br><span class="line">                num[j]=num[j+<span class="number">1</span>];</span><br><span class="line">                num[j+<span class="number">1</span>]=t;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span>&#123;</span><br><span class="line">    <span class="type">int</span> i,n;</span><br><span class="line">    <span class="type">double</span> *score;</span><br><span class="line">    <span class="type">double</span> max=<span class="number">0</span>,min=<span class="number">100</span>;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;n);</span><br><span class="line">    score = (<span class="type">double</span> *)<span class="built_in">malloc</span>(n*<span class="keyword">sizeof</span>(<span class="type">double</span>));</span><br><span class="line">    <span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;n;i++)&#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%lf&quot;</span>,&amp;score[i]);   </span><br><span class="line">    &#125;</span><br><span class="line">    Compare(score,n);</span><br><span class="line">    <span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;n;i++)&#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%2d. %.2lf\n&quot;</span>,i+<span class="number">1</span>,score[i]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <tags>
        <tag>Educoder</tag>
      </tags>
  </entry>
  <entry>
    <title>头歌C语言实验 练习8：自定义函数</title>
    <url>/2024/05/01/%E5%A4%B4%E6%AD%8CC%E8%AF%AD%E8%A8%80%E5%AE%9E%E9%AA%8C/%E5%A4%B4%E6%AD%8CC%E8%AF%AD%E8%A8%80%E5%AE%9E%E9%AA%8C-%E7%BB%83%E4%B9%A08%EF%BC%9A%E8%87%AA%E5%AE%9A%E4%B9%89%E5%87%BD%E6%95%B0/</url>
    <content><![CDATA[<h2 id="第1关：计算圆的面积"><a href="#第1关：计算圆的面积" class="headerlink" title="第1关：计算圆的面积"></a>第1关：计算圆的面积</h2><p>问题描述<br>编写一个函数，函数的功能是根据指定的半径r，计算圆的面积S，圆周率π取值3.14。<br>主函数中由用户输入半径r，然后调用函数计算圆的面积并输出圆的面积。</p>
<p>输入<br>一个浮点数r，表示圆的半径。</p>
<p>输出<br>按照格式“半径为r的圆的面积为：s。”的格式输出圆的面积，其中r和s为实际的浮点数，保留2位小数。</p>
<p>输入示例<br>5.0</p>
<p>输出示例<br>半径为5.00的圆的面积为78.50。</p>
<p>提示<br>设计函数时重点关注函数自身的功能，而不要考虑整个<br>程序的功能。</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> PI 3.14</span></span><br><span class="line"></span><br><span class="line"><span class="type">float</span> <span class="title function_">GetArea</span><span class="params">(<span class="type">float</span> r)</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="comment">/* Write your code here */</span></span><br><span class="line">    <span class="type">float</span> r;</span><br><span class="line">    <span class="type">float</span> s;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%f&quot;</span>,&amp;r);</span><br><span class="line">    s=GetArea(r);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;半径为%.2f的圆的面积为%.2f。&quot;</span>,r,s);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">float</span> <span class="title function_">GetArea</span><span class="params">(<span class="type">float</span> r)</span> &#123;</span><br><span class="line">    <span class="comment">/* Write your code here */</span></span><br><span class="line"><span class="keyword">return</span> PI*r*r;  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="第2关：排列与组合"><a href="#第2关：排列与组合" class="headerlink" title="第2关：排列与组合"></a>第2关：排列与组合</h2><p>问题描述<br>请分别设计并编写三个函数，分别实现以下功能：<br>函数1：用于计算非负整数n的阶乘，注意0! &#x3D; 1! &#x3D; 1。<br>函数2：根据排列公式计算排列Amn。<br>函数3：根据组合公式计算组合Cmn。<br>其中，排列A和组合C的计算公式如下：<br>,<br>主函数中由用户输入两个非负整数m和n（为确保在计算阶乘的过程中不会产生溢出，假定用户输入的m和n值不会超过15），调用函数计算并输出排列Amn和组合Cmn的值。</p>
<p>输入<br>用一个空格分开的两个两个非负整数m和n，输入数据保证0≤n≤m≤15。</p>
<p>输出<br>参照示例分两行分别输出排列和组合的值。</p>
<p>输入示例<br>5 2</p>
<p>输出示例<br>A(5,2)&#x3D;20<br>C(5,2)&#x3D;10</p>
<p>提示<br>设计函数时重点关注函数自身的功能，而不要考虑整个<br>程序的功能。</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">GetFactorial</span><span class="params">(<span class="type">int</span> n)</span>;</span><br><span class="line"><span class="type">int</span> <span class="title function_">GetArray</span><span class="params">(<span class="type">int</span> m,<span class="type">int</span> n)</span>;</span><br><span class="line"><span class="type">int</span> <span class="title function_">GetCombine</span><span class="params">(<span class="type">int</span> m,<span class="type">int</span> n)</span>;</span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span>&#123;</span><br><span class="line">    <span class="type">int</span> m,n,Array,Combine;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d %d&quot;</span>,&amp;m,&amp;n);</span><br><span class="line">    Array=GetArray(m,n);</span><br><span class="line">    Combine=GetCombine(m,n);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;A(%d,%d)=%d\nC(%d,%d)=%d&quot;</span>,m,n,Array,m,n,Combine);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">int</span> <span class="title function_">GetFactorial</span><span class="params">(<span class="type">int</span> n)</span>&#123;</span><br><span class="line">    <span class="type">int</span> i,Factorial=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">if</span>(n!=<span class="number">0</span>&amp;&amp;n!=<span class="number">1</span>)&#123;</span><br><span class="line">        <span class="keyword">for</span>(i=<span class="number">2</span>;i&lt;=n;i++)&#123;</span><br><span class="line">            Factorial*=i;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> Factorial;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">int</span> <span class="title function_">GetArray</span><span class="params">(<span class="type">int</span> m,<span class="type">int</span> n)</span>&#123;</span><br><span class="line">    <span class="keyword">return</span> GetFactorial(m)/GetFactorial(m-n);</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">int</span> <span class="title function_">GetCombine</span><span class="params">(<span class="type">int</span> m,<span class="type">int</span> n)</span>&#123;</span><br><span class="line">    <span class="keyword">return</span> GetFactorial(m)/(GetFactorial(n)*GetFactorial(m-n));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="第3关：费波拉契数列"><a href="#第3关：费波拉契数列" class="headerlink" title="第3关：费波拉契数列"></a>第3关：费波拉契数列</h2><p>问题描述<br>设计并编写一个函数，用迭代的方法计算费波拉契数列的第n（n≥1）项。<br>主函数中读入由用户输入的整数n，利用循环反复调用函数计算并输出费波拉契数列的前n项。</p>
<p>输入<br>一个正整数n（n≥1）。</p>
<p>输出<br>分n行输出费波拉契数列的前n项。</p>
<p>输入示例<br>5</p>
<p>输出示例<br>Fib(1) &#x3D; 1<br>Fib(2) &#x3D; 1<br>Fib(3) &#x3D; 2<br>Fib(4) &#x3D; 3<br>Fib(5) &#x3D; 5</p>
<p>提示<br>设计函数时重点关注函数自身的功能，而不要考虑整个程序的功能。</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">void</span> <span class="title function_">GetFib</span><span class="params">(<span class="type">int</span> n)</span>;</span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span>&#123;</span><br><span class="line">    <span class="type">int</span> n;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;n);</span><br><span class="line">    GetFib(n);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">void</span> <span class="title function_">GetFib</span><span class="params">(<span class="type">int</span> n)</span>&#123;</span><br><span class="line">    <span class="type">int</span> i;</span><br><span class="line">    <span class="type">int</span> Fn=<span class="number">0</span>,F1=<span class="number">1</span>,F2=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;n;i++)&#123;</span><br><span class="line">        <span class="keyword">if</span>(i==<span class="number">0</span>||i==<span class="number">1</span>)</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;Fib(%d) = %d\n&quot;</span>,i+<span class="number">1</span>,F1);</span><br><span class="line">        <span class="keyword">else</span>&#123;</span><br><span class="line">            Fn=F1+F2;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;Fib(%d) = %d\n&quot;</span>,i+<span class="number">1</span>,Fn);</span><br><span class="line">            F1=F2;</span><br><span class="line">            F2=Fn;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="第4关：加密字符串"><a href="#第4关：加密字符串" class="headerlink" title="第4关：加密字符串"></a>第4关：加密字符串</h2><p>问题描述<br>请设计并编写一个函数，用于加密单个字符，字符加密的规则是：</p>
<p>对于任意的字母（包括大写和小写字母）字符，替换为其后的第3个字母，如a替换为d，而x则替换为a，y替换为b，z替换为c；<br>对于非字母字符，不作任何处理。<br>主函数中使用循环依次读取用户输入的一行字符（“\n”是单行输入的结束标记），调用函数加密后输出加密后的字符。<br>提示：每次循环过程中只处理其中的单个字符。</p>
<p>输入<br>一行字符串。</p>
<p>输出<br>加密后的一行字符串。</p>
<p>输入示例<br>I went to the zoo with Marry last Sunday.</p>
<p>输出示例<br>L zhqw wr wkh crr zlwk Pduub odvw Vxqgdb.</p>
<p>提示<br>设计函数时重点关注函数自身的功能，而不要考虑整个程序的功能。</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="type">char</span>* <span class="title function_">encrypt</span><span class="params">(<span class="type">char</span> str[<span class="number">100</span>])</span>;</span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span>&#123;</span><br><span class="line">    <span class="type">char</span> str[<span class="number">100</span>],str1[<span class="number">100</span>];</span><br><span class="line">    <span class="type">char</span> ch;</span><br><span class="line">    <span class="type">int</span> i=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span>((ch=getchar())!=<span class="string">&#x27;\n&#x27;</span>)&#123;</span><br><span class="line">        str[i]=ch;</span><br><span class="line">        i++;</span><br><span class="line">    &#125;</span><br><span class="line">    str[i]=<span class="string">&#x27;\0&#x27;</span>;</span><br><span class="line">    <span class="built_in">strcpy</span>(str1,encrypt(str));</span><br><span class="line">    <span class="keyword">for</span>(i=<span class="number">0</span>;str1[i]!=<span class="string">&#x27;\0&#x27;</span>;i++)&#123;</span><br><span class="line">        <span class="built_in">putchar</span>(str1[i]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">char</span>* <span class="title function_">encrypt</span><span class="params">(<span class="type">char</span> str[<span class="number">100</span>])</span>&#123;</span><br><span class="line">    <span class="type">int</span> i=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span>(str[i]!=<span class="string">&#x27;\0&#x27;</span>)&#123;</span><br><span class="line">        <span class="keyword">if</span>(str[i]&gt;=<span class="string">&#x27;a&#x27;</span> &amp;&amp; str[i]&lt;=<span class="string">&#x27;w&#x27;</span>||str[i]&gt;=<span class="string">&#x27;A&#x27;</span> &amp;&amp; str[i]&lt;=<span class="string">&#x27;W&#x27;</span>)&#123;</span><br><span class="line">            str[i]+=<span class="number">3</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(str[i]&gt;=<span class="string">&#x27;x&#x27;</span> &amp;&amp; str[i]&lt;=<span class="string">&#x27;z&#x27;</span>||str[i]&gt;=<span class="string">&#x27;X&#x27;</span> &amp;&amp; str[i]&lt;=<span class="string">&#x27;Z&#x27;</span>)&#123;</span><br><span class="line">            str[i]=str[i]-(<span class="string">&#x27;x&#x27;</span>-<span class="string">&#x27;a&#x27;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        i++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> str;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="第5关：水仙花数"><a href="#第5关：水仙花数" class="headerlink" title="第5关：水仙花数"></a>第5关：水仙花数</h2><p>问题描述<br>水仙花数是指一个三位数，其百位数、十位数和个位数的立方和就等于该数本身，例如153就是一个水仙花数，因为13+53+33&#x3D;153。<br>请设计并编写一个函数，其功能是判定一个整数是否是水仙花数。<br>主函数中负责找到并输出所有的水仙花数。</p>
<p>输入<br>无。</p>
<p>输出<br>输出所有的水仙花数，每两个水仙花数之间用一个空格分开。</p>
<p>输入示例<br>无。</p>
<p>输出示例<br>153 370 371 407</p>
<p>提示<br>设计函数时重点关注函数自身的功能，而不要考虑整个程序的功能。</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;math.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">judgenum</span><span class="params">(<span class="type">int</span> num)</span>&#123;</span><br><span class="line">    <span class="type">int</span> i,a,b,c;</span><br><span class="line">    a=num/<span class="number">100</span>;</span><br><span class="line">    b=num%<span class="number">100</span>/<span class="number">10</span>;</span><br><span class="line">    c=num%<span class="number">10</span>;</span><br><span class="line">    <span class="keyword">if</span>(<span class="built_in">pow</span>(a,<span class="number">3</span>)+<span class="built_in">pow</span>(b,<span class="number">3</span>)+<span class="built_in">pow</span>(c,<span class="number">3</span>)==num)</span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span>&#123;</span><br><span class="line">    <span class="type">int</span> i;</span><br><span class="line">    <span class="keyword">for</span>(i=<span class="number">100</span>;i&lt;=<span class="number">999</span>;i++)&#123;</span><br><span class="line">        <span class="keyword">if</span>(judgenum(i))&#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;%d &quot;</span>,i);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <tags>
        <tag>Educoder</tag>
      </tags>
  </entry>
  <entry>
    <title>头歌C语言实验 练习7：多行多列的图形输出</title>
    <url>/2024/05/01/%E5%A4%B4%E6%AD%8CC%E8%AF%AD%E8%A8%80%E5%AE%9E%E9%AA%8C/%E5%A4%B4%E6%AD%8CC%E8%AF%AD%E8%A8%80%E5%AE%9E%E9%AA%8C-%E7%BB%83%E4%B9%A07%EF%BC%9A%E5%A4%9A%E8%A1%8C%E5%A4%9A%E5%88%97%E7%9A%84%E5%9B%BE%E5%BD%A2%E8%BE%93%E5%87%BA/</url>
    <content><![CDATA[<h2 id="第1关：星号长方形"><a href="#第1关：星号长方形" class="headerlink" title="第1关：星号长方形"></a>第1关：星号长方形</h2><p>问题描述<br>根据用户输入的整数n，输出宽为n列、高为n行的由星号构成的长方形。</p>
<p>输入<br>一个正整数n。</p>
<p>输出<br>由n行n列星号构成的星号长方形。<br>每一行的行首不要输出多余的空格。</p>
<p>输入示例<br>5</p>
<p>输出示例</p>
<p>*****<br>*****<br>*****<br>*****<br>*****</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span>&#123;</span><br><span class="line">    <span class="type">int</span> n;</span><br><span class="line">    <span class="type">int</span> i,j;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;n);</span><br><span class="line">    <span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;n;i++)&#123;</span><br><span class="line">        <span class="keyword">for</span>(j=<span class="number">0</span>;j&lt;n;j++)&#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;*&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="第2关：星号平行四边形"><a href="#第2关：星号平行四边形" class="headerlink" title="第2关：星号平行四边形"></a>第2关：星号平行四边形</h2><p>问题描述<br>根据用户输入的整数n，输出宽为n列、高为n行的由星号构成的平行四边形。</p>
<p>输入<br>一个正整数n。</p>
<p>输出<br>由n行n列星号构成的星号平行四边形。<br>第一行的行首不要输出多余的空格。</p>
<p>输入示例<br>5</p>
<p>输出示例</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">*****  </span><br><span class="line"> *****  </span><br><span class="line">  *****  </span><br><span class="line">   *****   </span><br><span class="line">    *****  </span><br></pre></td></tr></table></figure>

<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span>&#123;</span><br><span class="line">    <span class="type">int</span> n;</span><br><span class="line">    <span class="type">int</span> i,j;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;n);</span><br><span class="line">    <span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;n;i++)&#123;</span><br><span class="line">        <span class="keyword">for</span>(j=<span class="number">0</span>;j&lt;i;j++)&#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot; &quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span>(j=<span class="number">0</span>;j&lt;n;j++)&#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;*&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="第3关：星号三角形"><a href="#第3关：星号三角形" class="headerlink" title="第3关：星号三角形"></a>第3关：星号三角形</h2><p>问题描述<br>根据用户输入的整数n，输出如示例所示的星号三角形。</p>
<p>输入<br>一个正整数n。</p>
<p>输出<br>输出如示例所示的星号三角形。<br>第一行的行首不要输出多余的空格。</p>
<p>输入示例<br>5</p>
<p>输出示例</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">*****</span><br><span class="line"> ****</span><br><span class="line">  ***</span><br><span class="line">   **</span><br><span class="line">    *</span><br></pre></td></tr></table></figure>

<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span>&#123;</span><br><span class="line">    <span class="type">int</span> n;</span><br><span class="line">    <span class="type">int</span> i,j;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;n);</span><br><span class="line">    <span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;n;i++)&#123;</span><br><span class="line">        <span class="keyword">for</span>(j=<span class="number">0</span>;j&lt;n;j++)&#123;</span><br><span class="line">            <span class="keyword">if</span>(j&lt;i)</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">&quot; &quot;</span>);</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">&quot;*&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="第4关：字母平行四边形"><a href="#第4关：字母平行四边形" class="headerlink" title="第4关：字母平行四边形"></a>第4关：字母平行四边形</h2><p>问题描述<br>根据用户输入的整数n，输出宽为n列、高为n行的由大写字母构成的平行四边形。</p>
<p>输入<br>一个正整数n。</p>
<p>输出<br>由n行n列星号构成的字母平行四边形。<br>第一行的行首不要输出多余的空格。</p>
<p>输入示例<br>5</p>
<p>输出示例</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">ABCDE</span><br><span class="line"> BCDEF</span><br><span class="line">  CDEFG</span><br><span class="line">   DEFGH</span><br><span class="line">    EFGHI</span><br></pre></td></tr></table></figure>

<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span>&#123;</span><br><span class="line">    <span class="type">int</span> n;</span><br><span class="line">    <span class="type">int</span> i,j;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;n);</span><br><span class="line">    <span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;n;i++)&#123;</span><br><span class="line">        <span class="keyword">for</span>(j=<span class="number">0</span>;j&lt;n+i;j++)&#123;</span><br><span class="line">            <span class="keyword">if</span>(j&lt;i)</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">&quot; &quot;</span>);</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">&quot;%c&quot;</span>,<span class="string">&#x27;A&#x27;</span>+j);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="第5关：倒置的星号三角形"><a href="#第5关：倒置的星号三角形" class="headerlink" title="第5关：倒置的星号三角形"></a>第5关：倒置的星号三角形</h2><p>问题描述<br>根据用户输入的正整数n，输出如示例所示的倒置的星号三角形。</p>
<p>输入<br>一个正整数n。</p>
<p>输出<br>如示例所示的倒置的星号三角形。<br>同一行内的每两个星号之间用一个空格分开。<br>为简化程序起见，每一行星号的末尾有一个多余的空格。<br>第一行的行首不要输出多余的空格。</p>
<p>输入示例<br>5</p>
<p>输出示例</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">* * * * * * * * *</span><br><span class="line">  * * * * * * *</span><br><span class="line">    * * * * *</span><br><span class="line">      * * *</span><br><span class="line">        *</span><br></pre></td></tr></table></figure>

<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span>&#123;</span><br><span class="line">    <span class="type">int</span> n;</span><br><span class="line">    <span class="type">int</span> i,j;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;n);</span><br><span class="line">    <span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;n;i++)&#123;</span><br><span class="line">        <span class="keyword">for</span>(j=<span class="number">0</span>;j&lt;n;j++)&#123;</span><br><span class="line">            <span class="keyword">if</span>(j&lt;i)</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">&quot;  &quot;</span>);</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">&quot;* &quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span>(j=n;j&gt;i+<span class="number">1</span>;j--)&#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;* &quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <tags>
        <tag>Educoder</tag>
      </tags>
  </entry>
  <entry>
    <title>头歌C语言实验 练习9：使用数组</title>
    <url>/2024/05/01/%E5%A4%B4%E6%AD%8CC%E8%AF%AD%E8%A8%80%E5%AE%9E%E9%AA%8C/%E5%A4%B4%E6%AD%8CC%E8%AF%AD%E8%A8%80%E5%AE%9E%E9%AA%8C-%E7%BB%83%E4%B9%A09%EF%BC%9A%E4%BD%BF%E7%94%A8%E6%95%B0%E7%BB%84/</url>
    <content><![CDATA[<h2 id="第1关：陶陶摘苹果"><a href="#第1关：陶陶摘苹果" class="headerlink" title="第1关：陶陶摘苹果"></a>第1关：陶陶摘苹果</h2><p>问题描述<br>陶陶家的院子里有一棵苹果树，每到秋天树上就会结出10个苹果。苹果成熟的时候，陶陶就会跑去摘苹果。陶陶有个30厘米高的板凳，当她不能直接用手摘到苹果的时候，就会踩到板凳上再试试。现在已知10个苹果到地面的高度，以及陶陶把手伸直的时候能够达到的最大高度，请帮陶陶算一下她能够摘到的苹果的数目。假设她碰到苹果，苹果就会掉下来。</p>
<p>输入<br>输入包括两行数据。第一行包含10个100到200之间（包括100和200）的整数（以厘米为单位）分别表示10个苹果到地面的高度，两个相邻的整数之间用一个空格隔开。第二行只包括一个100到120之间（包含100和120）的整数（以厘米为单位），表示陶陶把手伸直的时候能够达到的最大高度。</p>
<p>输出<br>输出包括一行，这一行只包含一个整数，表示陶陶能够摘到的苹果的数目。</p>
<p>输入示例<br>100 200 150 140 129 134 167 198 200 111<br>110</p>
<p>输出示例<br>5</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span>&#123;</span><br><span class="line">    <span class="type">int</span> arr[<span class="number">10</span>];</span><br><span class="line">    <span class="type">int</span> max,i,n=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;<span class="number">10</span>;i++)&#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;arr[i]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;max);</span><br><span class="line">    <span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;<span class="number">10</span>;i++)&#123;</span><br><span class="line">        <span class="keyword">if</span>(max+<span class="number">30</span>&gt;=arr[i])</span><br><span class="line">            n++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>,n);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="第2关：成绩统计-III"><a href="#第2关：成绩统计-III" class="headerlink" title="第2关：成绩统计 III"></a>第2关：成绩统计 III</h2><p>问题描述<br>某班中最多有50名学生。期末考试结束后，班主任张老师需要统计这个班上所有同学的平均成绩、及格率以及考试成绩在平均成绩以上的学生人数。聪明的你，能够利用所学到的知识，编写一段程序帮助张老师自动完成这个统计工作吗？</p>
<p>输入<br>输入数据包括两行：<br>第一行是这个班级的学生人数n（n≤50）。<br>第二行包括n个介于0到100的实数，表示每位同学的期末考试成绩，每两个成绩之间用一个空格分开。</p>
<p>输出<br>输出数据包括三行：<br>第一行是班级的平均成绩，保留2位小数。<br>第二行是一个百分数，表示班级的及格率，保留2位小数。<br>第三行是一个整数，表示平均成绩以上的学生人数。</p>
<p>输入示例<br>12<br>85.6 83.47 45.8 96.3 100 37.4 68.9 96.6 88 84.6 94.7 78.8</p>
<p>输出示例<br>80.01<br>83.33%<br>8</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span>&#123;</span><br><span class="line">    <span class="type">int</span> i,n,a=<span class="number">0</span>,b=<span class="number">0</span>;</span><br><span class="line">    <span class="type">double</span> avg=<span class="number">0</span>;</span><br><span class="line">    <span class="type">double</span> *score;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;n);</span><br><span class="line">    score=(<span class="type">double</span>*)<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(<span class="type">double</span>)*n);</span><br><span class="line">    <span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;n;i++)&#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%lf&quot;</span>,&amp;score[i]);</span><br><span class="line">        avg+=score[i];</span><br><span class="line">    &#125;</span><br><span class="line">    avg/=n;</span><br><span class="line">    <span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;n;i++)&#123;</span><br><span class="line">        <span class="keyword">if</span>(score[i]&gt;=<span class="number">60.0</span>)</span><br><span class="line">            a++;</span><br><span class="line">        <span class="keyword">if</span>(score[i]&gt;=avg)</span><br><span class="line">            b++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%.2lf\n%.2lf\n%d&quot;</span>,avg,(<span class="type">double</span>)a/n*<span class="number">100</span>,b);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="第3关：计算书费"><a href="#第3关：计算书费" class="headerlink" title="第3关：计算书费"></a>第3关：计算书费</h2><p>问题描述<br>下面是一个图书的单价表：<br><img src="https://r2.lm379.cn/2024/05/4daa4644d3095282b77070800c627367.png"><br>给定每种图书购买的数量，编程计算应付的总费用。</p>
<p>输入<br>输入第一行包含一个正整数k（0＜k＜100），表示有k组测试数据；接下来k行，每行包含一组测试数据。每组测试数据包含10个整数(大于等于0，小于等于100)，分别表示购买的《计算概论》、《数据结构与算法》、《数字逻辑》、《C++程序设计教程》、《人工智能》、《计算机体系结构》、《编译原理》、《操作系统》、《计算机网络》、《JAVA程序设计》的数量（以本为单位）。每两个整数之间用一个空格分开。</p>
<p>输出<br>对于每组测试数据，输出一行。该行包含一个浮点数f，表示应付的总费用。精确到小数点后两位。</p>
<p>输入示例<br>2<br>1 5 8 10 5 1 1 2 3 4<br>3 5 6 3 100 1 1 0 1 0</p>
<p>输出示例<br>2140.20<br>4427.80</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span>&#123;</span><br><span class="line">    <span class="type">int</span> k,i,j;</span><br><span class="line">    <span class="type">int</span> **num;</span><br><span class="line">    <span class="type">double</span> price[<span class="number">10</span>]=&#123;<span class="number">28.9</span>,<span class="number">32.7</span>,<span class="number">45.6</span>,<span class="number">78</span>,<span class="number">35</span>,<span class="number">86.2</span>,<span class="number">27.8</span>,<span class="number">43</span>,<span class="number">56</span>,<span class="number">65</span>&#125;;</span><br><span class="line">    <span class="type">double</span> f;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;k);</span><br><span class="line">    num=(<span class="type">int</span>**)<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(<span class="type">int</span>*)*k);</span><br><span class="line">    <span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;k;i++)</span><br><span class="line">        num[i]=(<span class="type">int</span>*)<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(<span class="type">int</span>)*<span class="number">10</span>);</span><br><span class="line">    <span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;k;i++)&#123;</span><br><span class="line">        f=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(j=<span class="number">0</span>;j&lt;<span class="number">10</span>;j++)&#123;</span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;num[i][j]);</span><br><span class="line">            f+=num[i][j]*price[j];</span><br><span class="line">        </span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%.2lf\n&quot;</span>,f);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;k;i++)</span><br><span class="line">        <span class="built_in">free</span>(num[i]);</span><br><span class="line">    <span class="built_in">free</span>(num);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="第4关：打印极值点下标"><a href="#第4关：打印极值点下标" class="headerlink" title="第4关：打印极值点下标"></a>第4关：打印极值点下标</h2><p>问题描述<br>在一个整数数组中，对于下标为i的整数，如果它大于所有它相邻的整数，或者小于所有它相邻的整数，则称为该整数为一个极值点，极值点的下标就是i。</p>
<p>输入<br>有2×n+1行输入：第一行是要处理的数组的个数n；对其余2×n行，第一行是此数组的元素个数k（3≤k≤80），第二行是k个整数，每两个整数之间用空格分隔。</p>
<p>输出<br>输出为n行：每行对应于相应数组的所有极值点下标值，下标值之间用空格分隔。<br>为简化程序的输出控制，每一行输出的最后一个数字之后都有一个多余的空格。</p>
<p>提示<br>请注意避免 <code>&lt;font color=&#39;red&#39;&gt;</code>下标越界 <code>&lt;/font&gt;</code>的错误！</p>
<p>输入示例<br>3<br>10<br>10 12 12 11 11 12 23 24 12 12<br>15<br>12 12 122 112 222 211 222 221 76 36 31 234 256 76 76<br>15<br>12 14 122 112 222 222 222 221 76 36 31 234 256 76 73</p>
<p>输出示例<br>0 7<br>2 3 4 5 6 10 12<br>0 2 3 10 12 14</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span>&#123;</span><br><span class="line">    <span class="type">int</span> i,j,n,k;</span><br><span class="line">    <span class="type">int</span>* arr;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;n);</span><br><span class="line">    <span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;n;i++)&#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;k);</span><br><span class="line">        arr=(<span class="type">int</span>*)<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(<span class="type">int</span>)*k);</span><br><span class="line">        <span class="keyword">for</span>(j=<span class="number">0</span>;j&lt;k;j++)&#123;</span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;arr[j]);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span>(j=<span class="number">0</span>;j&lt;k;j++)&#123;</span><br><span class="line">            <span class="keyword">if</span>(j==<span class="number">0</span>)&#123;</span><br><span class="line">                <span class="keyword">if</span>(arr[j]&gt;arr[j+<span class="number">1</span>]||arr[j]&lt;arr[j+<span class="number">1</span>])</span><br><span class="line">                    <span class="built_in">printf</span>(<span class="string">&quot;%d &quot;</span>,j);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span>(j==k<span class="number">-1</span>)&#123;</span><br><span class="line">                <span class="keyword">if</span>(arr[j]&gt;arr[j<span class="number">-1</span>]||arr[j]&lt;arr[j<span class="number">-1</span>])</span><br><span class="line">                    <span class="built_in">printf</span>(<span class="string">&quot;%d &quot;</span>,j);</span><br><span class="line">                &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                <span class="keyword">if</span>(arr[j]&gt;arr[j+<span class="number">1</span>]&amp;&amp;arr[j]&gt;arr[j<span class="number">-1</span>])</span><br><span class="line">                    <span class="built_in">printf</span>(<span class="string">&quot;%d &quot;</span>,j);</span><br><span class="line">                <span class="keyword">if</span>(arr[j]&lt;arr[j+<span class="number">1</span>]&amp;&amp;arr[j]&lt;arr[j<span class="number">-1</span>])</span><br><span class="line">                    <span class="built_in">printf</span>(<span class="string">&quot;%d &quot;</span>,j);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">        <span class="built_in">free</span>(arr);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="第5关：矩阵加法"><a href="#第5关：矩阵加法" class="headerlink" title="第5关：矩阵加法"></a>第5关：矩阵加法</h2><p>问题描述<br>请编写程序计算两个同型矩阵的加法运算，并输出和矩阵。<br>矩阵加法被定义在两个相同大小的矩阵。两个m×n矩阵A和B的和，标记为A+B，一样是个m×n矩阵，其内的各元素为其相对应元素相加后的值。例如：<br><img src="https://r2.lm379.cn/2024/05/f7ffce91a2934f25abfcd230bf178add.png"><br>输入<br>输入共有多行。<br>第一行是两个用空格分开的正整数n和m（0 &lt; m, n &lt;&#x3D; 20），分别表示两个同型矩阵的行数和列数。<br>接下来有2×n行输入，每一行都包含m个用空格分开的整数。<br>第一个n行输入的共n×m个整数，表示第一个矩阵的各个元素。<br>第二个n行输入的共n×m个整数，表示第二个矩阵的各个元素。</p>
<p>输出<br>输出共有n行，每行输出m个整数，每两个整数之间用一个空格分开，表示计算后输出的和矩阵。<br>为简化程序的输出控制，每一行输出的最后一个数字之后都有一个多余的空格。</p>
<p>输入示例<br>2 3<br>1 2 3<br>2 3 4<br>4 5 6<br>5 6 7</p>
<p>输出示例<br>5 7 9<br>7 9 11</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span>&#123;</span><br><span class="line">    <span class="type">int</span> m,n,i,j;</span><br><span class="line">    <span class="type">int</span>* a;</span><br><span class="line">    <span class="type">int</span>* b;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d %d&quot;</span>,&amp;m,&amp;n);</span><br><span class="line">    a=(<span class="type">int</span>*)<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(<span class="type">int</span>)*m*n);</span><br><span class="line">    b=(<span class="type">int</span>*)<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(<span class="type">int</span>)*m*n);</span><br><span class="line">    <span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;m*n;i++)&#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;a[i]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;m*n;i++)&#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;b[i]);</span><br><span class="line">        a[i]+=b[i];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;m;i++)&#123;</span><br><span class="line">        <span class="keyword">for</span>(j=<span class="number">0</span>;j&lt;n;j++)&#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;%d &quot;</span>,a[i*n+j]);</span><br><span class="line">        &#125;</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <tags>
        <tag>Educoder</tag>
      </tags>
  </entry>
  <entry>
    <title>头歌C语言实验 练习6：循环结构II</title>
    <url>/2024/04/16/%E5%A4%B4%E6%AD%8CC%E8%AF%AD%E8%A8%80%E5%AE%9E%E9%AA%8C/%E5%A4%B4%E6%AD%8CC%E8%AF%AD%E8%A8%80%E5%AE%9E%E9%AA%8C-%E7%BB%83%E4%B9%A06%EF%BC%9A%E5%BE%AA%E7%8E%AF%E7%BB%93%E6%9E%84II/</url>
    <content><![CDATA[<h2 id="第1关：分数序列和"><a href="#第1关：分数序列和" class="headerlink" title="第1关：分数序列和"></a>第1关：分数序列和</h2><p>问题描述<br>有一个分数序列2&#x2F;1，3&#x2F;2，5&#x2F;3，8&#x2F;5，13&#x2F;8，21&#x2F;13，…… ，求这个分数序列的前n项之和。</p>
<p>输入<br>输入只有一个非负整数n（0≤n≤500）。</p>
<p>输出<br>按照“分数序列前x项之和为：y”的格式输出前n项的和，其中x为项数n，y是前n项之和，保留4位小数，冒号是中文的冒号。</p>
<p>输入示例<br>99</p>
<p>输出示例<br>分数序列前99项之和为：160.4849</p>
<p>提示<br>为避免溢出错误，在程序中的中间变量尽可能都使用double类型。</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span>&#123;</span><br><span class="line">    <span class="type">int</span> i,n;</span><br><span class="line">    <span class="type">double</span> sum=<span class="number">0</span>;</span><br><span class="line">    <span class="type">double</span> a=<span class="number">2</span>,b=<span class="number">1</span>;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;n);</span><br><span class="line">    <span class="keyword">if</span>(n!=<span class="number">0</span>)&#123;</span><br><span class="line">        sum=a/b;</span><br><span class="line">        <span class="keyword">if</span>(n&gt;=<span class="number">2</span>)&#123;</span><br><span class="line">            <span class="keyword">for</span>(i=<span class="number">1</span>;i&lt;n;i++)&#123;</span><br><span class="line">                a=a+b;</span><br><span class="line">                b=a-b;</span><br><span class="line">                sum+=a/b;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;分数序列前%d项之和为：%.4lf&quot;</span>,n,sum);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="第2关：奖金发放"><a href="#第2关：奖金发放" class="headerlink" title="第2关：奖金发放"></a>第2关：奖金发放</h2><p>问题描述<br>企业每个月发放的奖金根据当月利润进行提成。利润I低于或等于10万元（I≤100000）时，奖金可提10％；利润高于10万元，低于20万元（100000＜I≤200000）时，低于10万元的部分按10％提成，高于10万元的部分，可提成7.5％；200000＜I≤400000时，低于20万元的部分仍按上述办法提成（下同）。高于20万的部分按5％提成；400000＜I≤600000时，高于40万元的部分按3％提成；600000＜I≤1000000时，高于60万元的部分按1.5％提成；I＞1000000时，超过100万元的部分按1％提成。<br>聪明的你能编写一段程序，根据一年中每个月的利润，计算并输出这一年内的应发奖金总额吗？</p>
<p>输入<br>输入数据一共有12行，每一行都是一个正整数，其中第i（1≤i≤12）行的整数表示第i个月的利润（以元为单位），其中每个整数都不超过2000000。</p>
<p>输出<br>输出只有一行，即该企业在这一年内应该发放的奖金总额（以元为单位），要求精确到小数点后两位。</p>
<p>输入示例<br>400000<br>106000<br>50000<br>580000<br>620000<br>1030000<br>1700000<br>122000<br>640000<br>76000<br>60000<br>540000</p>
<p>输出示例<br>287000.00</p>
<p>提示<br>为保证数据精度准确无误，涉及到实数的变量请使用double类型。<br>输入示例中，针对每个月的利润，对应每月计算的奖金是：<br>27500.00<br>10450.00<br>5000.00<br>32900.00<br>33800.00<br>39800.00<br>46500.00<br>11650.00<br>34100.00<br>7600.00<br>6000.00<br>31700.00</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;math.h&gt;</span></span></span><br><span class="line"><span class="type">double</span> <span class="title function_">sum</span><span class="params">(<span class="type">double</span> n)</span>&#123;</span><br><span class="line">    <span class="type">double</span> t;</span><br><span class="line">    <span class="keyword">if</span>(n/<span class="built_in">pow</span>(<span class="number">10</span>,<span class="number">4</span>)&lt;=<span class="number">10</span>)&#123;</span><br><span class="line">        <span class="keyword">return</span> n*<span class="number">0.1</span>;</span><br><span class="line">    &#125;<span class="keyword">else</span> <span class="keyword">if</span>(n/<span class="built_in">pow</span>(<span class="number">10</span>,<span class="number">4</span>)&lt;=<span class="number">20</span>)&#123;</span><br><span class="line">        t=sum(<span class="built_in">pow</span>(<span class="number">10</span>,<span class="number">5</span>));</span><br><span class="line">        <span class="keyword">return</span> t+(n-<span class="built_in">pow</span>(<span class="number">10</span>,<span class="number">5</span>))*<span class="number">0.075</span>;</span><br><span class="line">    &#125;<span class="keyword">else</span> <span class="keyword">if</span>(n/<span class="built_in">pow</span>(<span class="number">10</span>,<span class="number">4</span>)&lt;=<span class="number">40</span>)&#123;</span><br><span class="line">        t=sum(<span class="number">2</span>*<span class="built_in">pow</span>(<span class="number">10</span>,<span class="number">5</span>));</span><br><span class="line">        <span class="keyword">return</span> t+(n<span class="number">-2</span>*<span class="built_in">pow</span>(<span class="number">10</span>,<span class="number">5</span>))*<span class="number">0.05</span>;</span><br><span class="line">    &#125;<span class="keyword">else</span> <span class="keyword">if</span>(n/<span class="built_in">pow</span>(<span class="number">10</span>,<span class="number">4</span>)&lt;=<span class="number">60</span>)&#123;</span><br><span class="line">        t=sum(<span class="number">4</span>*<span class="built_in">pow</span>(<span class="number">10</span>,<span class="number">5</span>));</span><br><span class="line">        <span class="keyword">return</span> t+(n<span class="number">-4</span>*<span class="built_in">pow</span>(<span class="number">10</span>,<span class="number">5</span>))*<span class="number">0.03</span>;</span><br><span class="line">    &#125;<span class="keyword">else</span> <span class="keyword">if</span>(n/<span class="built_in">pow</span>(<span class="number">10</span>,<span class="number">4</span>)&lt;=<span class="number">100</span>)&#123;</span><br><span class="line">        t=sum(<span class="number">6</span>*<span class="built_in">pow</span>(<span class="number">10</span>,<span class="number">5</span>));</span><br><span class="line">        <span class="keyword">return</span> t+(n<span class="number">-6</span>*<span class="built_in">pow</span>(<span class="number">10</span>,<span class="number">5</span>))*<span class="number">0.015</span>;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        t=sum(<span class="number">10</span>*<span class="built_in">pow</span>(<span class="number">10</span>,<span class="number">5</span>));</span><br><span class="line">        <span class="keyword">return</span> t+(n<span class="number">-10</span>*<span class="built_in">pow</span>(<span class="number">10</span>,<span class="number">5</span>))*<span class="number">0.01</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span>&#123;</span><br><span class="line">    <span class="type">int</span> i;</span><br><span class="line">    <span class="type">double</span> l[<span class="number">12</span>];</span><br><span class="line">    <span class="type">double</span> money=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;<span class="number">12</span>;i++)&#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%lf&quot;</span>,&amp;l[i]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;<span class="number">12</span>;i++)&#123;</span><br><span class="line">        money+=sum(l[i]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%.2lf&quot;</span>,money);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="第3关：成绩统计-II"><a href="#第3关：成绩统计-II" class="headerlink" title="第3关：成绩统计 II"></a>第3关：成绩统计 II</h2><p>问题描述<br>输入若干个百分制成绩，直到输入负数时为止。<br>请编写一段程序，统计出这些成绩的平均成绩和其中的不及格人数。</p>
<p>输入<br>若干个用空格分开的浮点数，最后是一个负数。除最后的负数外，之前的每个浮点数代表一个百分制成绩。</p>
<p>输出<br>输出共包括两行：<br>第一行输出全班同学的平均成绩，保留2位小数；<br>第二行输出不及格人数。<br>输出格式参照输出示例，注意其中的冒号是中文冒号。</p>
<p>输入示例<br>85.6 83.47 45.8 96.3 100 37.4 68.9 96.6 88 84.6 94.7 78.8 -2.3</p>
<p>输出示例<br>平均成绩：80.01分<br>不及格人数：2人</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span>&#123;</span><br><span class="line">    <span class="type">int</span> i=<span class="number">0</span>,n=<span class="number">0</span>;</span><br><span class="line">    <span class="type">double</span> score,avg=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">do</span>&#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%lf&quot;</span>,&amp;score);</span><br><span class="line">        <span class="keyword">if</span>(score&lt;<span class="number">0</span>)</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        n++;</span><br><span class="line">        avg+=score;</span><br><span class="line">        <span class="keyword">if</span>(score&lt;<span class="number">60</span>)</span><br><span class="line">            i++;</span><br><span class="line">    &#125;<span class="keyword">while</span>(<span class="number">1</span>);</span><br><span class="line">    avg/=n;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;平均成绩：%.2lf分\n不及格人数：%d人&quot;</span>,avg,i);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="第4关：计算圆周率-I"><a href="#第4关：计算圆周率-I" class="headerlink" title="第4关：计算圆周率 I"></a>第4关：计算圆周率 I</h2><p>问题描述<br>众所周知，可以使用级数展开公式近似计算圆周率π，下面的这个公式可以算是其中最简单的一个：<br>π&#x2F;4&#x3D;1-1&#x2F;3+1&#x2F;5-1&#x2F;7+1&#x2F;9-…<br>根据给定的正整数 n 使用上述公式通过计算前n项的和，近似计算圆周率π的值。</p>
<p>输入<br>一个正整数n。</p>
<p>输出<br>一个浮点数，表示圆周率π的近似值，精确到小数点后8位。</p>
<p>输入示例<br>5</p>
<p>输出示例<br>3.33968254</p>
<p>提示<br>为保证数据精度准确无误，涉及到实数的变量请使用double类型。</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;math.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span>&#123;</span><br><span class="line">    <span class="type">int</span> i,n;</span><br><span class="line">    <span class="type">double</span> pi=<span class="number">0</span>;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;n);</span><br><span class="line">    <span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;n;i++)&#123;</span><br><span class="line">        pi+=<span class="number">4</span>*(<span class="number">1</span>/(<span class="number">2.0</span>*(i+<span class="number">1</span>)<span class="number">-1</span>))*<span class="built_in">pow</span>(<span class="number">-1</span>,i);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%.8lf&quot;</span>,pi);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="第5关：最大公约数和最小公倍数"><a href="#第5关：最大公约数和最小公倍数" class="headerlink" title="第5关：最大公约数和最小公倍数"></a>第5关：最大公约数和最小公倍数</h2><p>问题描述<br>最大公约数<br>也称为最大公因数或最大公因子，指两个或多个整数共有约数中最大的一个。<br>求最大公约数的方法有很多，现列举最常用的两种方法。</p>
<p>辗转相除法 设有两整数 a 和 b ，则计算步骤如下：<br>①    计算a和b的余数c；<br>②    若c为0，则b即为两数的最大公约数；<br>③    若c不为0，则令a &#x3D; b，b &#x3D; c，再重复执行步骤①。<br>例如：求27和15的最大公约数过程为：<br>求27和15的余数为12<br>求15和12的余数为3<br>求12和3的余数为0<br>因此，3即为27和15的最大公约数。<br>2.    相减法<br>设有两整数 a 和 b ，则计算步骤如下：<br>①    若a大于b，则令a &#x3D; a - b；<br>②    若a小于b，则令b &#x3D; b - a；<br>③    若a与b相等，则a（或b）即为两数的最大公约数；<br>④    若a与b不相等，则重复执行步骤 ①。<br>例如：求27和15的最大公约数过程为：<br>（27 &gt; 15）27 - 15 &#x3D; 12<br>（12 &lt; 15）15 - 12 &#x3D; 3<br>（12 &gt; 3）12 - 3 &#x3D; 9<br>（9 &gt; 3）9 - 3 &#x3D; 6<br>（6 &gt; 3）6 – 3 &#x3D; 3<br>因为a和b的值都为3，因此3即为27和15的最大公约数。</p>
<p>最小公倍数<br>两个或多个整数公有的倍数叫做它们的公倍数，其中除0以外最小的一个公倍数就叫做这几个整数的最小公倍数。<br>求最小公倍数算法：最小公倍数 &#x3D; 两整数的乘积 ÷ 最大公约数。<br>请根据以上算法描述编写一段程序，计算并输出两个任意的正整数的最大公约数与最小公倍数。</p>
<p>输入<br>用空格分开的两个正整数a和b。</p>
<p>输出<br>输出用空格分开的两个正整数，第一个是最大公约数，第二个是最小公倍数。</p>
<p>输入示例<br>66 33</p>
<p>输出示例<br>33 66<br>下面有两种方法，任选其一即可</p>
<h3 id="辗转相除法"><a href="#辗转相除法" class="headerlink" title="辗转相除法"></a>辗转相除法</h3><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">successive</span><span class="params">(<span class="type">int</span> a,<span class="type">int</span> b)</span>&#123;</span><br><span class="line">    <span class="type">int</span> c;</span><br><span class="line">    c=a%b;</span><br><span class="line">    <span class="keyword">if</span>(c==<span class="number">0</span>)</span><br><span class="line">        <span class="keyword">return</span> b;</span><br><span class="line">    <span class="keyword">while</span>(c!=<span class="number">0</span>)&#123;</span><br><span class="line">        a=b;</span><br><span class="line">        b=c;</span><br><span class="line">        c=a%b;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> b;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span>&#123;</span><br><span class="line">    <span class="type">int</span> a,b,multiple,divisor;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d %d&quot;</span>,&amp;a,&amp;b);</span><br><span class="line">    divisor=successive(a,b);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d &quot;</span>,divisor);</span><br><span class="line">    multiple=a*b/divisor;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>,multiple);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="相减法"><a href="#相减法" class="headerlink" title="相减法"></a>相减法</h3><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">subtraction</span><span class="params">(<span class="type">int</span> a,<span class="type">int</span> b)</span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(a&gt;b)</span><br><span class="line">        a=a-b;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span>(a&lt;b)</span><br><span class="line">        b=b-a;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        <span class="keyword">return</span> a;</span><br><span class="line">    <span class="keyword">if</span>(a!=b)</span><br><span class="line">        <span class="keyword">return</span> subtraction(a,b);</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span>&#123;</span><br><span class="line">    <span class="type">int</span> a,b,multiple,divisor;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d %d&quot;</span>,&amp;a,&amp;b);</span><br><span class="line">    divisor=subtraction(a,b);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d &quot;</span>,divisor);</span><br><span class="line">    multiple=a*b/divisor;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>,multiple);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <tags>
        <tag>Educoder</tag>
      </tags>
  </entry>
  <entry>
    <title>头歌C语言实验 辅助练习5：循环结构 I</title>
    <url>/2024/04/16/%E5%A4%B4%E6%AD%8CC%E8%AF%AD%E8%A8%80%E5%AE%9E%E9%AA%8C/%E5%A4%B4%E6%AD%8CC%E8%AF%AD%E8%A8%80%E5%AE%9E%E9%AA%8C-%E8%BE%85%E5%8A%A9%E7%BB%83%E4%B9%A05%EF%BC%9A%E5%BE%AA%E7%8E%AF%E7%BB%93%E6%9E%84-I/</url>
    <content><![CDATA[<h2 id="第1关：计算阶乘"><a href="#第1关：计算阶乘" class="headerlink" title="第1关：计算阶乘"></a>第1关：计算阶乘</h2><p>问题描述<br>自然数n的阶乘被定义为：n! &#x3D; 1×2×3×……×n，而0! &#x3D; 1。请编写一段程序，对于用户输入的不超过20的非负整数n，计算并输出n的阶乘。<br>注意：17的阶乘结果就会因为超过int所能表示的范围而产生溢出，因此必须使用能表示更大范围的数据类型。</p>
<p>输入<br>一个不超过20的非负整数n。</p>
<p>输出<br>按照“x!&#x3D;xxxx”的格式输出n的阶乘结果。</p>
<p>输入示例<br>5</p>
<p>输出示例<br>5!&#x3D;120</p>
<p>提示<br>17的阶乘结果就会因为超过int所能表示的范围而产生溢出，因此必须使用能表示更大范围的数据类型。请参照教材附录B选取合适的数据类型。</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span>&#123;</span><br><span class="line">    <span class="type">int</span> n,i;</span><br><span class="line">    <span class="type">long</span> <span class="type">int</span> x=<span class="number">1</span>;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;n);</span><br><span class="line">    <span class="keyword">if</span>(n&gt;=<span class="number">0</span>)&#123;</span><br><span class="line">        <span class="keyword">for</span>(i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">            x=x*i;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d!=%ld&quot;</span>,n,x);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="第2关：九九乘法表"><a href="#第2关：九九乘法表" class="headerlink" title="第2关：九九乘法表"></a>第2关：九九乘法表</h2><p>问题描述<br>请使用循环嵌套编写程序输出一个九九乘法表。</p>
<p>输入<br>无。</p>
<p>输出<br>如下所示的九九乘法表。<br>同一行中每两个等式之间用一个空格分开，为了保证等式对齐，每个等式中的积需要指定占用两个字符的宽度。<br>注意每一行的末尾不要有多余的空格。</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span>&#123;</span><br><span class="line">    <span class="type">int</span> i,j;</span><br><span class="line">    <span class="type">int</span> n=<span class="number">9</span>;</span><br><span class="line">    <span class="keyword">for</span>(i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">        <span class="keyword">for</span>(j=<span class="number">1</span>;j&lt;=i;j++)&#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;%d*%d=%2d&quot;</span>,j,i,i*j);</span><br><span class="line">            <span class="keyword">if</span>(j&lt;i)&#123;</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">&quot; &quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="第3关：与7相关的数"><a href="#第3关：与7相关的数" class="headerlink" title="第3关：与7相关的数"></a>第3关：与7相关的数</h2><p>问题描述<br>贝贝正在和她的朋友们玩一个游戏：小朋友们围坐成一圈，依次按照自然数从小到大的顺序报数，但遇到跟7相关的数就不能报出来，而是用拍手来替代，如果谁报出了与7相关的数就算是那个小朋友输了。为了不会轻易地输给其他小朋友，贝贝很想提前知道在100以内哪些数是不能报出来的。<br>与7相关的数包括7的倍数和数位上有7的整数，例如7,14,37,70都是与7相关的数。<br>聪明的你能帮一下可爱的贝贝吗？</p>
<p>输入<br>无。</p>
<p>输出<br>分多行输出所有100以内的与7相关的数，每行输出6个整数，每个整数占3个字符宽度，不要输出多余的空格。</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> N 100</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span>&#123;</span><br><span class="line">    <span class="type">int</span> i,j=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(i=<span class="number">1</span>;i&lt;N;i++)&#123;</span><br><span class="line">        <span class="keyword">if</span>(i%<span class="number">7</span>==<span class="number">0</span>||i%<span class="number">10</span>==<span class="number">7</span>||i/<span class="number">10</span>==<span class="number">7</span>)&#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;%3d&quot;</span>,i);</span><br><span class="line">            j++;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(j%<span class="number">6</span>==<span class="number">0</span>&amp;&amp;j!=<span class="number">0</span>)&#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">            j=<span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="第4关：自由落体运动"><a href="#第4关：自由落体运动" class="headerlink" title="第4关：自由落体运动"></a>第4关：自由落体运动</h2><p>问题描述<br>一个小球从高空中自由落下，在和地面碰撞后向上弹起，到达最高点后再次落下，……。现在假定小球每次碰撞地面时回弹的高度都是之前下落高度的一半，聪明的你是否能够编写一段程序，计算小球在第n次碰撞地面时已经总共在空中行进的距离，以及这一次碰撞后即将回弹的高度吗？</p>
<p>输入<br>用空格分开的一个浮点数h和一个正整数n，浮点数h表示小球的初始高度，n表示小球第n次碰撞地面。</p>
<p>输出<br>用空格分开的两个浮点数，保留2位小数。<br>第一个浮点数表示小球第n次碰撞地面时在空中行进的总距离；第二个浮点数表示小球第n次碰撞地面后即将回弹的高度。</p>
<p>输入示例<br>100 3</p>
<p>输出示例<br>250.00 12.50</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="type">double</span> h,all;</span><br><span class="line">    <span class="type">int</span> n,i;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%lf %d&quot;</span>, &amp;h, &amp;n);</span><br><span class="line">    all = h;</span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">2</span>; i &lt;= n; i++) &#123;</span><br><span class="line">        all += h;</span><br><span class="line">        h /= <span class="number">2</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%.2lf %.2lf\n&quot;</span>, all, h/<span class="number">2</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="第5关：素数判定-I"><a href="#第5关：素数判定-I" class="headerlink" title="第5关：素数判定 I"></a>第5关：素数判定 I</h2><p>问题描述<br>素数（Prime Number），又称为质数，它是不能被1和它本身以外的其它整数整除的正整数，按照这个定义，负数、0和1都不是素数。<br>请编写一段程序，对用户输入的非负整数n进行判定，若是素数则输出Yes，否则输出No。</p>
<p>输入<br>一个大于等于2的正整数n。</p>
<p>输出<br>若n为素数输出Yes，否则输出No。</p>
<p>输入示例<br>37</p>
<p>输出示例<br>Yes</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="type">int</span> n,i,flag=<span class="number">0</span>;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;n);</span><br><span class="line">    <span class="keyword">for</span>(i=<span class="number">2</span>; i&lt;n; i++)&#123;</span><br><span class="line">        <span class="keyword">if</span>(n%i==<span class="number">0</span>)&#123;</span><br><span class="line">            flag=<span class="number">1</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(flag==<span class="number">0</span>)&#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;Yes&quot;</span>);</span><br><span class="line">    &#125;<span class="keyword">else</span> </span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;No&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <tags>
        <tag>Educoder</tag>
      </tags>
  </entry>
  <entry>
    <title>头歌C语言实验 辅助练习4：选择结构II</title>
    <url>/2024/04/16/%E5%A4%B4%E6%AD%8CC%E8%AF%AD%E8%A8%80%E5%AE%9E%E9%AA%8C/%E5%A4%B4%E6%AD%8CC%E8%AF%AD%E8%A8%80%E5%AE%9E%E9%AA%8C-%E8%BE%85%E5%8A%A9%E7%BB%83%E4%B9%A04%EF%BC%9A%E9%80%89%E6%8B%A9%E7%BB%93%E6%9E%84II/</url>
    <content><![CDATA[<h2 id="第1关：计算邮资"><a href="#第1关：计算邮资" class="headerlink" title="第1关：计算邮资"></a>第1关：计算邮资</h2><p>问题描述<br>邮局通常会根据邮件的重量和用户是否选择加急计算邮资。以下是邮资的计算规则：</p>
<p>重量在1000克以内（含1000克），收基本费8元；<br>超过1000克的部分，每500克加收超重费4元，不足500克部分按500克计算；<br>如果用户选择加急，则多收5元。<br>聪明的你能够运用所学的知识帮忙计算邮资吗？<br>输入<br>输入只有一行，包含用空格分开的一个正整数和一个字符，分别表示重量（单位为克）和是否加急，小写字母y表示需要加急，n表示不需要加急。</p>
<p>输出<br>一个正整数，即计算出来的邮资。</p>
<p>输入示例<br>1200 y</p>
<p>输出示例<br>17</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;math.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span>&#123;</span><br><span class="line">    <span class="type">int</span> weight,money;</span><br><span class="line">    <span class="type">char</span> urgent;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d %c&quot;</span>,&amp;weight,&amp;urgent);</span><br><span class="line">    <span class="keyword">if</span>(weight&lt;=<span class="number">1000</span>)&#123;</span><br><span class="line">        money=<span class="number">8</span>;</span><br><span class="line">    &#125;<span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        weight-=<span class="number">1000</span>;</span><br><span class="line">        money=<span class="number">8</span>+<span class="built_in">ceil</span>(weight/<span class="number">500.0</span>)*<span class="number">4</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(urgent==<span class="string">&#x27;y&#x27;</span>)</span><br><span class="line">        money+=<span class="number">5</span>;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>,money);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="第2关：3、5和7-II"><a href="#第2关：3、5和7-II" class="headerlink" title="第2关：3、5和7 II"></a>第2关：3、5和7 II</h2><p>问题描述<br>给定一个正整数n，找出n能被3、5和7中的哪几个数整除。</p>
<p>输入<br>一个正整数n。</p>
<p>输出<br>按照从小到大的顺序依次输出在3、5和7中能整除n的数，即除数，两两之间用一个空格分开。<br>如果三个数都不能被n整除，则输出None。</p>
<p>输入示例<br>105</p>
<p>输出示例<br>3 5 7</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span>&#123;</span><br><span class="line">    <span class="type">int</span> n,flag=<span class="number">0</span>;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;n);</span><br><span class="line">    <span class="keyword">if</span>(n%<span class="number">3</span>==<span class="number">0</span>)</span><br><span class="line">        flag+=<span class="number">3</span>;</span><br><span class="line">    <span class="keyword">if</span>(n%<span class="number">5</span>==<span class="number">0</span>)</span><br><span class="line">        flag+=<span class="number">5</span>;</span><br><span class="line">    <span class="keyword">if</span>(n%<span class="number">7</span>==<span class="number">0</span>)</span><br><span class="line">        flag+=<span class="number">7</span>;</span><br><span class="line">    <span class="keyword">switch</span>(flag)&#123;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">15</span>:</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;3 5 7&quot;</span>);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">12</span>:</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;5 7&quot;</span>);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">10</span>:</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;3 7&quot;</span>);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">8</span>:</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;3 5&quot;</span>);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">7</span>:</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;7&quot;</span>);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">5</span>:</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;5&quot;</span>);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">3</span>:</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;3&quot;</span>);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">default</span>:</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;None&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="第3关：字符加密"><a href="#第3关：字符加密" class="headerlink" title="第3关：字符加密"></a>第3关：字符加密</h2><p>问题描述<br>Tom和Jack是密码学爱好者，他们在彼此发送消息聊天时经常使用一些特殊的语言。最近一段时间，他们在使用一种简单的暗语：将他们要讲的每句话中的英文字母按照一种特殊的规则替换成另外一个英文字母，这样，对于不知道替换规则的其他人，就看不懂他们说的是什么内容了。<br>他们使用的字符加密规则是：</p>
<p>对于非字母字符，保持不变；<br>对于a~w的小写字母，替换为其后的第三个小写字母，即把字母a替换成d；<br>小写字母x，y，z则相应地替换为a，b，c；<br>对于大写字母，使用和小写字母类似的替换方法。<br>聪明的你能帮助Tom和Jack编写一段程序，按照规则自动实现对字符的加密吗？<br>输入<br>一个英文字符，即需要进行加密的字符。</p>
<p>输出<br>加密后的字符。</p>
<p>输入示例<br>H</p>
<p>输出示例<br>K</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span>&#123;</span><br><span class="line">    <span class="type">char</span> input;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%c&quot;</span>,&amp;input);</span><br><span class="line">    <span class="keyword">if</span>((input&gt;=<span class="string">&#x27;a&#x27;</span>&amp;&amp;input&lt;=<span class="string">&#x27;w&#x27;</span>)||(input&gt;=<span class="string">&#x27;A&#x27;</span>&amp;&amp;input&lt;=<span class="string">&#x27;W&#x27;</span>))</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%c&quot;</span>,input+<span class="number">3</span>);</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span>(input&gt;=<span class="string">&#x27;x&#x27;</span>&amp;&amp;input&lt;=<span class="string">&#x27;z&#x27;</span>||input&gt;=<span class="string">&#x27;X&#x27;</span>&amp;&amp;input&lt;=<span class="string">&#x27;Z&#x27;</span>)</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%c&quot;</span>,input-(<span class="string">&#x27;x&#x27;</span>-<span class="string">&#x27;a&#x27;</span>));</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%c&quot;</span>,input);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="第4关：计算月份天数"><a href="#第4关：计算月份天数" class="headerlink" title="第4关：计算月份天数"></a>第4关：计算月份天数</h2><p>问题描述<br>平年一年共有365天，闰年一年共有366天，原因只在于2月份闰年和平年的天数不同，平年2月份只有28天，而闰年2月份有29天。<br>请使用switch多分支结构编写一段程序，根据用户输入的年份与月份，计算这一年的这个月有多少天。</p>
<p>输入<br>两个用空格分开的正整数，第一个表示年份，第二个表示月份。<br>输入数据保证月份一定在1~12的范围中。</p>
<p>输出<br>输出一个整数，即该年该月的天数。</p>
<p>输入示例<br>2021 3</p>
<p>输出示例<br>31</p>
<p>提示<br>可以使用switch和if的嵌套形式；<br>平年和闰年的区别仅仅体现在2月份的天数不同；<br>闰年和平年的判定依据可以参见“平年和闰年”。<br>大部分月份的天数都是相同的，因此可以合并这些分支。</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span>&#123;</span><br><span class="line">    <span class="type">int</span> y,m;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d %d&quot;</span>,&amp;y,&amp;m);</span><br><span class="line">    <span class="keyword">switch</span>(m)&#123;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">        <span class="keyword">case</span> <span class="number">3</span>:</span><br><span class="line">        <span class="keyword">case</span> <span class="number">5</span>:</span><br><span class="line">        <span class="keyword">case</span> <span class="number">7</span>:</span><br><span class="line">        <span class="keyword">case</span> <span class="number">8</span>:</span><br><span class="line">        <span class="keyword">case</span> <span class="number">10</span>:</span><br><span class="line">        <span class="keyword">case</span> <span class="number">12</span>:</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;31&quot;</span>);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">4</span>:</span><br><span class="line">        <span class="keyword">case</span> <span class="number">6</span>:</span><br><span class="line">        <span class="keyword">case</span> <span class="number">9</span>:</span><br><span class="line">        <span class="keyword">case</span> <span class="number">11</span>:</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;30&quot;</span>);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line">            <span class="keyword">if</span>(y%<span class="number">4</span>==<span class="number">0</span> &amp;&amp; y%<span class="number">100</span>!=<span class="number">0</span> || y%<span class="number">400</span>==<span class="number">0</span>)</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">&quot;29&quot;</span>);</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">&quot;28&quot;</span>);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">default</span>:</span><br><span class="line">            ;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="第5关：老梁买稻种-II"><a href="#第5关：老梁买稻种-II" class="headerlink" title="第5关：老梁买稻种 II"></a>第5关：老梁买稻种 II</h2><p>问题描述<br>聪明的你，能使用switch多分支选择结构编写程序为老梁计算买稻种的实际支付价格吗？<br>农民老梁去城里买稻种，稻种价格为3元&#x2F;斤，一次性买得越多，每斤价格的折扣（可以少支付的金额）率就越大，购买斤数（weight）和折扣率Cost关系如下：</p>
<p>如果weight≥500，折扣率Cost为0.15；<br>如果500&gt;weight≥300，折扣率Cost为0.10；<br>如果300&gt;weight≥100，折扣率Cost为0.075；<br>如果100&gt;weight≥50，折扣率Cost为0.05；<br>否则折扣率Cost为0。<br>这可难倒了没读过几年书的老梁。请你帮忙算一算，如果老梁需要买x斤稻种，折扣率是多少？老梁实际需要支付多少元呢？<br>输入<br>一个正整数，即老梁需要购买的稻种斤数。</p>
<p>输出<br>两个用空格分开的浮点数：第一个是折扣率，保留3位小数；第二个是老梁需要支付的钱数，以元为单位，保留2位小数。</p>
<p>输入示例<br>278</p>
<p>输出示例<br>0.075 771.45</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> PRICE 3</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span>&#123;</span><br><span class="line">    <span class="type">int</span> weight;</span><br><span class="line">    <span class="type">float</span> cost,money;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;weight);</span><br><span class="line">    <span class="keyword">switch</span> (weight/<span class="number">100</span>)</span><br><span class="line">    &#123;</span><br><span class="line">    <span class="keyword">case</span> <span class="number">5</span>:</span><br><span class="line">        cost=<span class="number">0.15</span>;</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> <span class="number">4</span>:</span><br><span class="line">    <span class="keyword">case</span> <span class="number">3</span>:</span><br><span class="line">        cost=<span class="number">0.10</span>;</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line">    <span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">        cost=<span class="number">0.075</span>;</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> <span class="number">0</span>:</span><br><span class="line">        <span class="keyword">if</span>(weight&gt;=<span class="number">50</span>&amp;&amp;weight&lt;<span class="number">100</span>)</span><br><span class="line">            cost=<span class="number">0.05</span>;</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">default</span>:</span><br><span class="line">        cost=<span class="number">0.15</span>;</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    money=(<span class="number">1</span>-cost)*PRICE*weight;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%.3f %.2f&quot;</span>,cost,money);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <tags>
        <tag>Educoder</tag>
      </tags>
  </entry>
  <entry>
    <title>头歌C语言实验 练习5：循环结构 I</title>
    <url>/2024/04/16/%E5%A4%B4%E6%AD%8CC%E8%AF%AD%E8%A8%80%E5%AE%9E%E9%AA%8C/%E5%A4%B4%E6%AD%8CC%E8%AF%AD%E8%A8%80%E5%AE%9E%E9%AA%8C-%E7%BB%83%E4%B9%A05%EF%BC%9A%E5%BE%AA%E7%8E%AF%E7%BB%93%E6%9E%84-I/</url>
    <content><![CDATA[<h2 id="第1关：自然数双向求和"><a href="#第1关：自然数双向求和" class="headerlink" title="第1关：自然数双向求和"></a>第1关：自然数双向求和</h2><p>问题描述<br>在教材第104页的示例程序中，其功能是计算1+2+3+……+n的和。为了有效减少循环次数，程序中使用了两个循环变量，对1~n的自然数进行了双向求和。但这个程序是存在bug的，只有当输入的n为偶数时，程序才能计算出正确的结果。聪明的你，能在不改变双向求和的算法基础上，对原来的程序做出适当调整，以使得无论n为奇数或偶数时，程序都能计算出正确的结果吗？</p>
<p>输入<br>一个正整数n。</p>
<p>输出<br>按照输出示例的格式输出1+2+3+……+n的和。</p>
<p>输入示例<br>100</p>
<p>输出示例<br>sum&#x3D;5050</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span>&#123;</span><br><span class="line">    <span class="type">int</span> i,j,n,sum=<span class="number">0</span>;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;n);</span><br><span class="line">    <span class="keyword">for</span>(i=<span class="number">1</span>,j=n;i&lt;j;i++,j--)&#123;</span><br><span class="line">            sum=sum+i+j;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(n%<span class="number">2</span>!=<span class="number">0</span>)</span><br><span class="line">        sum=sum+n/<span class="number">2</span>+<span class="number">1</span>;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;sum=%d&quot;</span>,sum);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="第2关：勤奋-or-懒散"><a href="#第2关：勤奋-or-懒散" class="headerlink" title="第2关：勤奋 or 懒散"></a>第2关：勤奋 or 懒散</h2><p>问题描述<br>勤奋or懒散，这是一个问题。<br>如果用1表示原地踏步，则1×1×……×1代表每天停步不前，经过n天后，结果仍然是1。<br>如果用1+0.1表示勤奋一点点，则1.1×1.1×……×1.1代表每天进步一点点，那么经过n天后，你将会获得多大的收获呢？<br>如果用1-0.1表示每天懒散一点点，则0.9×0.9×……×0.9代表每天退步一点点，那么n天以后，你又会变成什么样呢？<br>我们要做一个积极的人，每天进步一点点。</p>
<p>输入<br>一个正整数n，代表经过n天。</p>
<p>输出<br>输出包括两行，第一行输出1.1的n次方，第二行输出0.9的n次方，输出结果保留3位小数。<br>输出格式和内容参见输出示例，其中的标点符号都是中文标点符号。</p>
<p>提示<br>不要使用pow函数，使用循环计算累乘积。</p>
<p>输入示例<br>30</p>
<p>输出示例<br>每天勤奋一点点，30天后变成：17.449<br>每天懒散一点点，30天后变成：0.042</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">float</span> a=<span class="number">1.1</span>,b=<span class="number">0.9</span>,c=<span class="number">1</span>;</span><br><span class="line">    <span class="type">int</span> n,i;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;n);</span><br><span class="line">    <span class="keyword">for</span>(i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">        c*=a;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;每天勤奋一点点，%d天后变成：%.3f\n&quot;</span>,n,c);</span><br><span class="line">    c=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span>(i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">        c*=b;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;每天懒散一点点，%d天后变成：%.3f\n&quot;</span>,n,c);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="第3关：奇数偶数之和"><a href="#第3关：奇数偶数之和" class="headerlink" title="第3关：奇数偶数之和"></a>第3关：奇数偶数之和</h2><p>问题描述<br>计算从1开始到指定的整数n之间所有奇数之和以及偶数之和。</p>
<p>输入<br>一个正整数n。</p>
<p>输出<br>输出包括两行：<br>第一行按照“The sum of odd numbers is xxx”的格式输出所有奇数的和；<br>第二行按照“The sum of even numbers is xxx”的格式输出所有偶数的和。</p>
<p>输入示例<br>100</p>
<p>输出示例<br>The sum of odd numbers is 2500<br>The sum of even numbers is 2550</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> n,i,sum=<span class="number">0</span>,o=<span class="number">0</span>,e=<span class="number">0</span>;</span><br><span class="line">    <span class="type">int</span>* odd;</span><br><span class="line">    <span class="type">int</span>* even;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;n);</span><br><span class="line">    odd=(<span class="type">int</span>*)<span class="built_in">malloc</span>(n*<span class="keyword">sizeof</span>(<span class="type">int</span>));</span><br><span class="line">    even=(<span class="type">int</span>*)<span class="built_in">malloc</span>(n*<span class="keyword">sizeof</span>(<span class="type">int</span>));</span><br><span class="line">    <span class="keyword">for</span>(i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(i%<span class="number">2</span>!=<span class="number">0</span>)</span><br><span class="line">            odd[o++]=i;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            even[e++]=i;</span><br><span class="line">    &#125;</span><br><span class="line">        <span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;o;i++)&#123;</span><br><span class="line">        sum+=odd[i];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;The sum of odd numbers is %d\n&quot;</span>,sum);</span><br><span class="line">    <span class="keyword">for</span>(i=<span class="number">0</span>,sum=<span class="number">0</span>;i&lt;e;i++)&#123;</span><br><span class="line">        sum+=even[i];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;The sum of even numbers is %d\n&quot;</span>,sum);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="第4关：成绩统计-I"><a href="#第4关：成绩统计-I" class="headerlink" title="第4关：成绩统计 I"></a>第4关：成绩统计 I</h2><p>问题描述<br>张老师的班上共有n名学生。期末考试结束后，经过辛苦的阅卷，全班同学的考试成绩都出来了。张老师想要对全班同学的成绩进行统计，需要统计出全班同学的平均成绩以及不及格人数。但是张老师实在没有精神再连续工作下去了，聪明的你能够帮助张老师吗？</p>
<p>输入<br>输入包括两行：<br>第一行是一个正整数n，表示张老师班上的总人数。<br>第二行共包括n个浮点数，每个浮点数表示一位同学的期末考试成绩。</p>
<p>输出<br>输出共包括两行：<br>第一行输出全班同学的平均成绩，保留2位小数；<br>第二行输出不及格人数。<br>输出格式参照输出示例，注意其中的冒号是中文冒号。</p>
<p>输入示例<br>12<br>85.6 83.47 45.8 96.3 100 37.4 68.9 96.6 88 84.6 94.7 78.8</p>
<p>输出示例<br>平均成绩：80.01分<br>不及格人数：2人</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span>&#123;</span><br><span class="line">    <span class="type">int</span> n,i,j=<span class="number">0</span>;</span><br><span class="line">    <span class="type">float</span> avg;</span><br><span class="line">    <span class="type">float</span>* score;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;n);</span><br><span class="line">    score=(<span class="type">float</span>*)<span class="built_in">malloc</span>(n*<span class="keyword">sizeof</span>(<span class="type">float</span>));</span><br><span class="line">    <span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;n;i++)&#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%f&quot;</span>,&amp;score[i]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;n;i++)&#123;</span><br><span class="line">        avg+=score[i];</span><br><span class="line">        <span class="keyword">if</span>(score[i]&lt;<span class="number">60.0</span>)</span><br><span class="line">            j++;</span><br><span class="line">    &#125;</span><br><span class="line">    avg=avg/n;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;平均成绩：%.2f分\n不及格人数：%d人&quot;</span>,avg,j);</span><br><span class="line">    <span class="built_in">free</span>(score);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="第5关：打印温度转换表"><a href="#第5关：打印温度转换表" class="headerlink" title="第5关：打印温度转换表"></a>第5关：打印温度转换表</h2><p>问题描述<br>摄氏温度C和华氏温度F的转换公式为：<br>C&#x3D;<br>9<br>5</p>
<p> ×(F−32)<br>请使用循环编写一段程序将摄氏温度-华氏温度转换表从300摄氏度到0摄氏度 ( 每20度打印一行 ) 打印出来。</p>
<p>输入<br>无。</p>
<p>输出<br>第一行是标题行，标题的“摄氏温度”和“华氏温度”之间用一个制表符键（‘\t’）隔开。<br>其后的每一行输出对应的摄氏温度值和华氏温度值，摄氏温度和华氏温度均为单精度浮点数，中间用两个制表符键（‘\t’）分开。摄氏温度占6个字符宽度，保留1位小数，华氏温度占3个字符宽度，不保留小数。</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span>&#123;</span><br><span class="line">    <span class="type">float</span> F,C;</span><br><span class="line">    <span class="type">int</span> i;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;摄氏温度\t华氏温度\n&quot;</span>);</span><br><span class="line">    <span class="keyword">for</span>(i=<span class="number">300</span>;i&gt;=<span class="number">0</span>;i-=<span class="number">20</span>)&#123;</span><br><span class="line">        C=i;</span><br><span class="line">        F=(C*<span class="number">9.0</span>/<span class="number">5</span>)+<span class="number">32</span>;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%6.1f\t\t%3.0f\n&quot;</span>,C,F);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <tags>
        <tag>Educoder</tag>
      </tags>
  </entry>
  <entry>
    <title>头歌C语言实验 辅助练习3：基本选择结构</title>
    <url>/2024/04/16/%E5%A4%B4%E6%AD%8CC%E8%AF%AD%E8%A8%80%E5%AE%9E%E9%AA%8C/%E5%A4%B4%E6%AD%8CC%E8%AF%AD%E8%A8%80%E5%AE%9E%E9%AA%8C-%E8%BE%85%E5%8A%A9%E7%BB%83%E4%B9%A03%EF%BC%9A%E5%9F%BA%E6%9C%AC%E9%80%89%E6%8B%A9%E7%BB%93%E6%9E%84/</url>
    <content><![CDATA[<h2 id="第1关：判定奇偶性"><a href="#第1关：判定奇偶性" class="headerlink" title="第1关：判定奇偶性"></a>第1关：判定奇偶性</h2><p>问题描述<br>判定一个正整数n的奇偶性。</p>
<p>输入<br>一个正整数n。</p>
<p>输出<br>如果n是奇数，输出odd。<br>如果n是偶数，输出even。</p>
<p>输入示例<br>5</p>
<p>输出示例<br>odd</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span>&#123;</span><br><span class="line">    <span class="type">int</span> n;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;n);</span><br><span class="line">    <span class="keyword">if</span>(n%<span class="number">2</span>==<span class="number">0</span>)&#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;even&quot;</span>);</span><br><span class="line">    &#125;<span class="keyword">else</span> <span class="built_in">printf</span>(<span class="string">&quot;odd&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="第2关：正负判定"><a href="#第2关：正负判定" class="headerlink" title="第2关：正负判定"></a>第2关：正负判定</h2><p>问题描述<br>判定一个整数n的正负性。</p>
<p>输入<br>一个整数n。</p>
<p>输出<br>如果n为正数，输出positive。<br>如果n为0，输出zero。<br>如果n为负数，输出negative。</p>
<p>输入示例<br>1</p>
<p>输出示例<br>positive</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span>&#123;</span><br><span class="line">    <span class="type">int</span> n;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;n);</span><br><span class="line">    <span class="keyword">if</span>(n&gt;<span class="number">0</span>)</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;positive&quot;</span>);</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span>(n==<span class="number">0</span>)</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;zero&quot;</span>);</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;negative&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="第3关：分段函数求值"><a href="#第3关：分段函数求值" class="headerlink" title="第3关：分段函数求值"></a>第3关：分段函数求值</h2><p>设有如下所示的分段函数：</p>
<p><img src="https://r2.lm379.cn/2024/05/2be37982b1acdb6f587feb90a12686d2.png"></p>
<p>请编写程序，根据输入的实数x，计算并输出分段函数y的值。</p>
<p>输入<br>一个浮点数x，输入数据保证0≤x&lt;20。</p>
<p>输出<br>根据x计算出的y的值，结果保留3位小数。</p>
<p>输入示例<br>1</p>
<p>输出示例<br>1.500</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span>&#123;</span><br><span class="line">    <span class="type">double</span> x,y=<span class="number">0</span>;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%lf&quot;</span>,&amp;x);</span><br><span class="line">    <span class="keyword">if</span>(x&gt;=<span class="number">0</span>&amp;&amp;x&lt;<span class="number">5</span>)&#123;</span><br><span class="line">        y=-x+<span class="number">5.0</span>/<span class="number">2</span>;</span><br><span class="line">    &#125;<span class="keyword">else</span> <span class="keyword">if</span>(x&gt;=<span class="number">5</span>&amp;&amp;x&lt;<span class="number">10</span>)&#123;</span><br><span class="line">        y=<span class="number">2</span><span class="number">-3.0</span>/<span class="number">2</span>*<span class="built_in">pow</span>(x<span class="number">-3</span>,<span class="number">2</span>);</span><br><span class="line">    &#125;<span class="keyword">else</span> <span class="keyword">if</span>(x&gt;=<span class="number">10</span>&amp;&amp;x&lt;<span class="number">20</span>)&#123;</span><br><span class="line">        y=x/<span class="number">2</span><span class="number">-3.0</span>/<span class="number">2</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%.3lf&quot;</span>,y);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="第4关：平年和闰年"><a href="#第4关：平年和闰年" class="headerlink" title="第4关：平年和闰年"></a>第4关：平年和闰年</h2><p>问题描述<br>平年和闰年一年的总天数是不同的。<br>百度上介绍，判定公历闰年应遵循的一般规律为：四年一闰，百年不闰，四百年再闰。<br>一般来说，只要一年的公历年份能够满足下面两个条件当中的任意一个即可判断为闰年：</p>
<p>能被4整除并且不能被100整除的是闰年；<br>能被400整除也是闰年。<br>现在请你判断某年是否是闰年并回答这一年总共有多少天。<br>输入<br>一个正整数，表示公历年份。</p>
<p>输出<br>输出只有一行。首先输出Y或N表示这一年是否是闰年，然后输出这一年的总天数，中间用一个空格分开。</p>
<p>输入示例<br>2100</p>
<p>输出示例<br>N 365</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span>&#123;</span><br><span class="line">    <span class="type">int</span> year;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;year);</span><br><span class="line">    <span class="keyword">if</span>(year%<span class="number">4</span>==<span class="number">0</span>&amp;&amp;year%<span class="number">100</span>!=<span class="number">0</span>||year%<span class="number">400</span>==<span class="number">0</span>)</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;Y 366&quot;</span>);</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;N 365&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="第5关：3、5和7-I"><a href="#第5关：3、5和7-I" class="headerlink" title="第5关：3、5和7 I"></a>第5关：3、5和7 I</h2><p>问题描述<br>给定一个正整数n，统计n能被3、5和7中的几个数分别整除。</p>
<p>输入<br>一个正整数n。</p>
<p>输出<br>一个非负整数，表示在3、5和7中能分别整除n的数的个数。</p>
<p>输入示例<br>63</p>
<p>输出示例<br>2</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span>&#123;</span><br><span class="line">    <span class="type">int</span> n,i=<span class="number">0</span>;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;n);</span><br><span class="line">    <span class="keyword">if</span>(n%<span class="number">3</span>==<span class="number">0</span>)</span><br><span class="line">        i++;</span><br><span class="line">    <span class="keyword">if</span>(n%<span class="number">5</span>==<span class="number">0</span>)</span><br><span class="line">        i++;</span><br><span class="line">    <span class="keyword">if</span>(n%<span class="number">7</span>==<span class="number">0</span>)</span><br><span class="line">        i++;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>,i);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="第6关：求解一元二次方程-II"><a href="#第6关：求解一元二次方程-II" class="headerlink" title="第6关：求解一元二次方程 II"></a>第6关：求解一元二次方程 II</h2><p>问题描述<br>假设有形如：ax2+bx+c&#x3D;0的一元二次方程，其中a，b，c是任意实数且满足a≠0，请编写一段程序，根据用户输入的a，b，c的值，计算并输出一元二次方程的根。</p>
<p>输入<br>三个用空格分开的实数，分别表示一元二次方程中的三个系数。<br>输入数据保证满足条件a≠0。</p>
<p>输出<br>输出只有一行，即方程的根。<br>若方程有两个相同的实根，则输出：x1&#x3D;x2&#x3D;…；<br>若方程有两个不相同的实根，则输出：x1&#x3D;…;x2&#x3D;…，其中x1&gt;x2；<br>若方程没有实根，则输出：x1&#x3D;实部+虚部i;x2&#x3D;实部-虚部i，其中，实部为0时不能省略，并且必须保证x1的虚部为非负数。<br>所有实数部分要求精确到小数点后5位，数字、符号之间没有空格。</p>
<p>输入示例<br>1.0 2.0 8.0</p>
<p>输出示例<br>x1&#x3D;-1.00000+2.64575i;x2&#x3D;-1.00000-2.64575i</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;math.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;complex.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span>&#123;</span><br><span class="line">    <span class="type">float</span> a,b,c,x1,x2,delta,Z=<span class="number">0</span>;</span><br><span class="line">    <span class="type">float</span> <span class="type">complex</span> xi1,xi2;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%f %f %f&quot;</span>,&amp;a,&amp;b,&amp;c);</span><br><span class="line">    delta=b*b<span class="number">-4</span>*a*c;</span><br><span class="line">    <span class="keyword">if</span>(delta==<span class="number">0</span>)&#123;</span><br><span class="line">        x1=-b/(<span class="number">2</span>*a);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;x1=x2=%.5f&quot;</span>,x1);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span>(delta&gt;<span class="number">0</span>)&#123;</span><br><span class="line">        x1=-b/(<span class="number">2</span>*a)+<span class="built_in">fabs</span>(<span class="built_in">sqrt</span>(delta)/(<span class="number">2</span>*a));</span><br><span class="line">        x2=-b/(<span class="number">2</span>*a)-<span class="built_in">fabs</span>(<span class="built_in">sqrt</span>(delta)/(<span class="number">2</span>*a));</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;x1=%.5f;x2=%.5f&quot;</span>,x1,x2);</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        xi1=-b/(<span class="number">2</span>*a)+<span class="built_in">fabs</span>(<span class="built_in">sqrt</span>(-delta)/(<span class="number">2</span>*a))*I;</span><br><span class="line">        xi2=-b/(<span class="number">2</span>*a)-<span class="built_in">fabs</span>(<span class="built_in">sqrt</span>(-delta)/(<span class="number">2</span>*a))*I;</span><br><span class="line">        <span class="keyword">if</span>(!b)&#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;x1=%.5f+%.5fi;x2=%.5f-%.5fi&quot;</span>,Z,cimag(xi1),Z,-cimag(xi2));</span><br><span class="line">        &#125;<span class="keyword">else</span></span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;x1=%.5f+%.5fi;x2=%.5f-%.5fi&quot;</span>,creal(xi1),cimag(xi1),creal(xi2),-cimag(xi2));</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <tags>
        <tag>Educoder</tag>
      </tags>
  </entry>
  <entry>
    <title>头歌C语言实验 练习3：基本选择结构</title>
    <url>/2024/04/16/%E5%A4%B4%E6%AD%8CC%E8%AF%AD%E8%A8%80%E5%AE%9E%E9%AA%8C/%E5%A4%B4%E6%AD%8CC%E8%AF%AD%E8%A8%80%E5%AE%9E%E9%AA%8C-%E7%BB%83%E4%B9%A03%EF%BC%9A%E5%9F%BA%E6%9C%AC%E9%80%89%E6%8B%A9%E7%BB%93%E6%9E%84/</url>
    <content><![CDATA[<h2 id="第1关：求绝对值"><a href="#第1关：求绝对值" class="headerlink" title="第1关：求绝对值"></a>第1关：求绝对值</h2><p>问题描述<br>不使用数学函数中的绝对值函数，计算并输出一个实数的绝对值。</p>
<p>输入<br>一个单精度的浮点数。</p>
<p>输出<br>输出其绝对值，保留2位小数。</p>
<p>输入示例<br>-13.846</p>
<p>输出示例<br>13.85</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span>&#123;</span><br><span class="line">    <span class="type">float</span> a;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%f&quot;</span>,&amp;a);</span><br><span class="line">    <span class="keyword">if</span>(a&lt;<span class="number">0</span>)&#123;</span><br><span class="line">        a=-a;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%.2f&quot;</span>,a);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="第2关：整除"><a href="#第2关：整除" class="headerlink" title="第2关：整除"></a>第2关：整除</h2><p>问题描述<br>对于两个整数a和b，判断a是否能被b整除。</p>
<p>输入<br>两个用英文逗号分开的整数a和b。</p>
<p>输出<br>若能整除，则输出字符Y以及a整除b的商；<br>若不能整除，则输出字符N以及a整除b的商和余数。<br>输出的各项数据之间用一个空格分开。</p>
<p>输入示例<br>10,3</p>
<p>输出示例<br>N 3 1</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span>&#123;</span><br><span class="line">    <span class="type">int</span> a,b;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d,%d&quot;</span>,&amp;a,&amp;b);</span><br><span class="line">    <span class="keyword">if</span>(a%b==<span class="number">0</span>)&#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;Y %d&quot;</span>,a/b);</span><br><span class="line">    &#125;<span class="keyword">else</span> <span class="built_in">printf</span>(<span class="string">&quot;N %d %d&quot;</span>,a/b,a%b);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="第3关：体型检测"><a href="#第3关：体型检测" class="headerlink" title="第3关：体型检测"></a>第3关：体型检测</h2><p>问题描述<br>医务工作者经广泛的调查和统计分析，根据身高与体重因素给出了计算“体指数”的公式：</p>
<p>t &#x3D; w ÷ h2<br>其中，t为体指数，w为体重，单位是千克，h为身高，单位为米。 计算出体指数t后，就可以根据体指数进行体型检测：<br>当t&lt;18时，为低体重；<br>当18≤t&lt;25之间时，为正常体重；<br>当25≤t&lt;27之间时，为超重体重；<br>当t≥27时，为肥胖。<br>聪明的你能根据一个人的身高和体重对其体型进行检测吗？<br>输入<br>两个用空格分开的浮点数，第一个是身高h，第二个是体重w。</p>
<p>输出<br>输出包括两行：<br>第一行输出体指数t，保留2位小数；<br>第二行输出体型检测结果。</p>
<p>输入示例<br>1.65 55</p>
<p>输出示例<br>20.20<br>正常体重</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;math.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span>&#123;</span><br><span class="line">    <span class="type">float</span> w,h,t;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%f %f&quot;</span>,&amp;h,&amp;w);</span><br><span class="line">    t=w/(<span class="built_in">pow</span>(h,<span class="number">2</span>));</span><br><span class="line">    <span class="keyword">if</span>(t&lt;<span class="number">18</span>)&#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%.2f\n低体重&quot;</span>,t);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span>(t&gt;=<span class="number">18</span>&amp;&amp;t&lt;<span class="number">25</span>)&#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%.2f\n正常体重&quot;</span>,t);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span>(t&gt;=<span class="number">25</span>&amp;&amp;t&lt;<span class="number">27</span>)&#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%.2f\n超重体重&quot;</span>,t);</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%.2f\n肥胖&quot;</span>,t);</span><br><span class="line">    &#125;  </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="第4关：老梁买稻种-I"><a href="#第4关：老梁买稻种-I" class="headerlink" title="第4关：老梁买稻种 I"></a>第4关：老梁买稻种 I</h2><p>问题描述<br>农民老梁去城里买稻种，稻种价格为3元&#x2F;斤，一次性买得越多，每斤价格的折扣（可以少支付的金额）率就越大，购买斤数  （weight）和折扣率Cost关系如下：</p>
<p>如果weight≥500，折扣率Cost为0.15；<br>如果500&gt;weight≥300，折扣率Cost为0.10；<br>如果300&gt;weight≥100，折扣率Cost为0.075；<br>如果100&gt;weight≥50，折扣率Cost为0.05；<br>否则折扣率Cost为0。<br>这可难倒了没读过几年书的老梁。请你帮忙算一算，如果老梁需要买x斤稻种，折扣率是多少？老梁实际需要支付多少元呢？<br>输入<br>一个正整数，即老梁需要购买的稻种斤数。</p>
<p>输出<br>两个用空格分开的浮点数：第一个是折扣率，保留3位小数；第二个是老梁需要支付的钱数，以元为单位，保留2位小数。</p>
<p>输入示例<br>278</p>
<p>输出示例<br>0.075 771.45</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> PRICE 3</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span>&#123;</span><br><span class="line">    <span class="type">int</span> weight;</span><br><span class="line">    <span class="type">float</span> cost,money;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;weight);</span><br><span class="line">    <span class="keyword">if</span>(weight&gt;=<span class="number">500</span>)&#123;</span><br><span class="line">        cost=<span class="number">0.15f</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span>(weight&lt;<span class="number">500</span>&amp;&amp;weight&gt;=<span class="number">300</span>)&#123;</span><br><span class="line">        cost=<span class="number">0.1f</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span>(weight&lt;<span class="number">300</span>&amp;&amp;weight&gt;=<span class="number">100</span>)&#123;</span><br><span class="line">        cost=<span class="number">0.075f</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span>(weight&lt;<span class="number">100</span>&amp;&amp;weight&gt;=<span class="number">50</span>)&#123;</span><br><span class="line">        cost=<span class="number">0.05f</span>;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        cost=<span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    money=(<span class="number">1</span>-cost)*PRICE*weight;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%.3f %.2f&quot;</span>,cost,money);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="第5关：学习计划提醒"><a href="#第5关：学习计划提醒" class="headerlink" title="第5关：学习计划提醒"></a>第5关：学习计划提醒</h2><p>问题描述<br>小明是一个爱学习的小朋友，他为自己制定了一周中每天的学习计划，如下表所示：</p>
<table>
<thead>
<tr>
<th align="center">星期</th>
<th align="center">学习内容</th>
</tr>
</thead>
<tbody><tr>
<td align="center">一</td>
<td align="center">语文、数学</td>
</tr>
<tr>
<td align="center">二</td>
<td align="center">数学、英语</td>
</tr>
<tr>
<td align="center">三</td>
<td align="center">英语、语文</td>
</tr>
<tr>
<td align="center">四</td>
<td align="center">语文、数学</td>
</tr>
<tr>
<td align="center">五</td>
<td align="center">数学、英语</td>
</tr>
<tr>
<td align="center">六</td>
<td align="center">英语、语文</td>
</tr>
<tr>
<td align="center">日</td>
<td align="center">计算机、生物</td>
</tr>
</tbody></table>
<p>每天到了学习时间，小明就想知道按照自己的学习计划，今天应该学习什么功课。请你使用switch多分支选择结构帮小明编制一个学习计划提醒程序，当输入一个代表星期几的整数时，就按照学习计划输出当日的学习内容。<br>输入<br>一个正整数，对应表示星期一~星期日（7表示星期日）。</p>
<p>输出<br>如果输入的整数是1~7的整数，则输出对应于这一天的学习内容；否则输出“输入错误”（不输出两侧的双引号）。</p>
<p>输入示例<br>3</p>
<p>输出示例<br>英语、语文</p>
<p>提示<br>要求使用switch多分支选择结构编程实现。<br>有些天的学习内容是相同的，这意味着在switch语句中的某些分支是可以合并的。</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span>&#123;</span><br><span class="line">    <span class="type">int</span> days;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;days);</span><br><span class="line">    <span class="keyword">switch</span>(days) &#123;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;语文、数学&quot;</span>);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;数学、英语&quot;</span>);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">3</span>:</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;英语、语文&quot;</span>);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">4</span>:</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;语文、数学&quot;</span>);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">5</span>:</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;数学、英语&quot;</span>);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">6</span>:</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;英语、语文&quot;</span>);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">7</span>:</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;计算机、生物&quot;</span>);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">default</span>:</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;输入错误&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <tags>
        <tag>Educoder</tag>
      </tags>
  </entry>
  <entry>
    <title>头歌C语言实验 辅助练习：简单计算题</title>
    <url>/2024/04/16/%E5%A4%B4%E6%AD%8CC%E8%AF%AD%E8%A8%80%E5%AE%9E%E9%AA%8C/%E5%A4%B4%E6%AD%8CC%E8%AF%AD%E8%A8%80%E5%AE%9E%E9%AA%8C-%E8%BE%85%E5%8A%A9%E7%BB%83%E4%B9%A0%EF%BC%9A%E7%AE%80%E5%8D%95%E8%AE%A1%E7%AE%97%E9%A2%98/</url>
    <content><![CDATA[<h2 id="第1关：计算多项式的值"><a href="#第1关：计算多项式的值" class="headerlink" title="第1关：计算多项式的值"></a>第1关：计算多项式的值</h2><p>问题描述<br>对于多项式f(x) &#x3D; ax3 + bx2 + cx + d 和给定的a, b, c, d, x，计算f(x)的值。</p>
<p>输入<br>输入仅一行，包含5个实数，分别是x，及参数a、b、c、d的值，每个数都是绝对值不超过100的双精度浮点数。数与数之间以一个空格分开。</p>
<p>输出<br>输出一个实数，即f(x)的值，保留到小数点后7位。</p>
<p>输入示例<br>2.31 1.2 2 2 3</p>
<p>输出示例<br>33.0838692</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;math.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;complex.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span>&#123;</span><br><span class="line">    <span class="type">double</span> a,b,c,d,x,fx;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%lf %lf %lf %lf %lf&quot;</span>,&amp;x,&amp;a,&amp;b,&amp;c,&amp;d);</span><br><span class="line">    fx=a*<span class="built_in">pow</span>(x,<span class="number">3</span>)+b*<span class="built_in">pow</span>(x,<span class="number">2</span>)+c*x+d;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%.7lf&quot;</span>,fx);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="第2关：温度转换"><a href="#第2关：温度转换" class="headerlink" title="第2关：温度转换"></a>第2关：温度转换</h2><p>问题描述<br>华氏温度F和摄氏温度C之间可以按照下面的公式进行转换：<br>        C &#x3D; 5 × (F - 32) ÷ 9<br>请编写一个程序，将用户输入的华氏温度转换为摄氏温度后输出。</p>
<p>输入<br>一个实数F（F ≥ -459.67），表示华氏温度。</p>
<p>输出<br>一个实数C，表示对应的摄氏温度，保留到小数点后后5位。</p>
<p>输入示例<br>41</p>
<p>输出示例<br>5.00000</p>
<p>提示<br>请使用double类型，否则可能造成答案不正确。</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span>&#123;</span><br><span class="line">    <span class="type">double</span> C,F;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%lf&quot;</span>,&amp;F);</span><br><span class="line">    C=<span class="number">5</span>*(F<span class="number">-32</span>)/<span class="number">9</span>;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%.5lf&quot;</span>,C);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="第3关：苹果和虫子"><a href="#第3关：苹果和虫子" class="headerlink" title="第3关：苹果和虫子"></a>第3关：苹果和虫子</h2><p>问题描述<br>你买了一箱苹果，里面共有n个苹果。很不幸的是购买时箱子里混进了一条虫子。虫子每x小时能吃掉一个苹果，假设虫子在吃完一个苹果之前不会吃另一个，那么经过y小时你还剩多少个完整的苹果？</p>
<p>输入<br>输入仅一行，包括n，x和y（均为整数）。输入数据保证y≤n×x。</p>
<p>输出<br>一个整数，表示箱子里剩下的完整的苹果数量。</p>
<p>输入示例<br>10 4 9</p>
<p>输出示例<br>7</p>
<p>提示<br>要输出的是完整的苹果数量，即如果虫子已经开始吃这个苹果了，则这个苹果不应计算在内。</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;math.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span>&#123;</span><br><span class="line">    <span class="type">int</span> n,x,y;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d %d %d&quot;</span>,&amp;n,&amp;x,&amp;y);</span><br><span class="line">    <span class="keyword">if</span>(y%x==<span class="number">0</span>)</span><br><span class="line">        n=n-<span class="built_in">floor</span>(y/x);</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        n=n-<span class="built_in">floor</span>(y/x)<span class="number">-1</span>;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>,n);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="第4关：大象喝水"><a href="#第4关：大象喝水" class="headerlink" title="第4关：大象喝水"></a>第4关：大象喝水</h2><p>问题描述<br>有一只大象口渴了，根据大象的习惯要喝20升水才能解渴。现在只有一个深h厘米，底面半径为r厘米的小圆桶(h和r都是整数)。问大象至少要喝多少桶水才能解渴。<br>圆周率π取值3.14159。</p>
<p>输入<br>用空格分开的两个整数，分别表示小圆桶的深度h和底面半径r，单位都是厘米。</p>
<p>输出<br>一个整数，即大象为了解渴至少需要喝水的桶数。</p>
<p>输入示例<br>23 11</p>
<p>输出示例<br>3</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;math.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> PI 3.14159</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> NEED 20</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span>&#123;</span><br><span class="line">    <span class="type">int</span> h,r,num;</span><br><span class="line">    <span class="type">float</span> l;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d %d&quot;</span>,&amp;h,&amp;r);</span><br><span class="line">    l=PI*<span class="built_in">pow</span>(r,<span class="number">2</span>)*h/<span class="number">1000</span>;</span><br><span class="line">    <span class="keyword">if</span>(l&gt;NEED)</span><br><span class="line">        num=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">else</span> num=<span class="built_in">floor</span>(NEED/l)+<span class="number">1</span>;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>,num);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <tags>
        <tag>Educoder</tag>
      </tags>
  </entry>
  <entry>
    <title>头歌C语言实验 辅助练习：输入输出格式控制</title>
    <url>/2024/04/16/%E5%A4%B4%E6%AD%8CC%E8%AF%AD%E8%A8%80%E5%AE%9E%E9%AA%8C/%E5%A4%B4%E6%AD%8CC%E8%AF%AD%E8%A8%80%E5%AE%9E%E9%AA%8C-%E8%BE%85%E5%8A%A9%E7%BB%83%E4%B9%A0%EF%BC%9A%E8%BE%93%E5%85%A5%E8%BE%93%E5%87%BA%E6%A0%BC%E5%BC%8F%E6%8E%A7%E5%88%B6/</url>
    <content><![CDATA[<h2 id="第1关：保留3位小数"><a href="#第1关：保留3位小数" class="headerlink" title="第1关：保留3位小数"></a>第1关：保留3位小数</h2><p>问题描述<br>读入一个单精度浮点数，保留3位小数输出这个浮点数。</p>
<p>输入<br>只有一行，一个单精度浮点数。</p>
<p>输出<br>只有一行，输出读取的单精度浮点数，保留3位小数。</p>
<p>输入示例<br>12.123456</p>
<p>输出示例<br>12.123</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span>&#123;</span><br><span class="line">    <span class="type">float</span> num;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%f&quot;</span>,&amp;num);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%.3f&quot;</span>,num);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="第2关：保留12位小数"><a href="#第2关：保留12位小数" class="headerlink" title="第2关：保留12位小数"></a>第2关：保留12位小数</h2><p>问题描述<br>读入一个双精度浮点数，保留12位小数，输出这个浮点数。</p>
<p>输入<br>只有一行，一个双精度浮点数。</p>
<p>输出<br>只有一行，输出读取的双精度浮点数，保留12位小数。</p>
<p>输入示例<br>3.1415926535798932</p>
<p>输出示例<br>3.141592653580</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span>&#123;</span><br><span class="line">    <span class="type">double</span> num;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%lf&quot;</span>,&amp;num);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%.12lf&quot;</span>,num);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="第3关：空格分隔输出"><a href="#第3关：空格分隔输出" class="headerlink" title="第3关：空格分隔输出"></a>第3关：空格分隔输出</h2><p>问题描述<br>依次读入一个字符，一个整数，一个单精度浮点数和一个双精度浮点数，然后按顺序输出它们，并且两两之间用一个空格分开。<br>输出浮点数时保留3位小数。</p>
<p>输入<br>输入包括4行：<br>第1行是一个字符；<br>第2行是一个整数；<br>第3行是一个单精度浮点数；<br>第4行是一个双精度浮点数。</p>
<p>输出<br>输出只有1行，按输入顺序分别输出字符、整数、单精度浮点数和双精度浮点数，两两之间用一个空格分开，并且浮点数只保留3位小数。</p>
<p>输入示例<br>a<br>12<br>2.3<br>3.2</p>
<p>输出示例<br>a 12 2.300 3.200</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span>&#123;</span><br><span class="line">    <span class="type">char</span> c;</span><br><span class="line">    <span class="type">int</span> n;</span><br><span class="line">    <span class="type">float</span> f;</span><br><span class="line">    <span class="type">double</span> d;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%c&quot;</span>,&amp;c);</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;n);</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%f&quot;</span>,&amp;f);</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%lf&quot;</span>,&amp;d);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%c %d %.3f %.3lf&quot;</span>,c,n,f,d);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="第4关：浮点数的输出格式"><a href="#第4关：浮点数的输出格式" class="headerlink" title="第4关：浮点数的输出格式"></a>第4关：浮点数的输出格式</h2><p>问题描述<br>读入一个双精度浮点数，分别按照不同的输出格式输出这个浮点数。</p>
<p>输入<br>一个双精度浮点数。</p>
<p>输出<br>输出共包含4行：<br>第1行以十进制小数格式输出；<br>第2行以十进制小数格式输出，保留4位小数；<br>第3行以指数形式输出；<br>第4行以指数形式输出，保留2位小数。</p>
<p>输入示例<br>12.3456789</p>
<p>输出示例<br>12.345679<br>12.3457<br>1.234568e+001<br>1.23e+001</p>
<p>提示<br>在以指数形式输出浮点数时，示例和标准答案之间有差异，这是因为不同的编译环境的差异，大家可以忽略这个差异。</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span>&#123;</span><br><span class="line">    <span class="type">double</span> num;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%lf&quot;</span>,&amp;num);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%lf\n&quot;</span>,num);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%.4lf\n&quot;</span>,num);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%e\n&quot;</span>,num);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%.2e\n&quot;</span>,num);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="第5关：输出成绩表"><a href="#第5关：输出成绩表" class="headerlink" title="第5关：输出成绩表"></a>第5关：输出成绩表</h2><p>问题描述<br>现有李静、张扬、王琴三位同学在语文、数学、英语三门课的期末考试中的期末考试成绩（都是浮点数），请编写程序读入这位同学的三门课成绩后，按照指定的格式对齐输出包含这三位同学成绩的成绩表。</p>
<p>输入<br>输入包括3行，每行3个浮点数：<br>第1行的3个浮点数表示李静的三门课成绩；<br>第2行的3个浮点数表示张扬的三门课成绩；<br>第3行的3个浮点数表示王琴的三门课成绩；</p>
<p>输出<br>输出的成绩表由3行构成。<br>第1行是李静的成绩，第2行是张扬的成绩，第3行是王琴的成绩。<br>每一行中首先输出姓名，然后依次输出语文、数学、英语的成绩，其中每个成绩占用8个字符的宽度，保留1位小数，并且按照右对齐的格式输出。</p>
<p>输入示例<br>95.36 98 92.5<br>87.65 88.98 94.34<br>75.64 83.28 91.57</p>
<p>输出示例<br>李静    95.4    98.0    92.5<br>张扬    87.7    89.0    94.3<br>王琴    75.6    83.3    91.6</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span>&#123;</span><br><span class="line">    <span class="type">double</span> chinese[<span class="number">3</span>],math[<span class="number">3</span>],english[<span class="number">3</span>];</span><br><span class="line">    <span class="type">char</span> name[<span class="number">3</span>][<span class="number">10</span>]=&#123;<span class="string">&quot;李静&quot;</span>,<span class="string">&quot;张扬&quot;</span>,<span class="string">&quot;王琴&quot;</span>&#125;;</span><br><span class="line">    <span class="type">int</span> i;</span><br><span class="line">    <span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;<span class="number">3</span>;i++)&#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%lf %lf %lf&quot;</span>,&amp;chinese[i],&amp;math[i],&amp;english[i]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;<span class="number">3</span>;i++)&#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%s%8.1lf%8.1lf%8.1lf\n&quot;</span>,name[i],chinese[i],math[i],english[i]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="第6关：打印字符"><a href="#第6关：打印字符" class="headerlink" title="第6关：打印字符"></a>第6关：打印字符</h2><p>问题描述<br>输入一个正整数表示的ASCII码，输出对应的字符。</p>
<p>输入<br>一个不超过255的正整数，即字符的ASCII码，保证存在对应的可见字符。</p>
<p>输出<br>该ASCII码对应的字符。</p>
<p>输入示例<br>65</p>
<p>输出示例<br>A</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span>&#123;</span><br><span class="line">    <span class="type">int</span> a;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;a);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%c&quot;</span>,(<span class="type">char</span>)a);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <tags>
        <tag>Educoder</tag>
      </tags>
  </entry>
  <entry>
    <title>头歌C语言实验 练习2：顺序结构</title>
    <url>/2024/04/16/%E5%A4%B4%E6%AD%8CC%E8%AF%AD%E8%A8%80%E5%AE%9E%E9%AA%8C/%E5%A4%B4%E6%AD%8CC%E8%AF%AD%E8%A8%80%E5%AE%9E%E9%AA%8C-%E7%BB%83%E4%B9%A02%EF%BC%9A%E9%A1%BA%E5%BA%8F%E7%BB%93%E6%9E%84/</url>
    <content><![CDATA[<h2 id="第1关：鸡兔同笼问题"><a href="#第1关：鸡兔同笼问题" class="headerlink" title="第1关：鸡兔同笼问题"></a>第1关：鸡兔同笼问题</h2><p>问题描述<br>现有一笼子，里面有鸡和兔子若干只，数一数，共有头a个，腿b条，聪明的你能否编写一段程序让计算机自动计算出笼子里到底有多少只鸡多少只兔呢？</p>
<p>输入<br>两个由空格分开的正整数，分别表示笼子中头的数量a和脚的数量b。</p>
<p>输出<br>输出用空格分开的两个整数，分别表示笼中鸡的数量和兔的数量。</p>
<p>输入示例<br>5 16</p>
<p>输出示例<br>2 3</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span>&#123;</span><br><span class="line">    <span class="type">int</span> a,b,chicken,rabbit,t;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d %d&quot;</span>,&amp;a,&amp;b);</span><br><span class="line">    chicken=(<span class="number">4</span>*a-b)/<span class="number">2</span>;</span><br><span class="line">    rabbit=a-chicken;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d %d&quot;</span>,chicken,rabbit);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="第2关：求解一元二次方程的根-I"><a href="#第2关：求解一元二次方程的根-I" class="headerlink" title="第2关：求解一元二次方程的根 I"></a>第2关：求解一元二次方程的根 I</h2><p>问题描述<br>假设有形如：ax2+bx+c&#x3D;0的一元二次方程，其中a，b，c是任意实数且满足a≠0并且b2-4ac≥0,请编写一段程序，根据用户输入的a，b，c的值，计算并输出一元二次方程的两个实根。</p>
<p>输入<br>三个用空格分开的实数，分别表示一元二次方程中的三个系数，并且一定满足a≠0并且b2-4ac≥0。</p>
<p>输出<br>在两行中分别输出一元二次方程的两个实根，输出结果保留2位小数。<br>注意输出顺序：第一行输出加法运算的根，第二行输出减法运算的根。</p>
<p>输入示例<br>2.3 6.4 -3</p>
<p>输出示例<br>x1&#x3D;0.41<br>x2&#x3D;-3.19</p>
<p>提示<br>实数使用float类型即可，否则有可能造成结果不正确。</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;math.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span>&#123;</span><br><span class="line">    <span class="type">float</span> a,b,c,x1,x2;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%f %f %f&quot;</span>,&amp;a,&amp;b,&amp;c);</span><br><span class="line">    x1=(-b+<span class="built_in">sqrt</span>(<span class="built_in">pow</span>(b,<span class="number">2</span>)<span class="number">-4</span>*a*c))/(<span class="number">2</span>*a);</span><br><span class="line">    x2=(-b-<span class="built_in">sqrt</span>(<span class="built_in">pow</span>(b,<span class="number">2</span>)<span class="number">-4</span>*a*c))/(<span class="number">2</span>*a);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;x1=%.2f\nx2=%.2f&quot;</span>,x1,x2);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="第3关：超市收银机"><a href="#第3关：超市收银机" class="headerlink" title="第3关：超市收银机"></a>第3关：超市收银机</h2><p>问题描述<br>假设在一家水果超市中，只出售苹果和香蕉两种水果，其中苹果4.2元&#x2F;kg，香蕉3.5元&#x2F;kg。请为该水果超市编写一个简单的收银程序：当输入顾客要购买的苹果和香蕉的重量后，计算并输出应付金额，并且在输入顾客的实际付款后，输出应该找补的金额。</p>
<p>输入<br>输入数据包括两行。<br>第一行是用空格分开的两个实数，分别表示顾客要购买的苹果和香蕉的重量，单位为公斤；<br>第二行是一个实数，表示顾客的实际付款金额，单位为元。</p>
<p>输出<br>输出包括两行：<br>第一行输出计算出的应付金额，单位为元，保留2位小数；<br>第二行输出应该找补顾客的金额，单位为元，保留2位小数。</p>
<p>输入示例<br>2.3 4.4<br>30</p>
<p>输出示例<br>应付金额：25.06元<br>找补金额：4.94元</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> apple 4.2</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> banana 3.5</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span>&#123;</span><br><span class="line">    <span class="type">float</span> a,b,price,money;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%f %f&quot;</span>,&amp;a,&amp;b);</span><br><span class="line">    price=a*apple+b*banana;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;应付金额：%.2f元\n&quot;</span>,price);</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%f&quot;</span>,&amp;money);</span><br><span class="line">    money=money-price;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;找补金额：%.2f元\n&quot;</span>,money);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <tags>
        <tag>Educoder</tag>
      </tags>
  </entry>
  <entry>
    <title>头歌C语言实验 练习1：赋值与表达式</title>
    <url>/2024/04/16/%E5%A4%B4%E6%AD%8CC%E8%AF%AD%E8%A8%80%E5%AE%9E%E9%AA%8C/%E5%A4%B4%E6%AD%8CC%E8%AF%AD%E8%A8%80%E5%AE%9E%E9%AA%8C-%E7%BB%83%E4%B9%A01%EF%BC%9A%E8%B5%8B%E5%80%BC%E4%B8%8E%E8%A1%A8%E8%BE%BE%E5%BC%8F/</url>
    <content><![CDATA[<h2 id="第1关：开始编程啦"><a href="#第1关：开始编程啦" class="headerlink" title="第1关：开始编程啦"></a>第1关：开始编程啦</h2><p>问题描述<br>第一个程序，请首先向我们伟大的祖国问好。</p>
<p>输入<br>无</p>
<p>输出<br>你好，中国！<br>注意：输出内容中，标点符号（，和！）都是中文的。</p>
<p>输入示例<br>无</p>
<p>输出示例<br>你好，中国！</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span>&#123;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;你好，中国！&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="第2关：矩形的面积与周长"><a href="#第2关：矩形的面积与周长" class="headerlink" title="第2关：矩形的面积与周长"></a>第2关：矩形的面积与周长</h2><p>问题描述<br>指定矩形的长和宽，计算并输入矩形的面积与周长。</p>
<p>输入<br>两个用空格分开的整数，分别表示矩形的长和宽。</p>
<p>输出<br>输出包括两行：<br>第一行输出矩形的面积，第二行输出矩形的周长。</p>
<p>输入示例<br>3 4</p>
<p>输出示例<br>面积是12<br>周长是14</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span>&#123;</span><br><span class="line">    <span class="type">int</span> a,b,c,s;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d %d&quot;</span>,&amp;a,&amp;b);</span><br><span class="line">    c=(a + b) * <span class="number">2</span>;</span><br><span class="line">    s=a * b;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;面积是%d\n周长是%d\n&quot;</span>,s,c);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="第3关：逆序数求和"><a href="#第3关：逆序数求和" class="headerlink" title="第3关：逆序数求和"></a>第3关：逆序数求和</h2><p>问题描述<br>输入一个三位正整数，计算并输出这个整数和其逆序数之和。<br>逆序数是指把原三位数的个位、十位、百位逆序后构成的三位数，例如三位数256的逆序数是652。</p>
<p>输入<br>一个三位的正整数。</p>
<p>输出<br>一个等式，按照“原数+逆序数&#x3D;和”的格式输出。</p>
<p>输入示例<br>256</p>
<p>输出示例<br>256+652&#x3D;908</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;math.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span>&#123;</span><br><span class="line">	<span class="type">int</span> n=<span class="number">0</span>,mun=<span class="number">0</span>,i,num,t;</span><br><span class="line">    <span class="type">int</span> arr[<span class="number">3</span>];</span><br><span class="line">	<span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;num);</span><br><span class="line">	t=num;</span><br><span class="line">    <span class="keyword">while</span>(t&gt;<span class="number">0</span>)&#123;</span><br><span class="line">		t=t/<span class="number">10</span>;</span><br><span class="line">		n++;</span><br><span class="line">	&#125;</span><br><span class="line">    t=num;</span><br><span class="line">	<span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;n;i++)&#123;</span><br><span class="line">		arr[i]=t%<span class="number">10</span>;</span><br><span class="line">		t=t/<span class="number">10</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;n;i++)&#123;</span><br><span class="line">		mun=arr[i]*<span class="built_in">pow</span>(<span class="number">10</span>,n-i<span class="number">-1</span>)+mun;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;%d+%d=%d&quot;</span>,num,mun,num+mun);</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125; </span><br></pre></td></tr></table></figure>
]]></content>
      <tags>
        <tag>Educoder</tag>
      </tags>
  </entry>
  <entry>
    <title>Redmi Note 12 Turbo 官方rom下载索引(中国大陆版)</title>
    <url>/2024/02/06/Redmi%20Note%2012%20Turbo%20%E5%AE%98%E6%96%B9rom%E4%B8%8B%E8%BD%BD%E7%B4%A2%E5%BC%95(%E4%B8%AD%E5%9B%BD%E5%A4%A7%E9%99%86%E7%89%88)/</url>
    <content><![CDATA[<h1 id="Redmi-Note-12-Turbo-MIUI-HyperOS官方rom下载索引"><a href="#Redmi-Note-12-Turbo-MIUI-HyperOS官方rom下载索引" class="headerlink" title="Redmi Note 12 Turbo MIUI&#x2F;HyperOS官方rom下载索引"></a>Redmi Note 12 Turbo MIUI&#x2F;HyperOS官方rom下载索引</h1><h3 id="MIUI-中国大陆版"><a href="#MIUI-中国大陆版" class="headerlink" title="MIUI 中国大陆版"></a>MIUI 中国大陆版</h3><table>
<thead>
<tr>
<th align="center">版本号</th>
<th align="center">卡刷包</th>
<th align="center">线刷包</th>
</tr>
</thead>
<tbody><tr>
<td align="center">V14.0.1.0</td>
<td align="center"><a href="https://cloud.lm379.cn/d/%E5%88%B7%E6%9C%BA/Redmi%20Note%2012%20Turbo/MIUI/%E5%8D%A1%E5%88%B7/miui_MARBLE_V14.0.1.0.TMRCNXM_ebfaece465_13.0.zip">卡刷包链接</a></td>
<td align="center"><a href="https://cloud.lm379.cn/d/%E5%88%B7%E6%9C%BA/Redmi%20Note%2012%20Turbo/MIUI/%E7%BA%BF%E5%88%B7/marble_images_V14.0.1.0.TMRCNXM_20230210.0000.00_13.0_cn_5ae6ea7d44.tgz">线刷包链接</a></td>
</tr>
<tr>
<td align="center">V14.0.2.0</td>
<td align="center"><a href="https://cloud.lm379.cn/d/%E5%88%B7%E6%9C%BA/Redmi%20Note%2012%20Turbo/MIUI/%E5%8D%A1%E5%88%B7/miui_MARBLE_V14.0.2.0.TMRCNXM_e73d3a18f4_13.0.zip">卡刷包链接</a></td>
<td align="center">未发布</td>
</tr>
<tr>
<td align="center">V14.0.3.0</td>
<td align="center"><a href="https://cloud.lm379.cn/d/%E5%88%B7%E6%9C%BA/Redmi%20Note%2012%20Turbo/MIUI/%E5%8D%A1%E5%88%B7/miui_MARBLE_V14.0.3.0.TMRCNXM_aefede495f_13.0.zip">卡刷包链接</a></td>
<td align="center">未发布</td>
</tr>
<tr>
<td align="center">V14.0.5.0</td>
<td align="center"><a href="https://cloud.lm379.cn/d/%E5%88%B7%E6%9C%BA/Redmi%20Note%2012%20Turbo/MIUI/%E5%8D%A1%E5%88%B7/miui_MARBLE_V14.0.5.0.TMRCNXM_3b3a24f2d5_13.0.zip">卡刷包链接</a></td>
<td align="center"><a href="https://cloud.lm379.cn/d/%E5%88%B7%E6%9C%BA/Redmi%20Note%2012%20Turbo/MIUI/%E7%BA%BF%E5%88%B7/marble_images_V14.0.5.0.TMRCNXM_20230317.0000.00_13.0_cn_327768a357.tgz">线刷包链接</a></td>
</tr>
<tr>
<td align="center">V14.0.10.0</td>
<td align="center"><a href="https://cloud.lm379.cn/d/%E5%88%B7%E6%9C%BA/Redmi%20Note%2012%20Turbo/MIUI/%E5%8D%A1%E5%88%B7/miui_MARBLE_V14.0.10.0.TMRCNXM_ccd8dc167f_13.0.zip">卡刷包链接</a></td>
<td align="center"><a href="https://cloud.lm379.cn/d/%E5%88%B7%E6%9C%BA/Redmi%20Note%2012%20Turbo/MIUI/%E7%BA%BF%E5%88%B7/marble_images_V14.0.10.0.TMRCNXM_20230327.0000.00_13.0_cn_41b8ae632f.tgz">线刷包链接</a></td>
</tr>
<tr>
<td align="center">V14.0.12.0</td>
<td align="center"><a href="https://cloud.lm379.cn/d/%E5%88%B7%E6%9C%BA/Redmi%20Note%2012%20Turbo/MIUI/%E5%8D%A1%E5%88%B7/miui_MARBLE_V14.0.12.0.TMRCNXM_39c5137e9d_13.0.zip">卡刷包链接</a></td>
<td align="center"><a href="https://cloud.lm379.cn/d/%E5%88%B7%E6%9C%BA/Redmi%20Note%2012%20Turbo/MIUI/%E7%BA%BF%E5%88%B7/marble_images_V14.0.12.0.TMRCNXM_20230403.0000.00_13.0_cn_b46ffdfa96.tgz">线刷包链接</a></td>
</tr>
<tr>
<td align="center">V14.0.14.0</td>
<td align="center"><a href="https://cloud.lm379.cn/d/%E5%88%B7%E6%9C%BA/Redmi%20Note%2012%20Turbo/MIUI/%E5%8D%A1%E5%88%B7/miui_MARBLE_V14.0.14.0.TMRCNXM_68c05d74a9_13.0.zip">卡刷包链接</a></td>
<td align="center">未发布</td>
</tr>
<tr>
<td align="center">V14.0.16.0</td>
<td align="center"><a href="https://cloud.lm379.cn/d/%E5%88%B7%E6%9C%BA/Redmi%20Note%2012%20Turbo/MIUI/%E5%8D%A1%E5%88%B7/miui_MARBLE_V14.0.16.0.TMRCNXM_af816f3572_13.0.zip">卡刷包链接</a></td>
<td align="center"><a href="https://cloud.lm379.cn/d/%E5%88%B7%E6%9C%BA/Redmi%20Note%2012%20Turbo/MIUI/%E7%BA%BF%E5%88%B7/marble_images_V14.0.16.0.TMRCNXM_20230415.0000.00_13.0_cn_faf9729cf3.tgz">线刷包链接</a></td>
</tr>
<tr>
<td align="center">V14.0.18.0</td>
<td align="center"><a href="https://cloud.lm379.cn/d/%E5%88%B7%E6%9C%BA/Redmi%20Note%2012%20Turbo/MIUI/%E5%8D%A1%E5%88%B7/miui_MARBLE_V14.0.18.0.TMRCNXM_b17f48d8a1_13.0.zip">卡刷包链接</a></td>
<td align="center">未发布</td>
</tr>
<tr>
<td align="center">V14.0.19.0</td>
<td align="center"><a href="https://cloud.lm379.cn/d/%E5%88%B7%E6%9C%BA/Redmi%20Note%2012%20Turbo/MIUI/%E5%8D%A1%E5%88%B7/miui_MARBLE_V14.0.19.0.TMRCNXM_cdffc8d82e_13.0.zip">卡刷包链接</a></td>
<td align="center"><a href="https://cloud.lm379.cn/d/%E5%88%B7%E6%9C%BA/Redmi%20Note%2012%20Turbo/MIUI/%E7%BA%BF%E5%88%B7/marble_images_V14.0.19.0.TMRCNXM_20230426.0000.00_13.0_cn_5fc5692104.tgz">线刷包链接</a></td>
</tr>
<tr>
<td align="center">V14.0.20.0</td>
<td align="center"><a href="https://cloud.lm379.cn/d/%E5%88%B7%E6%9C%BA/Redmi%20Note%2012%20Turbo/MIUI/%E5%8D%A1%E5%88%B7/miui_MARBLE_V14.0.20.0.TMRCNXM_f50020a18f_13.0.zip">卡刷包链接</a></td>
<td align="center"><a href="https://cloud.lm379.cn/d/%E5%88%B7%E6%9C%BA/Redmi%20Note%2012%20Turbo/MIUI/%E7%BA%BF%E5%88%B7/marble_images_V14.0.20.0.TMRCNXM_20230602.0000.00_13.0_cn_aef3806799.tgz">线刷包链接</a></td>
</tr>
<tr>
<td align="center">V14.0.21.0</td>
<td align="center"><a href="https://cloud.lm379.cn/d/%E5%88%B7%E6%9C%BA/Redmi%20Note%2012%20Turbo/MIUI/%E5%8D%A1%E5%88%B7/miui_MARBLE_V14.0.21.0.TMRCNXM_8aa9899d82_13.0.zip">卡刷包链接</a></td>
<td align="center">未发布</td>
</tr>
<tr>
<td align="center">V14.0.21.1</td>
<td align="center"><a href="https://cloud.lm379.cn/d/%E5%88%B7%E6%9C%BA/Redmi%20Note%2012%20Turbo/MIUI/%E5%8D%A1%E5%88%B7/miui_MARBLE_V14.0.21.1.TMRCNXM_4edd461d96_13.0.zip">卡刷包链接</a></td>
<td align="center">未发布</td>
</tr>
<tr>
<td align="center">V14.0.22.0</td>
<td align="center"><a href="https://cloud.lm379.cn/d/%E5%88%B7%E6%9C%BA/Redmi%20Note%2012%20Turbo/MIUI/%E5%8D%A1%E5%88%B7/miui_MARBLE_V14.0.22.0.TMRCNXM_40e1f05e0d_13.0.zip">卡刷包链接</a></td>
<td align="center">未发布</td>
</tr>
<tr>
<td align="center">V14.0.23.0</td>
<td align="center"><a href="https://cloud.lm379.cn/d/%E5%88%B7%E6%9C%BA/Redmi%20Note%2012%20Turbo/MIUI/%E5%8D%A1%E5%88%B7/miui_MARBLE_V14.0.23.0.TMRCNXM_749010fa11_13.0.zip">卡刷包链接</a></td>
<td align="center"><a href="https://cloud.lm379.cn/d/%E5%88%B7%E6%9C%BA/Redmi%20Note%2012%20Turbo/MIUI/%E7%BA%BF%E5%88%B7/marble_images_V14.0.23.0.TMRCNXM_20230726.0000.00_13.0_cn_05ddac9d57.tgz">线刷包链接</a></td>
</tr>
<tr>
<td align="center">V14.0.25.0</td>
<td align="center"><a href="https://cloud.lm379.cn/d/%E5%88%B7%E6%9C%BA/Redmi%20Note%2012%20Turbo/MIUI/%E5%8D%A1%E5%88%B7/miui_MARBLE_V14.0.25.0.TMRCNXM_9189e7c3a9_13.0.zip">卡刷包链接</a></td>
<td align="center">未发布</td>
</tr>
<tr>
<td align="center">V14.0.27.0</td>
<td align="center"><a href="https://cloud.lm379.cn/d/%E5%88%B7%E6%9C%BA/Redmi%20Note%2012%20Turbo/MIUI/%E5%8D%A1%E5%88%B7/miui_MARBLE_V14.0.27.0.TMRCNXM_07a1238ff9_13.0.zip">卡刷包链接</a></td>
<td align="center"><a href="https://cloud.lm379.cn/d/%E5%88%B7%E6%9C%BA/Redmi%20Note%2012%20Turbo/MIUI/%E7%BA%BF%E5%88%B7/marble_images_V14.0.27.0.TMRCNXM_20231220.0000.00_13.0_cn_20c17bd222.tgz">线刷包链接</a></td>
</tr>
</tbody></table>
<h3 id="Hyper-OS-中国大陆版"><a href="#Hyper-OS-中国大陆版" class="headerlink" title="Hyper OS 中国大陆版"></a>Hyper OS 中国大陆版</h3><table>
<thead>
<tr>
<th align="center">版本号</th>
<th align="center">卡刷包</th>
<th align="center">线刷包</th>
</tr>
</thead>
<tbody><tr>
<td align="center">OS1.0.2.0</td>
<td align="center"><a href="https://cloud.lm379.cn/d/%E5%88%B7%E6%9C%BA/Redmi%20Note%2012%20Turbo/Hyper%20OS/miui_MARBLE_OS1.0.2.0.UMRCNXM_65288a855a_14.0.zip">卡刷包链接</a></td>
<td align="center"><a href="https://cloud.lm379.cn/d/%E5%88%B7%E6%9C%BA/Redmi%20Note%2012%20Turbo/Hyper%20OS/marble_images_OS1.0.2.0.UMRCNXM_20240126.0000.00_14.0_cn_fd6f86767e.tgz">线刷包链接</a></td>
</tr>
</tbody></table>
]]></content>
      <tags>
        <tag>Redmi Note12 Turbo</tag>
      </tags>
  </entry>
  <entry>
    <title>Redmi Note 12 Turbo 官方rom下载索引_Global</title>
    <url>/2024/02/06/Redmi%20Note%2012%20Turbo%20%E5%AE%98%E6%96%B9rom%E4%B8%8B%E8%BD%BD%E7%B4%A2%E5%BC%95(Global)/</url>
    <content><![CDATA[<p>MIUI其他区域正在上传中，后续一起更新</p>
<h1 id="Redmi-Note-12-Turbo-MIUI-HyperOS官方更新包下载索引"><a href="#Redmi-Note-12-Turbo-MIUI-HyperOS官方更新包下载索引" class="headerlink" title="Redmi Note 12 Turbo MIUI&#x2F;HyperOS官方更新包下载索引"></a>Redmi Note 12 Turbo MIUI&#x2F;HyperOS官方更新包下载索引</h1><h2 id="中国台湾版"><a href="#中国台湾版" class="headerlink" title="中国台湾版"></a>中国台湾版</h2><h3 id="MIUI-中国台湾版"><a href="#MIUI-中国台湾版" class="headerlink" title="MIUI 中国台湾版"></a>MIUI 中国台湾版</h3><table>
<thead>
<tr>
<th align="center">版本号</th>
<th align="center">卡刷包</th>
<th align="center">线刷包</th>
</tr>
</thead>
<tbody><tr>
<td align="center">V14.0.3.0</td>
<td align="center"><a href="https://cloud.lm379.cn/d/%E5%88%B7%E6%9C%BA/Redmi%20Note%2012%20Turbo/MIUI_Global/TW/miui_MARBLETWGlobal_V14.0.3.0.TMRTWXM_da8a372e29_13.0.zip">卡刷包链接</a></td>
<td align="center"><a href="https://cloud.lm379.cn/d/%E5%88%B7%E6%9C%BA/Redmi%20Note%2012%20Turbo/MIUI_Global/TW/marble_tw_global_images_V14.0.3.0.TMRTWXM_20230426.0000.00_13.0_tw_7306ff0684.tgz">线刷包链接</a></td>
</tr>
<tr>
<td align="center">V14.0.4.0</td>
<td align="center"><a href="https://cloud.lm379.cn/d/%E5%88%B7%E6%9C%BA/Redmi%20Note%2012%20Turbo/MIUI_Global/TW/miui_MARBLETWGlobal_V14.0.4.0.TMRTWXM_a176a73239_13.0.zip">卡刷包链接</a></td>
<td align="center"><a href="https://cloud.lm379.cn/d/%E5%88%B7%E6%9C%BA/Redmi%20Note%2012%20Turbo/MIUI_Global/TW/marble_tw_global_images_V14.0.4.0.TMRTWXM_20230625.0000.00_13.0_tw_59dd1242c3.tgz">线刷包链接</a></td>
</tr>
<tr>
<td align="center">V14.0.5.0</td>
<td align="center"><a href="https://cloud.lm379.cn/d/%E5%88%B7%E6%9C%BA/Redmi%20Note%2012%20Turbo/MIUI_Global/TW/miui_MARBLETWGlobal_V14.0.5.0.TMRTWXM_b055d4584c_13.0.zip">卡刷包链接</a></td>
<td align="center"><a href="https://cloud.lm379.cn/d/%E5%88%B7%E6%9C%BA/Redmi%20Note%2012%20Turbo/MIUI_Global/TW/marble_tw_global_images_V14.0.5.0.TMRTWXM_20230807.0000.00_13.0_tw_aca570c05d.tgz">线刷包链接</a></td>
</tr>
<tr>
<td align="center">V14.0.6.0</td>
<td align="center"><a href="https://cloud.lm379.cn/d/%E5%88%B7%E6%9C%BA/Redmi%20Note%2012%20Turbo/MIUI_Global/TW/miui_MARBLETWGlobal_V14.0.6.0.TMRTWXM_ac81b0b2e8_13.0.zip">卡刷包链接</a></td>
<td align="center"><a href="https://cloud.lm379.cn/d/%E5%88%B7%E6%9C%BA/Redmi%20Note%2012%20Turbo/MIUI_Global/TW/marble_tw_global_images_V14.0.6.0.TMRTWXM_20231023.0000.00_13.0_tw_54434e8e88.tgz">线刷包链接</a></td>
</tr>
</tbody></table>
<h3 id="HyperOS-中国台湾版"><a href="#HyperOS-中国台湾版" class="headerlink" title="HyperOS 中国台湾版"></a>HyperOS 中国台湾版</h3><table>
<thead>
<tr>
<th align="center">版本号</th>
<th align="center">卡刷包</th>
<th align="center">线刷包</th>
</tr>
</thead>
<tbody><tr>
<td align="center">OS1.0.1.0</td>
<td align="center"><a href="https://cloud.lm379.cn/d/%E5%88%B7%E6%9C%BA/Redmi%20Note%2012%20Turbo/Hyper%20OS_Global//TW/miui_MARBLETWGlobal_OS1.0.1.0.UMRTWXM_045d3d43d6_14.0.zip">卡刷包链接</a></td>
<td align="center"><a href="https://cloud.lm379.cn/d/%E5%88%B7%E6%9C%BA/Redmi%20Note%2012%20Turbo/Hyper%20OS_Global//TW/marble_tw_global_images_OS1.0.1.0.UMRTWXM_20231229.0000.00_14.0_tw_44893e29fb.tgz">线刷包链接</a></td>
</tr>
</tbody></table>
<h2 id="欧洲EEA版"><a href="#欧洲EEA版" class="headerlink" title="欧洲EEA版"></a>欧洲EEA版</h2><h3 id="MIUI-欧洲EEA版"><a href="#MIUI-欧洲EEA版" class="headerlink" title="MIUI 欧洲EEA版"></a>MIUI 欧洲EEA版</h3><table>
<thead>
<tr>
<th align="center">版本号</th>
<th align="center">卡刷包</th>
<th align="center">线刷包</th>
</tr>
</thead>
<tbody><tr>
<td align="center">V14.0.2.0</td>
<td align="center"><a href="https://cloud.lm379.cn/d/%E5%88%B7%E6%9C%BA/Redmi%20Note%2012%20Turbo/MIUI_Global/EEA/miui_MARBLEEEAGlobal_V14.0.2.0.TMREUXM_2b6bb342a9_13.0.zip">卡刷包链接</a></td>
<td align="center"><a href="https://cloud.lm379.cn/d/%E5%88%B7%E6%9C%BA/Redmi%20Note%2012%20Turbo/MIUI_Global/EEA/marble_eea_global_images_V14.0.2.0.TMREUXM_20230320.0000.00_13.0_eea_4bd5593a1d.tgz">线刷包链接</a></td>
</tr>
<tr>
<td align="center">V14.0.6.0</td>
<td align="center"><a href="https://cloud.lm379.cn/d/%E5%88%B7%E6%9C%BA/Redmi%20Note%2012%20Turbo/MIUI_Global/EEA/miui_MARBLEEEAGlobal_V14.0.6.0.TMREUXM_a36d076463_13.0.zip">卡刷包链接</a></td>
<td align="center"><a href="https://cloud.lm379.cn/d/%E5%88%B7%E6%9C%BA/Redmi%20Note%2012%20Turbo/MIUI_Global/EEA/marble_eea_global_images_V14.0.6.0.TMREUXM_20230426.0000.00_13.0_eea_009c6f1846.tgz">线刷包链接</a></td>
</tr>
<tr>
<td align="center">V14.0.7.0</td>
<td align="center"><a href="https://cloud.lm379.cn/d/%E5%88%B7%E6%9C%BA/Redmi%20Note%2012%20Turbo/MIUI_Global/EEA/miui_MARBLEEEAGlobal_V14.0.7.0.TMREUXM_6b217a90d3_13.0.zip">卡刷包链接</a></td>
<td align="center"><a href="https://cloud.lm379.cn/d/%E5%88%B7%E6%9C%BA/Redmi%20Note%2012%20Turbo/MIUI_Global/EEA/marble_eea_global_images_V14.0.7.0.TMREUXM_20230612.0000.00_13.0_eea_a42bc04cc6.tgz">线刷包链接</a></td>
</tr>
<tr>
<td align="center">V14.0.8.0</td>
<td align="center"><a href="https://cloud.lm379.cn/d/%E5%88%B7%E6%9C%BA/Redmi%20Note%2012%20Turbo/MIUI_Global/EEA/miui_MARBLEEEAGlobal_V14.0.8.0.TMREUXM_f31f7dd9c2_13.0.zip">卡刷包链接</a></td>
<td align="center"><a href="https://cloud.lm379.cn/d/%E5%88%B7%E6%9C%BA/Redmi%20Note%2012%20Turbo/MIUI_Global/EEA/marble_eea_global_images_V14.0.8.0.TMREUXM_20230807.0000.00_13.0_eea_899cf28e4c.tgz">线刷包链接</a></td>
</tr>
<tr>
<td align="center">V14.0.9.0</td>
<td align="center"><a href="https://cloud.lm379.cn/d/%E5%88%B7%E6%9C%BA/Redmi%20Note%2012%20Turbo/MIUI_Global/EEA/miui_MARBLEEEAGlobal_V14.0.9.0.TMREUXM_5b40c23287_13.0.zip">卡刷包链接</a></td>
<td align="center"><a href="https://cloud.lm379.cn/d/%E5%88%B7%E6%9C%BA/Redmi%20Note%2012%20Turbo/MIUI_Global/EEA/marble_eea_global_images_V14.0.9.0.TMREUXM_20230913.0000.00_13.0_eea_13de22f1f8.tgz">线刷包链接</a></td>
</tr>
</tbody></table>
<h3 id="HyperOS-欧洲EEA版"><a href="#HyperOS-欧洲EEA版" class="headerlink" title="HyperOS 欧洲EEA版"></a>HyperOS 欧洲EEA版</h3><table>
<thead>
<tr>
<th align="center">版本号</th>
<th align="center">卡刷包</th>
<th align="center">线刷包</th>
</tr>
</thead>
<tbody><tr>
<td align="center">OS1.0.4.0</td>
<td align="center"><a href="https://cloud.lm379.cn/d/%E5%88%B7%E6%9C%BA/Redmi%20Note%2012%20Turbo/Hyper%20OS_Global//EEA/miui_MARBLEEEAGlobal_OS1.0.4.0.UMREUXM_733c4626e6_14.0.zip">卡刷包链接</a></td>
<td align="center"><a href="https://cloud.lm379.cn/d/%E5%88%B7%E6%9C%BA/Redmi%20Note%2012%20Turbo/Hyper%20OS_Global//EEA/marble_eea_global_images_OS1.0.4.0.UMREUXM_20231129.0000.00_14.0_eea_734682258a.tgz">线刷包链接</a></td>
</tr>
</tbody></table>
<h2 id="国际版"><a href="#国际版" class="headerlink" title="国际版"></a>国际版</h2><h3 id="MIUI-国际版"><a href="#MIUI-国际版" class="headerlink" title="MIUI 国际版"></a>MIUI 国际版</h3><table>
<thead>
<tr>
<th align="center">版本号</th>
<th align="center">卡刷包</th>
<th align="center">线刷包</th>
</tr>
</thead>
<tbody><tr>
<td align="center">V14.0.1.0</td>
<td align="center"><a href="https://cloud.lm379.cn/d/%E5%88%B7%E6%9C%BA/Redmi%20Note%2012%20Turbo/MIUI_Global/Global/miui_MARBLEGlobal_V14.0.1.0.TMRMIXM_2805f4cc27_13.0.zip">卡刷包链接</a></td>
<td align="center"><a href="https://cloud.lm379.cn/d/%E5%88%B7%E6%9C%BA/Redmi%20Note%2012%20Turbo/MIUI_Global/Global/marble_global_images_V14.0.1.0.TMRMIXM_20230320.0000.00_13.0_global_62017b58b6.tgz">线刷包链接</a></td>
</tr>
<tr>
<td align="center">V14.0.4.0</td>
<td align="center"><a href="https://cloud.lm379.cn/d/%E5%88%B7%E6%9C%BA/Redmi%20Note%2012%20Turbo/MIUI_Global/Global/miui_MARBLEGlobal_V14.0.4.0.TMRMIXM_77ed0ac710_13.0.zip">卡刷包链接</a></td>
<td align="center"><a href="https://cloud.lm379.cn/d/%E5%88%B7%E6%9C%BA/Redmi%20Note%2012%20Turbo/MIUI_Global/Global/marble_global_images_V14.0.4.0.TMRMIXM_20230426.0000.00_13.0_global_67a069bce1.tgz">线刷包链接</a></td>
</tr>
<tr>
<td align="center">V14.0.5.0</td>
<td align="center"><a href="https://cloud.lm379.cn/d/%E5%88%B7%E6%9C%BA/Redmi%20Note%2012%20Turbo/MIUI_Global/Global/miui_MARBLEGlobal_V14.0.5.0.TMRMIXM_7c12a4a6ea_13.0.zip">卡刷包链接</a></td>
<td align="center"><a href="https://cloud.lm379.cn/d/%E5%88%B7%E6%9C%BA/Redmi%20Note%2012%20Turbo/MIUI_Global/Global/marble_global_images_V14.0.5.0.TMRMIXM_20230612.0000.00_13.0_global_4d9b8ad5ac.tgz">线刷包链接</a></td>
</tr>
<tr>
<td align="center">V14.0.6.0</td>
<td align="center"><a href="https://cloud.lm379.cn/d/%E5%88%B7%E6%9C%BA/Redmi%20Note%2012%20Turbo/MIUI_Global/Global/miui_MARBLEGlobal_V14.0.6.0.TMRMIXM_d2bfe5501e_13.0.zip">卡刷包链接</a></td>
<td align="center"><a href="https://cloud.lm379.cn/d/%E5%88%B7%E6%9C%BA/Redmi%20Note%2012%20Turbo/MIUI_Global/Global/marble_global_images_V14.0.6.0.TMRMIXM_20230731.0000.00_13.0_global_db4d11a4e6.tgz">线刷包链接</a></td>
</tr>
<tr>
<td align="center">V14.0.7.0</td>
<td align="center"><a href="https://cloud.lm379.cn/d/%E5%88%B7%E6%9C%BA/Redmi%20Note%2012%20Turbo/MIUI_Global/Global/miui_MARBLEGlobal_V14.0.7.0.TMRMIXM_5bc2ea5402_13.0.zip">卡刷包链接</a></td>
<td align="center"><a href="https://cloud.lm379.cn/d/%E5%88%B7%E6%9C%BA/Redmi%20Note%2012%20Turbo/MIUI_Global/Global/marble_global_images_V14.0.7.0.TMRMIXM_20230913.0000.00_13.0_global_d09ba697e9.tgz">线刷包链接</a></td>
</tr>
<tr>
<td align="center">V14.0.8.0</td>
<td align="center"><a href="https://cloud.lm379.cn/d/%E5%88%B7%E6%9C%BA/Redmi%20Note%2012%20Turbo/MIUI_Global/Global/miui_MARBLEGlobal_V14.0.8.0.TMRMIXM_2b4b4a3113_13.0.zip">卡刷包链接</a></td>
<td align="center"><a href="https://cloud.lm379.cn/d/%E5%88%B7%E6%9C%BA/Redmi%20Note%2012%20Turbo/MIUI_Global/Global/marble_global_images_V14.0.8.0.TMRMIXM_20231211.0000.00_13.0_global_ca5202487f.tgz">线刷包链接</a></td>
</tr>
</tbody></table>
<h3 id="HyperOS-国际版"><a href="#HyperOS-国际版" class="headerlink" title="HyperOS 国际版"></a>HyperOS 国际版</h3><table>
<thead>
<tr>
<th align="center">版本号</th>
<th align="center">卡刷包</th>
<th align="center">线刷包</th>
</tr>
</thead>
<tbody><tr>
<td align="center">OS1.0.2.0</td>
<td align="center"><a href="https://cloud.lm379.cn/d/%E5%88%B7%E6%9C%BA/Redmi%20Note%2012%20Turbo/Hyper%20OS_Global//Global/miui_MARBLEGlobal_OS1.0.2.0.UMRMIXM_5e39b4ed67_14.0.zip">卡刷包链接</a></td>
<td align="center"><a href="https://cloud.lm379.cn/d/%E5%88%B7%E6%9C%BA/Redmi%20Note%2012%20Turbo/Hyper%20OS_Global//Global/marble_global_images_OS1.0.2.0.UMRMIXM_20231218.0000.00_14.0_global_17a885eed3.tgz">线刷包链接</a></td>
</tr>
</tbody></table>
<h2 id="印度尼西亚版"><a href="#印度尼西亚版" class="headerlink" title="印度尼西亚版"></a>印度尼西亚版</h2><h3 id="MIUI-印度尼西亚版"><a href="#MIUI-印度尼西亚版" class="headerlink" title="MIUI 印度尼西亚版"></a>MIUI 印度尼西亚版</h3><table>
<thead>
<tr>
<th align="center">版本号</th>
<th align="center">卡刷包</th>
<th align="center">线刷包</th>
</tr>
</thead>
<tbody><tr>
<td align="center">V14.0.1.0</td>
<td align="center"><a href="https://cloud.lm379.cn/d/%E5%88%B7%E6%9C%BA/Redmi%20Note%2012%20Turbo/MIUI_Global/ID/miui_MARBLEIDGlobal_V14.0.1.0.TMRIDXM_0a7dd9f145_13.0.zip">卡刷包链接</a></td>
<td align="center"><a href="https://cloud.lm379.cn/d/%E5%88%B7%E6%9C%BA/Redmi%20Note%2012%20Turbo/MIUI_Global/ID/marble_id_global_images_V14.0.1.0.TMRIDXM_20230407.0000.00_13.0_id_eff2299e61.tgz">线刷包链接</a></td>
</tr>
<tr>
<td align="center">V14.0.3.0</td>
<td align="center"><a href="https://cloud.lm379.cn/d/%E5%88%B7%E6%9C%BA/Redmi%20Note%2012%20Turbo/MIUI_Global/ID/miui_MARBLEIDGlobal_V14.0.3.0.TMRIDXM_c23161eaf9_13.0.zip">卡刷包链接</a></td>
<td align="center"><a href="https://cloud.lm379.cn/d/%E5%88%B7%E6%9C%BA/Redmi%20Note%2012%20Turbo/MIUI_Global/ID/marble_id_global_images_V14.0.3.0.TMRIDXM_20230426.0000.00_13.0_id_034a3f2891.tgz">线刷包链接</a></td>
</tr>
<tr>
<td align="center">V14.0.4.0</td>
<td align="center"><a href="https://cloud.lm379.cn/d/%E5%88%B7%E6%9C%BA/Redmi%20Note%2012%20Turbo/MIUI_Global/ID/miui_MARBLEIDGlobal_V14.0.4.0.TMRIDXM_5c0be28fc6_13.0.zip">卡刷包链接</a></td>
<td align="center"><a href="https://cloud.lm379.cn/d/%E5%88%B7%E6%9C%BA/Redmi%20Note%2012%20Turbo/MIUI_Global/ID/marble_id_global_images_V14.0.4.0.TMRIDXM_20230625.0000.00_13.0_id_45a593d51e.tgz">线刷包链接</a></td>
</tr>
<tr>
<td align="center">V14.0.5.0</td>
<td align="center"><a href="https://cloud.lm379.cn/d/%E5%88%B7%E6%9C%BA/Redmi%20Note%2012%20Turbo/MIUI_Global/ID/miui_MARBLEIDGlobal_V14.0.5.0.TMRIDXM_014ff8fbee_13.0.zip">卡刷包链接</a></td>
<td align="center"><a href="https://cloud.lm379.cn/d/%E5%88%B7%E6%9C%BA/Redmi%20Note%2012%20Turbo/MIUI_Global/ID/marble_id_global_images_V14.0.5.0.TMRIDXM_20230815.0000.00_13.0_id_9825a6cabc.tgz">线刷包链接</a></td>
</tr>
<tr>
<td align="center">V14.0.6.0</td>
<td align="center"><a href="https://cloud.lm379.cn/d/%E5%88%B7%E6%9C%BA/Redmi%20Note%2012%20Turbo/MIUI_Global/ID/miui_MARBLEIDGlobal_V14.0.6.0.TMRIDXM_40c780f6ed_13.0.zip">卡刷包链接</a></td>
<td align="center"><a href="https://cloud.lm379.cn/d/%E5%88%B7%E6%9C%BA/Redmi%20Note%2012%20Turbo/MIUI_Global/ID/marble_id_global_images_V14.0.6.0.TMRIDXM_20231023.0000.00_13.0_id_afac8d9c2b.tgz">线刷包链接</a></td>
</tr>
</tbody></table>
<h3 id="HyperOS-印度尼西亚版"><a href="#HyperOS-印度尼西亚版" class="headerlink" title="HyperOS 印度尼西亚版"></a>HyperOS 印度尼西亚版</h3><table>
<thead>
<tr>
<th align="center">版本号</th>
<th align="center">卡刷包</th>
<th align="center">线刷包</th>
</tr>
</thead>
<tbody><tr>
<td align="center">OS1.0.1.0</td>
<td align="center"><a href="https://cloud.lm379.cn/d/%E5%88%B7%E6%9C%BA/Redmi%20Note%2012%20Turbo/Hyper%20OS_Global//ID/miui_MARBLEIDGlobal_OS1.0.1.0.UMRIDXM_d299b1d7e8_14.0.zip">卡刷包链接</a></td>
<td align="center"><a href="https://cloud.lm379.cn/d/%E5%88%B7%E6%9C%BA/Redmi%20Note%2012%20Turbo/Hyper%20OS_Global//ID/marble_id_global_images_OS1.0.1.0.UMRIDXM_20231229.0000.00_14.0_id_104d3faa44.tgz">线刷包链接</a></td>
</tr>
</tbody></table>
<h2 id="印度版"><a href="#印度版" class="headerlink" title="印度版"></a>印度版</h2><h3 id="MIUI-印度版"><a href="#MIUI-印度版" class="headerlink" title="MIUI 印度版"></a>MIUI 印度版</h3><table>
<thead>
<tr>
<th align="center">版本号</th>
<th align="center">卡刷包</th>
<th align="center">线刷包</th>
</tr>
</thead>
<tbody><tr>
<td align="center">V14.0.1.0</td>
<td align="center"><a href="https://cloud.lm379.cn/d/%E5%88%B7%E6%9C%BA/Redmi%20Note%2012%20Turbo/MIUI_Global/IN/miui_MARBLEINGlobal_V14.0.1.0.TMRINXM_67f467e04d_13.0.zip">卡刷包链接</a></td>
<td align="center"><a href="https://cloud.lm379.cn/d/%E5%88%B7%E6%9C%BA/Redmi%20Note%2012%20Turbo/MIUI_Global/IN/marble_in_global_images_V14.0.1.0.TMRINXM_20230326.0000.00_13.0_in_25b7d60aa0.tgz">线刷包链接</a></td>
</tr>
<tr>
<td align="center">V14.0.3.0</td>
<td align="center"><a href="https://cloud.lm379.cn/d/%E5%88%B7%E6%9C%BA/Redmi%20Note%2012%20Turbo/MIUI_Global/IN/miui_MARBLEINGlobal_V14.0.3.0.TMRINXM_2f826d56fd_13.0.zip">卡刷包链接</a></td>
<td align="center"><a href="https://cloud.lm379.cn/d/%E5%88%B7%E6%9C%BA/Redmi%20Note%2012%20Turbo/MIUI_Global/IN/marble_in_global_images_V14.0.3.0.TMRINXM_20230426.0000.00_13.0_in_a2c7524285.tgz">线刷包链接</a></td>
</tr>
<tr>
<td align="center">V14.0.4.0</td>
<td align="center"><a href="https://cloud.lm379.cn/d/%E5%88%B7%E6%9C%BA/Redmi%20Note%2012%20Turbo/MIUI_Global/IN/miui_MARBLEINGlobal_V14.0.4.0.TMRINXM_f28e3f3c33_13.0.zip">卡刷包链接</a></td>
<td align="center"><a href="https://cloud.lm379.cn/d/%E5%88%B7%E6%9C%BA/Redmi%20Note%2012%20Turbo/MIUI_Global/IN/marble_in_global_images_V14.0.4.0.TMRINXM_20230612.0000.00_13.0_in_ee279c1821.tgz">线刷包链接</a></td>
</tr>
<tr>
<td align="center">V14.0.5.0</td>
<td align="center"><a href="https://cloud.lm379.cn/d/%E5%88%B7%E6%9C%BA/Redmi%20Note%2012%20Turbo/MIUI_Global/IN/miui_MARBLEINGlobal_V14.0.5.0.TMRINXM_496883a5c6_13.0.zip">卡刷包链接</a></td>
<td align="center"><a href="https://cloud.lm379.cn/d/%E5%88%B7%E6%9C%BA/Redmi%20Note%2012%20Turbo/MIUI_Global/IN/marble_in_global_images_V14.0.5.0.TMRINXM_20230814.0000.00_13.0_in_986d89c6bf.tgz">线刷包链接</a></td>
</tr>
<tr>
<td align="center">V14.0.6.0</td>
<td align="center"><a href="https://cloud.lm379.cn/d/%E5%88%B7%E6%9C%BA/Redmi%20Note%2012%20Turbo/MIUI_Global/IN/miui_MARBLEINGlobal_V14.0.6.0.TMRINXM_7cce6c6ef5_13.0.zip">卡刷包链接</a></td>
<td align="center"><a href="https://cloud.lm379.cn/d/%E5%88%B7%E6%9C%BA/Redmi%20Note%2012%20Turbo/MIUI_Global/IN/marble_in_global_images_V14.0.6.0.TMRINXM_20231016.0000.00_13.0_in_947b41090d.tgz">线刷包链接</a></td>
</tr>
</tbody></table>
<h3 id="HyperOS-印度版"><a href="#HyperOS-印度版" class="headerlink" title="HyperOS 印度版"></a>HyperOS 印度版</h3><table>
<thead>
<tr>
<th align="center">版本号</th>
<th align="center">卡刷包</th>
<th align="center">线刷包</th>
</tr>
</thead>
<tbody><tr>
<td align="center">OS1.0.3.0</td>
<td align="center"><a href="https://cloud.lm379.cn/d/%E5%88%B7%E6%9C%BA/Redmi%20Note%2012%20Turbo/Hyper%20OS_Global//IN/miui_MARBLEINGlobal_OS1.0.3.0.UMRINXM_7f6cfe7e7e_14.0.zip">卡刷包链接</a></td>
<td align="center">未发布</td>
</tr>
<tr>
<td align="center">OS1.0.5.0</td>
<td align="center"><a href="https://cloud.lm379.cn/d/%E5%88%B7%E6%9C%BA/Redmi%20Note%2012%20Turbo/Hyper%20OS_Global//IN/miui_MARBLEINGlobal_OS1.0.5.0.UMRINXM_497e50893d_14.0.zip">卡刷包链接</a></td>
<td align="center"><a href="https://cloud.lm379.cn/d/%E5%88%B7%E6%9C%BA/Redmi%20Note%2012%20Turbo/Hyper%20OS_Global//IN/marble_in_global_images_OS1.0.5.0.UMRINXM_20240109.0000.00_14.0_in_1a79c90276.tgz">线刷包链接</a></td>
</tr>
</tbody></table>
<h2 id="俄罗斯版"><a href="#俄罗斯版" class="headerlink" title="俄罗斯版"></a>俄罗斯版</h2><h3 id="MIUI-俄罗斯版"><a href="#MIUI-俄罗斯版" class="headerlink" title="MIUI 俄罗斯版"></a>MIUI 俄罗斯版</h3><table>
<thead>
<tr>
<th align="center">版本号</th>
<th align="center">卡刷包</th>
<th align="center">线刷包</th>
</tr>
</thead>
<tbody><tr>
<td align="center">V14.0.1.0</td>
<td align="center"><a href="https://cloud.lm379.cn/d/%E5%88%B7%E6%9C%BA/Redmi%20Note%2012%20Turbo/MIUI_Global/RU/miui_MARBLERUGlobal_V14.0.1.0.TMRRUXM_4d4c6eeda5_13.0.zip">卡刷包链接</a></td>
<td align="center"><a href="https://cloud.lm379.cn/d/%E5%88%B7%E6%9C%BA/Redmi%20Note%2012%20Turbo/MIUI_Global/RU/marble_ru_global_images_V14.0.1.0.TMRRUXM_20230320.0000.00_13.0_ru_81dc764322.tgz">线刷包链接</a></td>
</tr>
<tr>
<td align="center">V14.0.3.0</td>
<td align="center"><a href="https://cloud.lm379.cn/d/%E5%88%B7%E6%9C%BA/Redmi%20Note%2012%20Turbo/MIUI_Global/RU/miui_MARBLERUGlobal_V14.0.3.0.TMRRUXM_9d5ecb01e8_13.0.zip">卡刷包链接</a></td>
<td align="center"><a href="https://cloud.lm379.cn/d/%E5%88%B7%E6%9C%BA/Redmi%20Note%2012%20Turbo/MIUI_Global/RU/marble_ru_global_images_V14.0.3.0.TMRRUXM_20230426.0000.00_13.0_ru_3c7990688a.tgz">线刷包链接</a></td>
</tr>
<tr>
<td align="center">V14.0.4.0</td>
<td align="center"><a href="https://cloud.lm379.cn/d/%E5%88%B7%E6%9C%BA/Redmi%20Note%2012%20Turbo/MIUI_Global/RU/miui_MARBLERUGlobal_V14.0.4.0.TMRRUXM_45fb023228_13.0.zip">卡刷包链接</a></td>
<td align="center"><a href="https://cloud.lm379.cn/d/%E5%88%B7%E6%9C%BA/Redmi%20Note%2012%20Turbo/MIUI_Global/RU/marble_ru_global_images_V14.0.4.0.TMRRUXM_20230618.0000.00_13.0_ru_5a817e0bfe.tgz">线刷包链接</a></td>
</tr>
<tr>
<td align="center">V14.0.5.0</td>
<td align="center"><a href="https://cloud.lm379.cn/d/%E5%88%B7%E6%9C%BA/Redmi%20Note%2012%20Turbo/MIUI_Global/RU/miui_MARBLERUGlobal_V14.0.5.0.TMRRUXM_173548b2fa_13.0.zip">卡刷包链接</a></td>
<td align="center"><a href="https://cloud.lm379.cn/d/%E5%88%B7%E6%9C%BA/Redmi%20Note%2012%20Turbo/MIUI_Global/RU/marble_ru_global_images_V14.0.5.0.TMRRUXM_20230807.0000.00_13.0_ru_dc73984090.tgz">线刷包链接</a></td>
</tr>
<tr>
<td align="center">V14.0.6.0</td>
<td align="center"><a href="https://cloud.lm379.cn/d/%E5%88%B7%E6%9C%BA/Redmi%20Note%2012%20Turbo/MIUI_Global/RU/miui_MARBLERUGlobal_V14.0.6.0.TMRRUXM_5ba4c25792_13.0.zip">卡刷包链接</a></td>
<td align="center"><a href="https://cloud.lm379.cn/d/%E5%88%B7%E6%9C%BA/Redmi%20Note%2012%20Turbo/MIUI_Global/RU/marble_ru_global_images_V14.0.6.0.TMRRUXM_20231016.0000.00_13.0_ru_68d28350f6.tgz">线刷包链接</a></td>
</tr>
</tbody></table>
<h3 id="HyperOS-俄罗斯版"><a href="#HyperOS-俄罗斯版" class="headerlink" title="HyperOS 俄罗斯版"></a>HyperOS 俄罗斯版</h3><table>
<thead>
<tr>
<th align="center">版本号</th>
<th align="center">卡刷包</th>
<th align="center">线刷包</th>
</tr>
</thead>
<tbody><tr>
<td align="center">OS1.0.1.0</td>
<td align="center"><a href="https://cloud.lm379.cn/d/%E5%88%B7%E6%9C%BA/Redmi%20Note%2012%20Turbo/Hyper%20OS_Global//RU/miui_MARBLERUGlobal_OS1.0.1.0.UMRRUXM_bc53430177_14.0.zip">卡刷包链接</a></td>
<td align="center"><a href="https://cloud.lm379.cn/d/%E5%88%B7%E6%9C%BA/Redmi%20Note%2012%20Turbo/Hyper%20OS_Global//RU/marble_ru_global_images_OS1.0.1.0.UMRRUXM_20240104.0000.00_14.0_ru_9dac140c35.tgz">卡刷包链接</a></td>
</tr>
</tbody></table>
<h2 id="土耳其版"><a href="#土耳其版" class="headerlink" title="土耳其版"></a>土耳其版</h2><h3 id="MIUI-土耳其版"><a href="#MIUI-土耳其版" class="headerlink" title="MIUI 土耳其版"></a>MIUI 土耳其版</h3><table>
<thead>
<tr>
<th align="center">版本号</th>
<th align="center">卡刷包</th>
<th align="center">线刷包</th>
</tr>
</thead>
<tbody><tr>
<td align="center">V14.0.1.0</td>
<td align="center"><a href="https://cloud.lm379.cn/d/%E5%88%B7%E6%9C%BA/Redmi%20Note%2012%20Turbo/MIUI_Global/TR/miui_MARBLETRGlobal_V14.0.1.0.TMRTRXM_0e062ad8d9_13.0.zip">卡刷包链接</a></td>
<td align="center"><a href="https://cloud.lm379.cn/d/%E5%88%B7%E6%9C%BA/Redmi%20Note%2012%20Turbo/MIUI_Global/TR/marble_tr_global_images_V14.0.1.0.TMRTRXM_20230411.0000.00_13.0_tr_9db2d6fa6f.tgz">线刷包链接</a></td>
</tr>
<tr>
<td align="center">V14.0.3.0</td>
<td align="center"><a href="https://cloud.lm379.cn/d/%E5%88%B7%E6%9C%BA/Redmi%20Note%2012%20Turbo/MIUI_Global/TR/miui_MARBLETRGlobal_V14.0.3.0.TMRTRXM_33eb65e103_13.0.zip">卡刷包链接</a></td>
<td align="center"><a href="https://cloud.lm379.cn/d/%E5%88%B7%E6%9C%BA/Redmi%20Note%2012%20Turbo/MIUI_Global/TR/marble_tr_global_images_V14.0.3.0.TMRTRXM_20230426.0000.00_13.0_tr_cd7b0068aa.tgz">线刷包链接</a></td>
</tr>
<tr>
<td align="center">V14.0.4.0</td>
<td align="center"><a href="https://cloud.lm379.cn/d/%E5%88%B7%E6%9C%BA/Redmi%20Note%2012%20Turbo/MIUI_Global/TR/miui_MARBLETRGlobal_V14.0.4.0.TMRTRXM_44f8a7a0af_13.0.zip">卡刷包链接</a></td>
<td align="center"><a href="https://cloud.lm379.cn/d/%E5%88%B7%E6%9C%BA/Redmi%20Note%2012%20Turbo/MIUI_Global/TR/marble_tr_global_images_V14.0.4.0.TMRTRXM_20230625.0000.00_13.0_tr_5baca40a87.tgz">线刷包链接</a></td>
</tr>
<tr>
<td align="center">V14.0.5.0</td>
<td align="center"><a href="https://cloud.lm379.cn/d/%E5%88%B7%E6%9C%BA/Redmi%20Note%2012%20Turbo/MIUI_Global/TR/miui_MARBLETRGlobal_V14.0.5.0.TMRTRXM_057da52d74_13.0.zip">卡刷包链接</a></td>
<td align="center"><a href="https://cloud.lm379.cn/d/%E5%88%B7%E6%9C%BA/Redmi%20Note%2012%20Turbo/MIUI_Global/TR/marble_tr_global_images_V14.0.5.0.TMRTRXM_20230814.0000.00_13.0_tr_b8da5e586b.tgz">线刷包链接</a></td>
</tr>
<tr>
<td align="center">V14.0.6.0</td>
<td align="center"><a href="https://cloud.lm379.cn/d/%E5%88%B7%E6%9C%BA/Redmi%20Note%2012%20Turbo/MIUI_Global/TR/miui_MARBLETRGlobal_V14.0.6.0.TMRTRXM_35304ddf49_13.0.zip">卡刷包链接</a></td>
<td align="center"><a href="https://cloud.lm379.cn/d/%E5%88%B7%E6%9C%BA/Redmi%20Note%2012%20Turbo/MIUI_Global/TR/marble_tr_global_images_V14.0.6.0.TMRTRXM_20231023.0000.00_13.0_tr_d908d6fd3b.tgz">线刷包链接</a></td>
</tr>
</tbody></table>
<h3 id="HyperOS-土耳其版"><a href="#HyperOS-土耳其版" class="headerlink" title="HyperOS 土耳其版"></a>HyperOS 土耳其版</h3><table>
<thead>
<tr>
<th align="center">版本号</th>
<th align="center">卡刷包</th>
<th align="center">线刷包</th>
</tr>
</thead>
<tbody><tr>
<td align="center">OS1.0.2.0</td>
<td align="center"><a href="https://cloud.lm379.cn/d/%E5%88%B7%E6%9C%BA/Redmi%20Note%2012%20Turbo/Hyper%20OS_Global//TR/miui_MARBLETRGlobal_OS1.0.2.0.UMRTRXM_76afa5d49c_14.0.zip">卡刷包链接</a></td>
<td align="center"><a href="https://cloud.lm379.cn/d/%E5%88%B7%E6%9C%BA/Redmi%20Note%2012%20Turbo/Hyper%20OS_Global/TR/marble_tr_global_images_OS1.0.2.0.UMRTRXM_20240112.0000.00_14.0_tr_c34cdccb63.tgz">线刷包链接</a></td>
</tr>
</tbody></table>
]]></content>
      <tags>
        <tag>Redmi Note12 Turbo</tag>
      </tags>
  </entry>
  <entry>
    <title>使用Cloudflare saas接入cloudflare cdn保护我们的网站</title>
    <url>/2024/06/25/%E4%BD%BF%E7%94%A8Cloudflare-saas%E6%8E%A5%E5%85%A5cloudflare-cdn%E4%BF%9D%E6%8A%A4%E6%88%91%E4%BB%AC%E7%9A%84%E7%BD%91%E7%AB%99/</url>
    <content><![CDATA[]]></content>
      <tags>
        <tag>cdn</tag>
        <tag>cloudflare</tag>
      </tags>
  </entry>
  <entry>
    <title>安卓系统纯本地运行植物大战僵尸杂交版</title>
    <url>/2024/05/20/%E5%AE%89%E5%8D%93%E7%B3%BB%E7%BB%9F%E7%BA%AF%E6%9C%AC%E5%9C%B0%E8%BF%90%E8%A1%8C%E6%A4%8D%E7%89%A9%E5%A4%A7%E6%88%98%E5%83%B5%E5%B0%B8%E6%9D%82%E4%BA%A4%E7%89%88/</url>
    <content><![CDATA[<p>原文写到一半发现了点问题，故删除原文，等后续有空了会再发</p>
<p>杂交版原作者是<a href="https://space.bilibili.com/97213827">@潜艇伟伟迷</a>，本人仅转载资源，如有侵权请联系我删除</p>
<h2 id="不限速下载链接"><a href="#不限速下载链接" class="headerlink" title="不限速下载链接"></a>不限速下载链接</h2><h3 id="杂交版V2-2下载链接"><a href="#杂交版V2-2下载链接" class="headerlink" title="杂交版V2.2下载链接"></a>杂交版V2.2下载链接</h3><ul>
<li>原作者动态 <a href="https://www.bilibili.com/opus/950559438973960216">潜艇伟伟迷的动态 - 哔哩哔哩 (bilibili.com)</a></li>
<li>个人网盘分发 <a href="https://pan.lm379.cn/d/%E6%B8%B8%E6%88%8F/PVZ/%E6%A4%8D%E7%89%A9%E5%A4%A7%E6%88%98%E5%83%B5%E5%B0%B8%E6%9D%82%E4%BA%A4%E7%89%88v2.2.zip">PVZ | lm379</a></li>
</ul>
<h3 id="杂交版V2-1下载链接"><a href="#杂交版V2-1下载链接" class="headerlink" title="杂交版V2.1下载链接"></a>杂交版V2.1下载链接</h3><ul>
<li>原作者动态 <a href="https://www.bilibili.com/opus/942372926336794629">潜艇伟伟迷的动态 - 哔哩哔哩 (bilibili.com)</a></li>
<li>个人网盘分发 <a href="https://pan.lm379.cn/%E6%B8%B8%E6%88%8F/PVZ">PVZ | lm379</a></li>
</ul>
]]></content>
      <categories>
        <category>游戏</category>
      </categories>
      <tags>
        <tag>植物大战僵尸</tag>
      </tags>
  </entry>
</search>
